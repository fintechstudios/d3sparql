{"version":3,"file":"d3sparql.amd.js","sources":["../d3sparql.js"],"sourcesContent":["//\n// d3sparql.js - utilities for visualizing SPARQL results with the D3 library\n//\n//   Web site: http://github.com/ktym/d3sparql/\n//   Copyright: 2013-2015 (C) Toshiaki Katayama (ktym@dbcls.jp)\n//   License: BSD license (same as D3.js)\n//   Initial version: 2013-01-28\n//\n\nimport d3 from 'd3';\n\nconst d3sparql = {\n  version: \"d3sparql.js version 2018-05-04\",\n  debug: false  // set to true for showing debug information\n}\n\n\n/*\n  Execute a SPARQL query and pass the result to a given callback function\n\n  Synopsis:\n    <!DOCTYPE html>\n    <meta charset=\"utf-8\">\n    <html>\n     <head>\n      <script src=\"http://d3js.org/d3.v3.min.js\"></script>\n      <script src=\"d3sparql.js\"></script>\n      <script>\n       function exec() {\n         let endpoint = d3.select(\"#endpoint\").property(\"value\")\n         let sparql = d3.select(\"#sparql\").property(\"value\")\n         d3sparql.query(endpoint, sparql, render)\n       }\n       function render(json) {\n         // set options and call the d3sparql.xxxxx visualization methods in this library ...\n         let config = {\n          \"margin\": {\"top\": 10, \"right\": 10, \"bottom\": 10, \"left\": 10},\n          \"selector\": \"#result\",\n          ...\n         }\n         d3sparql.xxxxx(json, config)\n       }\n      </script>\n      <style>\n      <!-- customize CSS -->\n      </style>\n     </head>\n     <body onload=\"exec()\">\n      <form style=\"display:none\">\n       <input id=\"endpoint\" value=\"http://dbpedia.org/sparql\" type=\"text\">\n       <textarea id=\"sparql\">\n        PREFIX ...\n        SELECT ...\n        WHERE { ... }\n       </textarea>\n      </form>\n      <div id=\"result\"></div>\n     </body>\n    </html>\n*/\nd3sparql.fetch = function(url, callback) {\n  if (d3sparql.debug) { console.log(url) }\n  let mime = \"application/sparql-results+json\"\n  d3.xhr(url, mime, function(request) {\n    let json = request.responseText\n    if (d3sparql.debug) { console.log(json) }\n    callback(JSON.parse(json))\n  })\n/*\n  // d3.json sometimes fails to retrieve \"application/sparql-results+json\" as it is designed for \"application/json\"\n  d3.json(url, function(error, json) {\n    if (d3sparql.debug) { console.log(error) }\n    if (d3sparql.debug) { console.log(json) }\n    callback(json)\n  })\n*/\n}\n\nd3sparql.query = function(endpoint, sparql, callback) {\n  let url = endpoint + \"?query=\" + encodeURIComponent(sparql)\n  if (d3sparql.debug) { console.log(endpoint) }\n  d3sparql.fetch(url, callback)\n}\n\n\n\n/*\n  Convert sparql-results+json object into a JSON graph in the {\"nodes\": [], \"links\": []} form.\n  Suitable for d3.layout.force(), d3.layout.sankey() etc.\n\n  Options:\n    config = {\n      \"key1\":   \"node1\",       // SPARQL letiable name for node1 (optional; default is the 1st letiable)\n      \"key2\":   \"node2\",       // SPARQL letiable name for node2 (optional; default is the 2nd letibale)\n      \"label1\": \"node1label\",  // SPARQL letiable name for the label of node1 (optional; default is the 3rd letiable)\n      \"label2\": \"node2label\",  // SPARQL letiable name for the label of node2 (optional; default is the 4th letiable)\n      \"value1\": \"node1value\",  // SPARQL letiable name for the value of node1 (optional; default is the 5th letiable)\n      \"value2\": \"node2value\"   // SPARQL letiable name for the value of node2 (optional; default is the 6th letiable)\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.forcegraph(json, config)\n      d3sparql.sankey(json, config)\n    }\n\n  TODO:\n    Should follow the convention in the miserables.json https://gist.github.com/mbostock/4062045 to contain group for nodes and value for edges.\n*/\nd3sparql.graph = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"key1\":   config.key1   || head[0] || \"key1\",\n    \"key2\":   config.key2   || head[1] || \"key2\",\n    \"label1\": config.label1 || head[2] || false,\n    \"label2\": config.label2 || head[3] || false,\n    \"value1\": config.value1 || head[4] || false,\n    \"value2\": config.value2 || head[5] || false,\n  }\n  let graph = {\n    \"nodes\": [],\n    \"links\": []\n  }\n  let check = d3.map()\n  let index = 0\n  for (let i = 0; i < data.length; i++) {\n    let key1 = data[i][opts.key1].value\n    let key2 = data[i][opts.key2].value\n    let label1 = opts.label1 ? data[i][opts.label1].value : key1\n    let label2 = opts.label2 ? data[i][opts.label2].value : key2\n    let value1 = opts.value1 ? data[i][opts.value1].value : false\n    let value2 = opts.value2 ? data[i][opts.value2].value : false\n    if (!check.has(key1)) {\n      graph.nodes.push({\"key\": key1, \"label\": label1, \"value\": value1})\n      check.set(key1, index)\n      index++\n    }\n    if (!check.has(key2)) {\n      graph.nodes.push({\"key\": key2, \"label\": label2, \"value\": value2})\n      check.set(key2, index)\n      index++\n    }\n    graph.links.push({\"source\": check.get(key1), \"target\": check.get(key2)})\n  }\n  if (d3sparql.debug) { console.log(JSON.stringify(graph)) }\n  return graph\n}\n\n/*\n  Convert sparql-results+json object into a JSON tree of {\"name\": name, \"value\": size, \"children\": []} format like in the flare.json file.\n\n  Suitable for d3.layout.hierarchy() family\n    * cluster:    d3sparql.dendrogram()\n    * pack:       d3sparql.circlepack()\n    * partition:  d3sparql.sunburst()\n    * tree:       d3sparql.roundtree()\n    * treemap:    d3sparql.treemap(), d3sparql.treemapzoom()\n\n  Options:\n    config = {\n      \"root\":   \"root_name\",    // SPARQL letiable name for root node (optional; default is the 1st letiable)\n      \"parent\": \"parent_name\",  // SPARQL letiable name for parent node (optional; default is the 2nd letiable)\n      \"child\":  \"child_name\",   // SPARQL letiable name for child node (ptional; default is the 3rd letiable)\n      \"value\":  \"value_name\"    // SPARQL letiable name for numerical value of the child node (optional; default is the 4th letiable or \"value\")\n    }\n\n  Synopsis:\n    d3sparql.sparql(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.roundtree(json, config)\n      d3sparql.dendrogram(json, config)\n      d3sparql.sunburst(json, config)\n      d3sparql.treemap(json, config)\n      d3sparql.treemapzoom(json, config)\n    }\n*/\nd3sparql.tree = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"root\":   config.root   || head[0],\n    \"parent\": config.parent || head[1],\n    \"child\":  config.child  || head[2],\n    \"value\":  config.value  || head[3] || \"value\",\n  }\n\n  let pair = d3.map()\n  let size = d3.map()\n  let root = data[0][opts.root].value\n  let parent = true;\n  let child = true;\n  let children = true\n  for (let i = 0; i < data.length; i++) {\n    parent = data[i][opts.parent].value\n    child = data[i][opts.child].value\n    if (parent != child) {\n      if (pair.has(parent)) {\n        children = pair.get(parent)\n        children.push(child)\n      } else {\n        children = [child]\n      }\n      pair.set(parent, children)\n      if (data[i][opts.value]) {\n        size.set(child, data[i][opts.value].value)\n      }\n    }\n  }\n  function traverse(node) {\n    let list = pair.get(node)\n    if (list) {\n      let children = list.map(function(d) { return traverse(d) })\n      // sum of values of children\n      let subtotal = d3.sum(children, function(d) { return d.value })\n      // add a value of parent if exists\n      let total = d3.sum([subtotal, size.get(node)])\n      return {\"name\": node, \"children\": children, \"value\": total}\n    } else {\n      return {\"name\": node, \"value\": size.get(node) || 1}\n    }\n  }\n  let tree = traverse(root)\n\n  if (d3sparql.debug) { console.log(JSON.stringify(tree)) }\n  return tree\n}\n\n/*\n  Rendering sparql-results+json object containing multiple rows into a HTML table\n\n  Options:\n    config = {\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.htmltable(json, config)\n    }\n\n  CSS:\n    <style>\n    table {\n      margin: 10px;\n    }\n    th {\n      background: #eeeeee;\n    }\n    th:first-letter {\n       text-transform: capitalize;\n    }\n    </style>\n*/\nd3sparql.htmltable = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"selector\": config.selector || null\n  }\n\n  let table = d3sparql.select(opts.selector, \"htmltable\").append(\"table\").attr(\"class\", \"table table-bordered\")\n  let thead = table.append(\"thead\")\n  let tbody = table.append(\"tbody\")\n  thead.append(\"tr\")\n    .selectAll(\"th\")\n    .data(head)\n    .enter()\n    .append(\"th\")\n    .text(function(col) { return col })\n  let rows = tbody.selectAll(\"tr\")\n    .data(data)\n    .enter()\n    .append(\"tr\")\n  let cells = rows.selectAll(\"td\")\n    .data(function(row) {\n      return head.map(function(col) {\n        return row[col] ? row[col].value : \"\"\n      })\n    })\n    .enter()\n    .append(\"td\")\n    .text(function(val) { return val })\n\n  // default CSS\n  table.style({\n    \"margin\": \"10px\"\n  })\n  table.selectAll(\"th\").style({\n    \"background\": \"#eeeeee\",\n    \"text-transform\": \"capitalize\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object containing one row into a HTML table\n\n  Options:\n    config = {\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.htmlhash(json, config)\n    }\n\n  CSS:\n    <style>\n    table {\n      margin: 10px;\n    }\n    th {\n      background: #eeeeee;\n    }\n    th:first-letter {\n       text-transform: capitalize;\n    }\n    </style>\n*/\nd3sparql.htmlhash = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings[0]\n\n  let opts = {\n    \"selector\": config.selector || null\n  }\n\n  let table = d3sparql.select(opts.selector, \"htmlhash\").append(\"table\").attr(\"class\", \"table table-bordered\")\n  let tbody = table.append(\"tbody\")\n  let row = tbody.selectAll(\"tr\")\n    .data(function() {\n       return head.map(function(col) {\n         return {\"head\": col, \"data\": data[col] ? data[col].value : \"\"}\n       })\n     })\n    .enter()\n    .append(\"tr\")\n  row.append(\"th\")\n    .text(function(d) { return d.head })\n  row.append(\"td\")\n    .text(function(d) { return d.data })\n\n  // default CSS\n  table.style({\n    \"margin\": \"10px\"\n  })\n  table.selectAll(\"th\").style({\n    \"background\": \"#eeeeee\",\n    \"text-transform\": \"capitalize\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object into a bar chart\n\n  References:\n    http://bl.ocks.org/mbostock/3885304\n    http://bl.ocks.org/mbostock/4403522\n\n  Options:\n    config = {\n      \"label_x\":  \"Prefecture\",  // label for x-axis (optional; default is same as let_x)\n      \"label_y\":  \"Area\",        // label for y-axis (optional; default is same as let_y)\n      \"let_x\":    \"pref\",        // SPARQL letiable name for x-axis (optional; default is the 1st letiable)\n      \"let_y\":    \"area\",        // SPARQL letiable name for y-axis (optional; default is the 2nd letiable)\n      \"width\":    850,           // canvas width (optional)\n      \"height\":   300,           // canvas height (optional)\n      \"margin\":   40,            // canvas margin (optional)\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.barchart(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .bar {\n      fill: steelblue;\n    }\n    .bar:hover {\n      fill: brown;\n    }\n    .axis {\n      font: 10px sans-serif;\n    }\n    .axis path,\n    .axis line {\n      fill: none;\n      stroke: #000000;\n      shape-rendering: crispEdges;\n    }\n    .x.axis path {\n      display: none;\n    }\n    </style>\n*/\nd3sparql.barchart = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"label_x\":  config.label_x  || head[0],\n    \"label_y\":  config.label_y  || head[1],\n    \"let_x\":    config.let_x    || head[0],\n    \"let_y\":    config.let_y    || head[1],\n    \"width\":    config.width    || 750,\n    \"height\":   config.height   || 300,\n    \"margin\":   config.margin   || 80,  // TODO: to make use of {top: 10, right: 10, bottom: 80, left: 80}\n    \"selector\": config.selector || null\n  }\n\n  let scale_x = d3.scale.ordinal().rangeRoundBands([0, opts.width - opts.margin], 0.1)\n  let scale_y = d3.scale.linear().range([opts.height - opts.margin, 0])\n  let axis_x = d3.svg.axis().scale(scale_x).orient(\"bottom\")\n  let axis_y = d3.svg.axis().scale(scale_y).orient(\"left\")  // .ticks(10, \"%\")\n  scale_x.domain(data.map(function(d) { return d[opts.let_x].value }))\n  scale_y.domain(d3.extent(data, function(d) { return parseInt(d[opts.let_y].value) }))\n\n  let svg = d3sparql.select(opts.selector, \"barchart\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n//    .append(\"g\")\n//    .attr(\"transform\", \"translate(\" + opts.margin + \",\" + 0 + \")\")\n\n  let ax = svg.append(\"g\")\n    .attr(\"class\", \"axis x\")\n    .attr(\"transform\", \"translate(\" + opts.margin + \",\" + (opts.height - opts.margin) + \")\")\n    .call(axis_x)\n  let ay = svg.append(\"g\")\n    .attr(\"class\", \"axis y\")\n    .attr(\"transform\", \"translate(\" + opts.margin + \",0)\")\n    .call(axis_y)\n  let bar = svg.selectAll(\".bar\")\n    .data(data)\n    .enter()\n    .append(\"rect\")\n    .attr(\"transform\", \"translate(\" + opts.margin + \",\" + 0 + \")\")\n    .attr(\"class\", \"bar\")\n    .attr(\"x\", function(d) { return scale_x(d[opts.let_x].value) })\n    .attr(\"width\", scale_x.rangeBand())\n    .attr(\"y\", function(d) { return scale_y(d[opts.let_y].value) })\n    .attr(\"height\", function(d) { return opts.height - scale_y(parseInt(d[opts.let_y].value)) - opts.margin })\n/*\n    .call(function(e) {\n      e.each(function(d) {\n        console.log(parseInt(d[opts.let_y].value))\n      })\n    })\n*/\n  ax.selectAll(\"text\")\n    .attr(\"dy\", \".35em\")\n    .attr(\"x\", 10)\n    .attr(\"y\", 0)\n    .attr(\"transform\", \"rotate(90)\")\n    .style(\"text-anchor\", \"start\")\n  ax.append(\"text\")\n    .attr(\"class\", \"label\")\n    .text(opts.label_x)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"transform\", \"translate(\" + ((opts.width - opts.margin) / 2) + \",\" + (opts.margin - 5) + \")\")\n  ay.append(\"text\")\n    .attr(\"class\", \"label\")\n    .text(opts.label_y)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"x\", 0 - (opts.height / 2))\n    .attr(\"y\", 0 - (opts.margin - 20))\n\n  // default CSS/SVG\n  bar.attr({\n    \"fill\": \"steelblue\",\n  })\n  svg.selectAll(\".axis\").attr({\n    \"stroke\": \"black\",\n    \"fill\": \"none\",\n    \"shape-rendering\": \"crispEdges\",\n  })\n  svg.selectAll(\"text\").attr({\n    \"stroke\": \"none\",\n    \"fill\": \"black\",\n    \"font-size\": \"8pt\",\n    \"font-family\": \"sans-serif\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object into a pie chart\n\n  References:\n    http://bl.ocks.org/mbostock/3887235 Pie chart\n    http://bl.ocks.org/mbostock/3887193 Donut chart\n\n  Options:\n    config = {\n      \"label\":    \"pref\",    // SPARQL letiable name for slice label (optional; default is the 1st letiable)\n      \"size\":     \"area\",    // SPARQL letiable name for slice value (optional; default is the 2nd letiable)\n      \"width\":    700,       // canvas width (optional)\n      \"height\":   600,       // canvas height (optional)\n      \"margin\":   10,        // canvas margin (optional)\n      \"hole\":     50,        // radius size of a center hole (optional; 0 for pie, r > 0 for doughnut)\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.piechart(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .label {\n      font: 10px sans-serif;\n    }\n    .arc path {\n      stroke: #ffffff;\n    }\n    </style>\n*/\nd3sparql.piechart = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"label\":    config.label    || head[0],\n    \"size\":     config.size     || head[1],\n    \"width\":    config.width    || 700,\n    \"height\":   config.height   || 700,\n    \"margin\":   config.margin   || 10,\n    \"hole\":     config.hole     || 100,\n    \"selector\": config.selector || null\n  }\n\n  let radius = Math.min(opts.width, opts.height) / 2 - opts.margin\n  let hole = Math.max(Math.min(radius - 50, opts.hole), 0)\n  let color = d3.scale.category20()\n\n  let arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(hole)\n\n  let pie = d3.layout.pie()\n    //.sort(null)\n    .value(function(d) { return d[opts.size].value })\n\n  let svg = d3sparql.select(opts.selector, \"piechart\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + opts.width / 2 + \",\" + opts.height / 2 + \")\")\n\n  let g = svg.selectAll(\".arc\")\n    .data(pie(data))\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"arc\")\n  let slice = g.append(\"path\")\n    .attr(\"d\", arc)\n    .attr(\"fill\", function(d, i) { return color(i) })\n  let text = g.append(\"text\")\n    .attr(\"class\", \"label\")\n    .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\" })\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"middle\")\n    .text(function(d) { return d.data[opts.label].value })\n\n  // default CSS/SVG\n  slice.attr({\n    \"stroke\": \"#ffffff\",\n  })\n  // TODO: not working?\n  svg.selectAll(\"text\").attr({\n    \"stroke\": \"none\",\n    \"fill\": \"black\",\n    \"font-size\": \"20px\",\n    \"font-family\": \"sans-serif\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object into a scatter plot\n\n  References:\n    http://bl.ocks.org/mbostock/3244058\n\n  Options:\n    config = {\n      \"label_x\":  \"Size\",    // label for x-axis (optional; default is same as let_x)\n      \"label_y\":  \"Count\",   // label for y-axis (optional; default is same as let_y)\n      \"let_x\":    \"size\",    // SPARQL letiable name for x-axis values (optional; default is the 1st letiable)\n      \"let_y\":    \"count\",   // SPARQL letiable name for y-axis values (optional; default is the 2nd letiable)\n      \"let_r\":    \"volume\",  // SPARQL letiable name for radius (optional; default is the 3rd letiable)\n      \"min_r\":    1,         // minimum radius size (optional; default is 1)\n      \"max_r\":    20,        // maximum radius size (optional; default is 20)\n      \"width\":    850,       // canvas width (optional)\n      \"height\":   300,       // canvas height (optional)\n      \"margin_x\": 80,        // canvas margin x (optional)\n      \"margin_y\": 40,        // canvas margin y (optional)\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.scatterplot(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .label {\n      font-size: 10pt;\n    }\n    .node circle {\n      stroke: black;\n      stroke-width: 1px;\n      fill: pink;\n      opacity: 0.5;\n    }\n    </style>\n*/\nd3sparql.scatterplot = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"label_x\":  config.label_x  || head[0] || \"x\",\n    \"label_y\":  config.label_y  || head[1] || \"y\",\n    \"label_r\":  config.label_r  || head[2] || \"r\",\n    \"let_x\":    config.let_x    || head[0],\n    \"let_y\":    config.let_y    || head[1],\n    \"let_r\":    config.let_r    || head[2] || 5,\n    \"min_r\":    config.min_r    || 1,\n    \"max_r\":    config.max_r    || 20,\n    \"width\":    config.width    || 850,\n    \"height\":   config.height   || 300,\n    \"margin_x\": config.margin_x || 80,\n    \"margin_y\": config.margin_y || 40,\n    \"selector\": config.selector || null\n  }\n  let extent_x = d3.extent(data, function(d) { return parseInt(d[opts.let_x].value) })\n  let extent_y = d3.extent(data, function(d) { return parseInt(d[opts.let_y].value) })\n  let extent_r = d3.extent(data, function(d) { return parseInt(d[opts.let_r] ? d[opts.let_r].value : opts.let_r) })\n  let scale_x = d3.scale.linear().range([opts.margin_x, opts.width - opts.margin_x]).domain(extent_x)\n  let scale_y = d3.scale.linear().range([opts.height - opts.margin_y, opts.margin_y]).domain(extent_y)\n  let scale_r = d3.scale.linear().range([opts.min_r, opts.max_r]).domain(extent_r)\n  let axis_x = d3.svg.axis().scale(scale_x)\n  let axis_y = d3.svg.axis().scale(scale_y).orient(\"left\")\n\n  let svg = d3sparql.select(opts.selector, \"scatterplot\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n  let circle = svg.selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", \"node\")\n    .attr(\"cx\", function(d) { return scale_x(d[opts.let_x].value) })\n    .attr(\"cy\", function(d) { return scale_y(d[opts.let_y].value) })\n    .attr(\"r\",  function(d) { return scale_r(d[opts.let_r] ? d[opts.let_r].value : opts.let_r) })\n    .attr(\"opacity\", 0.5)\n    .append(\"title\")\n    .text(function(d) { return d[opts.label_r] ? d[opts.label_r].value : opts.label_r })\n  let ax = svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + (opts.height - opts.margin_y) + \")\")\n    .call(axis_x)\n  let ay = svg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + opts.margin_x + \",0)\")\n    .call(axis_y)\n  ax.append(\"text\")\n    .attr(\"class\", \"label\")\n    .text(opts.label_x)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"transform\", \"translate(\" + ((opts.width - opts.margin_x) / 2) + \",\" + (opts.margin_y - 5) + \")\")\n  ay.append(\"text\")\n    .attr(\"class\", \"label\")\n    .text(opts.label_y)\n    .style(\"text-anchor\", \"middle\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"x\", 0 - (opts.height / 2))\n    .attr(\"y\", 0 - (opts.margin_x - 20))\n\n  // default CSS/SVG\n  ax.attr({\n    \"stroke\": \"black\",\n    \"fill\": \"none\",\n  })\n  ay.attr({\n    \"stroke\": \"black\",\n    \"fill\": \"none\",\n  })\n  // This doesn't work with .append(\"circle\") with .append(\"title\") for tooltip\n  circle.attr({\n    \"stroke\": \"gray\",\n    \"stroke-width\": \"1px\",\n    \"fill\": \"lightblue\",\n    \"opacity\": 0.5,\n  })\n  //svg.selectAll(\".label\").attr({\n  svg.selectAll(\"text\").attr({\n    \"stroke\": \"none\",\n    \"fill\": \"black\",\n    \"font-size\": \"8pt\",\n    \"font-family\": \"sans-serif\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object into a force graph\n\n  References:\n    http://bl.ocks.org/mbostock/4062045\n\n  Options:\n    config = {\n      \"radius\":   12,        // static value or a function to calculate radius of nodes (optional)\n      \"charge\":   -250,      // force between nodes (optional; negative: repulsion, positive: attraction)\n      \"distance\": 30,        // target distance between linked nodes (optional)\n      \"width\":    1000,      // canvas width (optional)\n      \"height\":   500,       // canvas height (optional)\n      \"label\":    \"name\",    // SPARQL letiable name for node labels (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.graph() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.forcegraph(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .link {\n      stroke: #999999;\n    }\n    .node {\n      stroke: black;\n      opacity: 0.5;\n    }\n    circle.node {\n      stroke-width: 1px;\n      fill: lightblue;\n    }\n    text.node {\n      font-family: \"sans-serif\";\n      font-size: 8px;\n    }\n    </style>\n\n  TODO:\n    Try other d3.layout.force options.\n*/\nd3sparql.forcegraph = function(json, config) {\n  config = config || {}\n\n  let graph = (json.head && json.results) ? d3sparql.graph(json, config) : json\n\n  let scale = d3.scale.linear()\n    .domain(d3.extent(graph.nodes, function(d) { return parseFloat(d.value) }))\n    .range([1, 20])\n\n  let opts = {\n    \"radius\":    config.radius    || function(d) { return d.value ? scale(d.value) : 1 + d.label.length },\n    \"charge\":    config.charge    || -500,\n    \"distance\":  config.distance  || 50,\n    \"width\":     config.width     || 1000,\n    \"height\":    config.height    || 750,\n    \"label\":     config.label     || false,\n    \"selector\":  config.selector  || null\n  }\n\n  let svg = d3sparql.select(opts.selector, \"forcegraph\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n  let link = svg.selectAll(\".link\")\n    .data(graph.links)\n    .enter()\n    .append(\"line\")\n    .attr(\"class\", \"link\")\n  let node = svg.selectAll(\".node\")\n    .data(graph.nodes)\n    .enter()\n    .append(\"g\")\n  let circle = node.append(\"circle\")\n    .attr(\"class\", \"node\")\n    .attr(\"r\", opts.radius)\n  let text = node.append(\"text\")\n    .text(function(d) { return d[opts.label || \"label\"] })\n    .attr(\"class\", \"node\")\n  let force = d3.layout.force()\n    .charge(opts.charge)\n    .linkDistance(opts.distance)\n    .size([opts.width, opts.height])\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .start()\n  force.on(\"tick\", function() {\n    link.attr(\"x1\", function(d) { return d.source.x })\n        .attr(\"y1\", function(d) { return d.source.y })\n        .attr(\"x2\", function(d) { return d.target.x })\n        .attr(\"y2\", function(d) { return d.target.y })\n    text.attr(\"x\", function(d) { return d.x })\n        .attr(\"y\", function(d) { return d.y })\n    circle.attr(\"cx\", function(d) { return d.x })\n          .attr(\"cy\", function(d) { return d.y })\n  })\n  node.call(force.drag)\n\n  // default CSS/SVG\n  link.attr({\n    \"stroke\": \"#999999\",\n  })\n  circle.attr({\n    \"stroke\": \"black\",\n    \"stroke-width\": \"1px\",\n    \"fill\": \"lightblue\",\n    \"opacity\": 1,\n  })\n  text.attr({\n    \"font-size\": \"8px\",\n    \"font-family\": \"sans-serif\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object into a sanky graph\n\n  References:\n    https://github.com/d3/d3-plugins/tree/master/sankey\n    http://bost.ocks.org/mike/sankey/\n\n  Options:\n    config = {\n      \"width\":    1000,      // canvas width (optional)\n      \"height\":   900,       // canvas height (optional)\n      \"margin\":   50,        // canvas margin (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.graph() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.sankey(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .node rect {\n      cursor: move;\n      fill-opacity: .9;\n      shape-rendering: crispEdges;\n    }\n    .node text {\n      pointer-events: none;\n      text-shadow: 0 1px 0 #ffffff;\n    }\n    .link {\n      fill: none;\n      stroke: #000000;\n      stroke-opacity: .2;\n    }\n    .link:hover {\n      stroke-opacity: .5;\n    }\n    </style>\n\n  Dependencies:\n    * sankey.js\n      * Download from https://github.com/d3/d3-plugins/tree/master/sankey\n      * Put <script src=\"sankey.js\"></script> in the HTML <head> section\n*/\nd3sparql.sankey = function(json, config) {\n  config = config || {}\n\n  let graph = (json.head && json.results) ? d3sparql.graph(json, config) : json\n\n  let opts = {\n    \"width\":    config.width    || 750,\n    \"height\":   config.height   || 1200,\n    \"margin\":   config.margin   || 10,\n    \"selector\": config.selector || null\n  }\n\n  let nodes = graph.nodes\n  let links = graph.links\n  for (let i = 0; i < links.length; i++) {\n    links[i].value = 2  // TODO: fix to use values on links\n  }\n  let sankey = d3.sankey()\n    .size([opts.width, opts.height])\n    .nodeWidth(15)\n    .nodePadding(10)\n    .nodes(nodes)\n    .links(links)\n    .layout(32)\n  let path = sankey.link()\n  let color = d3.scale.category20()\n  let svg = d3sparql.select(opts.selector, \"sankey\").append(\"svg\")\n    .attr(\"width\", opts.width + opts.margin * 2)\n    .attr(\"height\", opts.height + opts.margin * 2)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + opts.margin + \",\" + opts.margin + \")\")\n  let link = svg.selectAll(\".link\")\n    .data(links)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", path)\n    .attr(\"stroke-width\", function(d) { return Math.max(1, d.dy) })\n    .sort(function(a, b) { return b.dy - a.dy })\n  let node = svg.selectAll(\".node\")\n    .data(nodes)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\" })\n    .call(d3.behavior.drag()\n       .origin(function(d) { return d })\n       .on(\"dragstart\", function() { this.parentNode.appendChild(this) })\n       .on(\"drag\", dragmove)\n     )\n  node.append(\"rect\")\n    .attr(\"width\", function(d) { return d.dx })\n    .attr(\"height\", function(d) { return d.dy })\n    .attr(\"fill\", function(d) { return color(d.label) })\n    .attr(\"opacity\", 0.5)\n  node.append(\"text\")\n    .attr(\"x\", -6)\n    .attr(\"y\", function(d) { return d.dy/2 })\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"transform\", null)\n    .text(function(d) { return d.label })\n    .filter(function(d) { return d.x < opts.width / 2 })\n    .attr(\"x\", 6 + sankey.nodeWidth())\n    .attr(\"text-anchor\", \"start\")\n\n  // default CSS/SVG\n  link.attr({\n    \"fill\": \"none\",\n    \"stroke\": \"grey\",\n    \"opacity\": 0.5,\n  })\n\n  function dragmove(d) {\n    d3.select(this).attr(\"transform\", \"translate(\" + d.x + \",\" + (d.y = Math.max(0, Math.min(opts.height - d.dy, d3.event.y))) + \")\")\n    sankey.relayout()\n    link.attr(\"d\", path)\n  }\n}\n\n\n/*\n  Rendering sparql-results+json object into a round tree\n\n  References:\n    http://bl.ocks.org/4063550  Reingold-Tilford Tree\n\n  Options:\n    config = {\n      \"diameter\": 800,       // canvas diameter (optional)\n      \"angle\":    360,       // arc angle (optional; less than 360 for wedge)\n      \"depth\":    200,       // arc depth (optional; less than diameter/2 - label length to fit)\n      \"radius\":   5,         // node radius (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.roundtree(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .link {\n      fill: none;\n      stroke: #cccccc;\n      stroke-width: 1.5px;\n    }\n    .node circle {\n      fill: #ffffff;\n      stroke: darkgreen;\n      stroke-width: 1.5px;\n      opacity: 1;\n    }\n    .node text {\n      font-size: 10px;\n      font-family: sans-serif;\n    }\n    </style>\n*/\nd3sparql.roundtree = function(json, config) {\n  config = config || {}\n\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json\n\n  let opts = {\n    \"diameter\":  config.diameter || 800,\n    \"angle\":     config.angle    || 360,\n    \"depth\":     config.depth    || 200,\n    \"radius\":    config.radius   || 5,\n    \"selector\":  config.selector || null\n  }\n\n  let tree_layout = d3.layout.tree()\n    .size([opts.angle, opts.depth])\n    .separation(function(a, b) { return (a.parent === b.parent ? 1 : 2) / a.depth })\n  let nodes = tree_layout.nodes(tree)\n  let links = tree_layout.links(nodes)\n  let diagonal = d3.svg.diagonal.radial()\n    .projection(function(d) { return [d.y, d.x / 180 * Math.PI] })\n  let svg = d3sparql.select(opts.selector, \"roundtree\").append(\"svg\")\n    .attr(\"width\", opts.diameter)\n    .attr(\"height\", opts.diameter)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + opts.diameter / 2 + \",\" + opts.diameter / 2 + \")\")\n  let link = svg.selectAll(\".link\")\n    .data(links)\n    .enter()\n    .append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", diagonal)\n  let node = svg.selectAll(\".node\")\n    .data(nodes)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \") translate(\" + d.y + \")\" })\n  let circle = node.append(\"circle\")\n    .attr(\"r\", opts.radius)\n  let text = node.append(\"text\")\n    .attr(\"dy\", \".35em\")\n    .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\" })\n    .attr(\"transform\", function(d) { return d.x < 180 ? \"translate(8)\" : \"rotate(180) translate(-8)\" })\n    .text(function(d) { return d.name })\n\n  // default CSS/SVG\n  link.attr({\n    \"fill\": \"none\",\n    \"stroke\": \"#cccccc\",\n    \"stroke-width\": \"1.5px\",\n  })\n  circle.attr({\n    \"fill\": \"#ffffff\",\n    \"stroke\": \"steelblue\",\n    \"stroke-width\": \"1.5px\",\n    \"opacity\": 1,\n  })\n  text.attr({\n    \"font-size\": \"10px\",\n    \"font-family\": \"sans-serif\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object into a dendrogram\n\n  References:\n    http://bl.ocks.org/4063570  Cluster Dendrogram\n\n  Options:\n    config = {\n      \"width\":    900,       // canvas width (optional)\n      \"height\":   4500,      // canvas height (optional)\n      \"margin\":   300,       // width margin for labels (optional)\n      \"radius\":   5,         // radius of node circles (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.dendrogram(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .link {\n      fill: none;\n      stroke: #cccccc;\n      stroke-width: 1.5px;\n    }\n    .node circle {\n      fill: #ffffff;\n      stroke: steelblue;\n      stroke-width: 1.5px;\n      opacity: 1;\n    }\n    .node text {\n      font-size: 10px;\n      font-family: sans-serif;\n    }\n    </style>\n*/\nd3sparql.dendrogram = function(json, config) {\n  config = config || {}\n\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json\n\n  let opts = {\n    \"width\":    config.width    || 800,\n    \"height\":   config.height   || 2000,\n    \"margin\":   config.margin   || 350,\n    \"radius\":   config.radius   || 5,\n    \"selector\": config.selector || null\n  }\n\n  let cluster = d3.layout.cluster()\n    .size([opts.height, opts.width - opts.margin])\n  let diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x] })\n  let svg = d3sparql.select(opts.selector, \"dendrogram\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(40,0)\")\n  let nodes = cluster.nodes(tree)\n  let links = cluster.links(nodes)\n  let link = svg.selectAll(\".link\")\n    .data(links)\n    .enter().append(\"path\")\n    .attr(\"class\", \"link\")\n    .attr(\"d\", diagonal)\n  let node = svg.selectAll(\".node\")\n    .data(nodes)\n    .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\" })\n  let circle = node.append(\"circle\")\n    .attr(\"r\", opts.radius)\n  let text = node.append(\"text\")\n    .attr(\"dx\", function(d) { return (d.parent && d.children) ? -8 : 8 })\n    .attr(\"dy\", 5)\n    .style(\"text-anchor\", function(d) { return (d.parent && d.children) ? \"end\" : \"start\" })\n    .text(function(d) { return d.name })\n\n  // default CSS/SVG\n  link.attr({\n    \"fill\": \"none\",\n    \"stroke\": \"#cccccc\",\n    \"stroke-width\": \"1.5px\",\n  })\n  circle.attr({\n    \"fill\": \"#ffffff\",\n    \"stroke\": \"steelblue\",\n    \"stroke-width\": \"1.5px\",\n    \"opacity\": 1,\n  })\n  text.attr({\n    \"font-size\": \"10px\",\n    \"font-family\": \"sans-serif\",\n  })\n}\n\n/*\n  Rendering sparql-results+json object into a sunburst\n\n  References:\n    http://bl.ocks.org/4348373  Zoomable Sunburst\n    http://www.jasondavies.com/coffee-wheel/  Coffee Flavour Wheel\n\n  Options:\n    config = {\n      \"width\":    1000,      // canvas width (optional)\n      \"height\":   900,       // canvas height (optional)\n      \"margin\":   150,       // margin for labels (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.sunburst(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .node text {\n      font-size: 10px;\n      font-family: sans-serif;\n    }\n    .arc {\n      stroke: #ffffff;\n      fill-rule: evenodd;\n    }\n    </style>\n*/\nd3sparql.sunburst = function(json, config) {\n  config = config || {}\n\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json\n\n  let opts = {\n    \"width\":    config.width    || 1000,\n    \"height\":   config.height   || 900,\n    \"margin\":   config.margin   || 150,\n    \"selector\": config.selector || null\n  }\n\n  let radius = Math.min(opts.width, opts.height) / 2 - opts.margin\n  let x = d3.scale.linear().range([0, 2 * Math.PI])\n  let y = d3.scale.sqrt().range([0, radius])\n  let color = d3.scale.category20()\n  let svg = d3sparql.select(opts.selector, \"sunburst\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + opts.width/2 + \",\" + opts.height/2 + \")\");\n  let arc = d3.svg.arc()\n    .startAngle(function(d)  { return Math.max(0, Math.min(2 * Math.PI, x(d.x))) })\n    .endAngle(function(d)    { return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))) })\n    .innerRadius(function(d) { return Math.max(0, y(d.y)) })\n    .outerRadius(function(d) { return Math.max(0, y(d.y + d.dy)) })\n  let partition = d3.layout.partition()\n    .value(function(d) {return d.value})\n  let nodes = partition.nodes(tree)\n  let path = svg.selectAll(\"path\")\n    .data(nodes)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", arc)\n    .attr(\"class\", \"arc\")\n    .style(\"fill\", function(d) { return color((d.children ? d : d.parent).name) })\n    .on(\"click\", click)\n  let text = svg.selectAll(\"text\")\n    .data(nodes)\n    .enter()\n    .append(\"text\")\n    .attr(\"transform\", function(d) {\n      let rotate = x(d.x + d.dx/2) * 180 / Math.PI - 90\n      return \"rotate(\" + rotate + \") translate(\" + y(d.y) + \")\"\n    })\n    .attr(\"dx\", \".5em\")\n    .attr(\"dy\", \".35em\")\n    .text(function(d) { return d.name })\n    .on(\"click\", click)\n\n  // default CSS/SVG\n  path.attr({\n    \"stroke\": \"#ffffff\",\n    \"fill-rule\": \"evenodd\",\n  })\n  text.attr({\n    \"font-size\": \"10px\",\n    \"font-family\": \"sans-serif\",\n  })\n\n  function click(d) {\n    path.transition()\n      .duration(750)\n      .attrTween(\"d\", arcTween(d))\n    text.style(\"visibility\", function (e) {\n        // required for showing labels just before the transition when zooming back to the upper level\n        return isParentOf(d, e) ? null : d3.select(this).style(\"visibility\")\n      })\n      .transition()\n      .duration(750)\n      .attrTween(\"transform\", function(d) {\n        return function() {\n          let rotate = x(d.x + d.dx / 2) * 180 / Math.PI - 90\n          return \"rotate(\" + rotate + \") translate(\" + y(d.y) + \")\"\n        }\n      })\n      .each(\"end\", function(e) {\n        // required for hiding labels just after the transition when zooming down to the lower level\n        d3.select(this).style(\"visibility\", isParentOf(d, e) ? null : \"hidden\")\n      })\n  }\n  function maxDepth(d) {\n    return d.children ? Math.max.apply(Math, d.children.map(maxDepth)) : d.y + d.dy\n  }\n  function arcTween(d) {\n    let xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n        yd = d3.interpolate(y.domain(), [d.y, maxDepth(d)]),\n        yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius])\n    return function(d) {\n      return function(t) {\n        x.domain(xd(t))\n        y.domain(yd(t)).range(yr(t))\n        return arc(d)\n      }\n    }\n  }\n  function isParentOf(p, c) {\n    if (p === c) return true\n    if (p.children) {\n      return p.children.some(function(d) {\n        return isParentOf(d, c)\n      })\n    }\n    return false\n  }\n}\n\n/*\n  Rendering sparql-results+json object into a circle pack\n\n  References:\n    http://mbostock.github.com/d3/talk/20111116/pack-hierarchy.html  Circle Packing\n\n  Options:\n    config = {\n      \"width\":    800,       // canvas width (optional)\n      \"height\":   800,       // canvas height (optional)\n      \"diameter\": 700,       // diamieter of the outer circle (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.circlepack(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    text {\n      font-size: 11px;\n      pointer-events: none;\n    }\n    text.parent {\n      fill: #1f77b4;\n    }\n    circle {\n      fill: #cccccc;\n      stroke: #999999;\n      pointer-events: all;\n    }\n    circle.parent {\n      fill: #1f77b4;\n      fill-opacity: .1;\n      stroke: steelblue;\n    }\n    circle.parent:hover {\n      stroke: #ff7f0e;\n      stroke-width: .5px;\n    }\n    circle.child {\n      pointer-events: none;\n    }\n    </style>\n\n  TODO:\n    Fix rotation angle for each text to avoid string collision\n*/\nd3sparql.circlepack = function(json, config) {\n  config = config || {}\n\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json\n\n  let opts = {\n    \"width\":     config.width    || 800,\n    \"height\":    config.height   || 800,\n    \"diameter\":  config.diameter || 700,\n    \"selector\":  config.selector || null\n  }\n\n  let w = opts.width,\n      h = opts.height,\n      r = opts.diameter,\n      x = d3.scale.linear().range([0, r]),\n      y = d3.scale.linear().range([0, r])\n\n  let pack = d3.layout.pack()\n    .size([r, r])\n    .value(function(d) { return d.value })\n\n  let node  = tree\n  let nodes = pack.nodes(tree)\n\n  let vis = d3sparql.select(opts.selector, \"circlepack\").append(\"svg\")\n    .attr(\"width\", w)\n    .attr(\"height\", h)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + (w - r) / 2 + \",\" + (h - r) / 2 + \")\")\n\n  vis.selectAll(\"circle\")\n    .data(nodes)\n    .enter()\n    .append(\"circle\")\n    .attr(\"class\", function(d) { return d.children ? \"parent\" : \"child\" })\n    .attr(\"cx\", function(d) { return d.x })\n    .attr(\"cy\", function(d) { return d.y })\n    .attr(\"r\", function(d) { return d.r })\n/*\n    // CSS: circle { ... }\n    .attr(\"fill\", function(d) { return d.children ? \"#1f77b4\" : \"#cccccc\" })\n    .attr(\"fill-opacity\", function(d) { return d.children ? \".1\" : \"1\" })\n    .attr(\"stroke\", function(d) { return d.children ? \"steelblue\" : \"#999999\" })\n    .attr(\"pointer-events\", function(d) { return d.children ? \"all\" : \"none\" })\n    .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#ff7f0e\").attr(\"stroke-width\", \".5px\") })\n    .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", \".5px\") })\n*/\n    .on(\"click\", function(d) { return zoom(node === d ? tree : d) })\n\n  vis.selectAll(\"text\")\n    .data(nodes)\n    .enter()\n    .append(\"text\")\n    .attr(\"class\", function(d) { return d.children ? \"parent\" : \"child\" })\n    .attr(\"x\", function(d) { return d.x })\n    .attr(\"y\", function(d) { return d.y })\n//    .attr(\"dy\", \".35em\")\n    .style(\"opacity\", function(d) { return d.r > 20 ? 1 : 0 })\n    .text(function(d) { return d.name })\n    // rotate to avoid string collision\n    //.attr(\"text-anchor\", \"middle\")\n    .attr(\"text-anchor\", \"start\")\n    .transition()\n    .duration(1000)\n    .attr(\"transform\", function(d) { return \"rotate(-30, \" + d.x + \", \" + d.y + \")\" })\n\n  d3.select(window).on(\"click\", function() { zoom(tree) })\n\n  function zoom(d, i) {\n    let k = r / d.r / 2\n    x.domain([d.x - d.r, d.x + d.r])\n    y.domain([d.y - d.r, d.y + d.r])\n    let t = vis.transition()\n      .duration(d3.event.altKey ? 2000 : 500)\n    t.selectAll(\"circle\")\n      .attr(\"cx\", function(d) { return x(d.x) })\n      .attr(\"cy\", function(d) { return y(d.y) })\n      .attr(\"r\", function(d) { return k * d.r })\n    t.selectAll(\"text\")\n        .attr(\"x\", function(d) { return x(d.x) })\n        .attr(\"y\", function(d) { return y(d.y) })\n        .style(\"opacity\", function(d) { return k * d.r > 20 ? 1 : 0 })\n    d3.event.stopPropagation()\n  }\n}\n\n/*\n  Rendering sparql-results+json object into a treemap\n\n  References:\n    http://bl.ocks.org/4063582  Treemap\n\n  Options:\n    config = {\n      \"width\":    800,       // canvas width (optional)\n      \"height\":   500,       // canvas height (optional)\n      \"margin\":   {\"top\": 10, \"right\": 10, \"bottom\": 10, \"left\": 10},\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.treemap(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .node {\n      border: solid 1px white;\n      font: 10px sans-serif;\n      line-height: 12px;\n      overflow: hidden;\n      position: absolute;\n      text-indent: 2px;\n    }\n    </style>\n*/\nd3sparql.treemap = function(json, config) {\n  config = config || {}\n\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json\n\n  let opts = {\n    \"width\":    config.width    || 800,\n    \"height\":   config.height   || 500,\n    \"count\":    config.count    || false,\n    \"color\":    config.color    || d3.scale.category20c(),\n    \"margin\":   config.margin   || {top: 0, right: 0, bottom: 0, left: 0},\n    \"selector\": config.selector || null\n  }\n\n  let width  = opts.width - opts.margin.left - opts.margin.right\n  let height = opts.height - opts.margin.top - opts.margin.bottom\n  let color = opts.color\n\n  function count(d) { return 1 }\n  function size(d) { return d.value }\n\n  let treemap = d3.layout.treemap()\n    .size([width, height])\n    .sticky(true)\n    .value(opts.count ? count : size)\n\n  let div = d3sparql.select(opts.selector, \"treemap\")\n    .style(\"position\", \"relative\")\n    .style(\"width\", opts.width + \"px\")\n    .style(\"height\", opts.height + \"px\")\n    .style(\"left\", opts.margin.left + \"px\")\n    .style(\"top\", opts.margin.top + \"px\")\n\n  let node = div.datum(tree).selectAll(\".node\")\n    .data(treemap.nodes)\n    .enter()\n    .append(\"div\")\n    .attr(\"class\", \"node\")\n    .call(position)\n    .style(\"background\", function(d) { return d.children ? color(d.name) : null })\n    .text(function(d) { return d.children ? null : d.name })\n\n  // default CSS/SVG\n  node.style({\n    \"border-style\": \"solid\",\n    \"border-width\": \"1px\",\n    \"border-color\": \"white\",\n    \"font-size\": \"10px\",\n    \"font-family\": \"sans-serif\",\n    \"line-height\": \"12px\",\n    \"overflow\": \"hidden\",\n    \"position\": \"absolute\",\n    \"text-indent\": \"2px\",\n  })\n\n  function position() {\n    this.style(\"left\",   function(d) { return d.x + \"px\" })\n        .style(\"top\",    function(d) { return d.y + \"px\" })\n        .style(\"width\",  function(d) { return Math.max(0, d.dx - 1) + \"px\" })\n        .style(\"height\", function(d) { return Math.max(0, d.dy - 1) + \"px\" })\n  }\n}\n\n/*\n  Rendering sparql-results+json object into a zoomable treemap\n\n  References:\n    http://bost.ocks.org/mike/treemap/  Zoomable Treemaps\n    http://bl.ocks.org/zanarmstrong/76d263bd36f312cb0f9f\n\n  Options:\n    config = {\n      \"width\":    800,       // canvas width (optional)\n      \"height\":   500,       // canvas height (optional)\n      \"margin\":   {\"top\": 10, \"right\": 10, \"bottom\": 10, \"left\": 10},\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.treemapzoom(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    rect {\n      cursor: pointer;\n    }\n    .grandparent:hover rect {\n      opacity: 0.8;\n    }\n    .children:hover rect.child {\n      opacity: 0.2;\n    }\n    </style>\n*/\nd3sparql.treemapzoom = function(json, config) {\n  config = config || {}\n\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json\n\n  let opts = {\n    \"width\":    config.width    || 800,\n    \"height\":   config.height   || 500,\n    \"margin\":   config.margin   || {top: 25, right: 0, bottom: 0, left: 0},\n    \"color\":    config.color    || d3.scale.category20(),\n    \"format\":   config.format   || d3.format(\",d\"),\n    \"selector\": config.selector || null\n  }\n\n  let width  = opts.width - opts.margin.left - opts.margin.right\n  let height = opts.height - opts.margin.top - opts.margin.bottom\n  let color = opts.color\n  let format = opts.format\n  let transitioning\n\n  let x = d3.scale.linear().domain([0, width]).range([0, width])\n  let y = d3.scale.linear().domain([0, height]).range([0, height])\n\n  let treemap = d3.layout.treemap()\n    .children(function(d, depth) { return depth ? null : d.children })\n    .sort(function(a, b) { return a.value - b.value })\n    .ratio(height / width * 0.5 * (1 + Math.sqrt(5)))\n    .round(false)\n\n  let svg = d3sparql.select(opts.selector, \"treemapzoom\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n    .style(\"margin-left\", -opts.margin.left + \"px\")\n    .style(\"margin.right\", -opts.margin.right + \"px\")\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + opts.margin.left + \",\" + opts.margin.top + \")\")\n    .style(\"shape-rendering\", \"crispEdges\")\n\n  let grandparent = svg.append(\"g\")\n    .attr(\"class\", \"grandparent\")\n\n  grandparent.append(\"rect\")\n    .attr(\"y\", -opts.margin.top)\n    .attr(\"width\", width)\n    .attr(\"height\", opts.margin.top)\n    .attr(\"fill\", \"#666666\")\n\n  grandparent.append(\"text\")\n    .attr(\"x\", 6)\n    .attr(\"y\", 6 - opts.margin.top)\n    .attr(\"dy\", \".75em\")\n    .attr(\"stroke\", \"#ffffff\")\n    .attr(\"fill\", \"#ffffff\")\n\n  initialize(tree)\n  layout(tree)\n  display(tree)\n\n  function initialize(tree) {\n    tree.x = tree.y = 0\n    tree.dx = width\n    tree.dy = height\n    tree.depth = 0\n  }\n\n  // Compute the treemap layout recursively such that each group of siblings\n  // uses the same size (1×1) rather than the dimensions of the parent cell.\n  // This optimizes the layout for the current zoom state. Note that a wrapper\n  // object is created for the parent node for each group of siblings so that\n  // the parent’s dimensions are not discarded as we recurse. Since each group\n  // of sibling was laid out in 1×1, we must rescale to fit using absolute\n  // coordinates. This lets us use a viewport to zoom.\n  function layout(d) {\n    if (d.children) {\n      treemap.nodes({children: d.children})\n      d.children.forEach(function(c) {\n        c.x = d.x + c.x * d.dx\n        c.y = d.y + c.y * d.dy\n        c.dx *= d.dx\n        c.dy *= d.dy\n        c.parent = d\n        layout(c)\n      })\n    }\n  }\n\n  function display(d) {\n    grandparent\n      .datum(d.parent)\n      .on(\"click\", transition)\n      .select(\"text\")\n      .text(name(d))\n\n    let g1 = svg.insert(\"g\", \".grandparent\")\n      .datum(d)\n      .attr(\"class\", \"depth\")\n\n    let g = g1.selectAll(\"g\")\n      .data(d.children)\n      .enter()\n      .append(\"g\")\n\n    g.filter(function(d) { return d.children })\n      .classed(\"children\", true)\n      .on(\"click\", transition)\n\n    g.selectAll(\".child\")\n      .data(function(d) { return d.children || [d] })\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"child\")\n      .call(rect)\n\n    g.append(\"rect\")\n      .attr(\"class\", \"parent\")\n      .call(rect)\n      .append(\"title\")\n      .text(function(d) { return format(d.value) })\n\n    g.append(\"text\")\n      .attr(\"dy\", \".75em\")\n      .text(function(d) { return d.name })\n      .call(text)\n\n    function transition(d) {\n      if (transitioning || !d) return\n      transitioning = true\n      let g2 = display(d),\n          t1 = g1.transition().duration(750),\n          t2 = g2.transition().duration(750)\n\n      // Update the domain only after entering new elements.\n      x.domain([d.x, d.x + d.dx])\n      y.domain([d.y, d.y + d.dy])\n\n      // Enable anti-aliasing during the transition.\n      svg.style(\"shape-rendering\", null)\n\n      // Draw child nodes on top of parent nodes.\n      svg.selectAll(\".depth\").sort(function(a, b) { return a.depth - b.depth })\n\n      // Fade-in entering text.\n      g2.selectAll(\"text\").style(\"fill-opacity\", 0)\n\n      // Transition to the new view.\n      t1.selectAll(\"text\").call(text).style(\"fill-opacity\", 0)\n      t2.selectAll(\"text\").call(text).style(\"fill-opacity\", 1)\n      t1.selectAll(\"rect\").call(rect)\n      t2.selectAll(\"rect\").call(rect)\n\n      // Remove the old node when the transition is finished.\n      t1.remove().each(\"end\", function() {\n        svg.style(\"shape-rendering\", \"crispEdges\")\n        transitioning = false\n      })\n    }\n    return g\n  }\n\n  function text(text) {\n    text.attr(\"x\", function(d) { return x(d.x) + 6 })\n        .attr(\"y\", function(d) { return y(d.y) + 6 })\n  }\n\n  function rect(rect) {\n    rect.attr(\"x\", function(d) { return x(d.x) })\n        .attr(\"y\", function(d) { return y(d.y) })\n        .attr(\"width\", function(d) { return x(d.x + d.dx) - x(d.x) })\n        .attr(\"height\", function(d) { return y(d.y + d.dy) - y(d.y) })\n        .attr(\"fill\", function(d) { return color(d.name) })\n    rect.attr({\n      \"stroke\": \"#ffffff\",\n      \"stroke-width\": \"1px\",\n      \"opacity\": 0.8,\n    })\n  }\n\n  function name(d) {\n    return d.parent\n        ? name(d.parent) + \" / \" + d.name\n        : d.name\n  }\n}\n\n/*\n  World Map spotted by coordinations (longitude and latitude)\n\n  Options:\n    config = {\n      \"let_lat\":  \"lat\",     // SPARQL letiable name for latitude (optional; default is the 1st letiable)\n      \"let_lng\":  \"lng\",     // SPARQL letiable name for longitude (optional; default is the 2nd letiable)\n      \"width\":    960,       // canvas width (optional)\n      \"height\":   480,       // canvas height (optional)\n      \"radius\":   5,         // circle radius (optional)\n      \"color\":    \"#FF3333,  // circle color (optional)\n      \"topojson\": \"path/to/world-50m.json\",  // TopoJSON file\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      d3sparql.coordmap(json, config = {})\n    }\n\n  Dependencies:\n    * topojson.js\n      * Download from http://d3js.org/topojson.v1.min.js\n      * Put <script src=\"topojson.js\"></script> in the HTML <head> section\n    * world-50m.json\n      * Download from https://github.com/mbostock/topojson/blob/master/examples/world-50m.json\n*/\nd3sparql.coordmap = function(json,config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"let_lat\":   config.let_lat  || head[0] || \"lat\",\n    \"let_lng\":   config.let_lng  || head[1] || \"lng\",\n    \"width\":     config.width    || 960,\n    \"height\":    config.height   || 480,\n    \"radius\":    config.radius   || 5,\n    \"color\":     config.color    || \"#FF3333\",\n    \"topojson\":  config.topojson || \"world-50m.json\",\n    \"selector\":  config.selector || null\n  }\n\n  let projection = d3.geo.equirectangular()\n    .scale(153)\n    .translate([opts.width / 2, opts.height / 2])\n    .precision(.1);\n  let path = d3.geo.path()\n    .projection(projection);\n  let graticule = d3.geo.graticule();\n  let svg = d3sparql.select(opts.selector, \"coordmap\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height);\n\n  svg.append(\"path\")\n    .datum(graticule.outline)\n    .attr(\"fill\",\"#a4bac7\")\n    .attr(\"d\",path);\n\n  svg.append(\"path\")\n    .datum(graticule)\n    .attr(\"fill\",\"none\")\n    .attr(\"stroke\",\"#333333\")\n    .attr(\"stroke-width\",\".5px\")\n    .attr(\"stroke-opacity\",\".5\")\n    .attr(\"d\", path);\n\n  d3.json(opts.topojson, function(error, world) {\n    svg.insert(\"path\", \".graticule\")\n      .datum(topojson.feature(world, world.objects.land))\n      .attr(\"fill\", \"#d7c7ad\")\n      .attr(\"stroke\", \"#766951\")\n      .attr(\"d\", path);\n\n    svg.insert(\"path\", \".graticule\")\n      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a !== b }))\n      .attr(\"class\", \"boundary\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#a5967e\")\n      .attr(\"stroke-width\", \".5px\")\n      .attr(\"d\", path);\n\n    svg.selectAll(\".pin\")\n      .data(data)\n      .enter().append(\"circle\", \".pin\")\n      .attr(\"fill\",opts.color)\n      .attr(\"r\", opts.radius)\n      .attr(\"stroke\",\"#455346\")\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + projection([\n          d[opts.let_lng].value,\n          d[opts.let_lat].value\n        ]) + \")\"\n      });\n  });\n}\n\n/*\n  World Map colored by location names defined in a TopoJSON file\n\n  Options:\n    config = {\n      \"label\":       \"name\",    // SPARQL letiable name for location names (optional; default is the 1st letiable)\n      \"value\":       \"size\",    // SPARQL letiable name for numerical values (optional; default is the 2nd letiable)\n      \"width\":       1000,      // canvas width (optional)\n      \"height\":      1000,      // canvas height (optional)\n      \"color_max\":   \"blue\",    // color for maximum value (optional)\n      \"color_min\":   \"white\",   // color for minimum value (optional)\n      \"color_scale\": \"linear\"   // color scale (optional; \"linear\" or \"log\")\n      \"topojson\":    \"path/to/japan.topojson\",  // TopoJSON file\n      \"mapname\":     \"japan\",   // JSON key name of a map location root (e.g., \"objects\":{\"japan\":{\"type\":\"GeometryCollection\", ...)\n      \"keyname\":     \"name\",    // JSON key name of map locations matched with \"label\" (e.g., \"properties\":{\"name\":\"Tokyo\", ...)\n      \"center_lat\":  34,        // latitude for a map location center (optional; default is 34 for Japan)\n      \"center_lng\":  137,       // longitude for a map location center (optional; default is 137 for Japan)\n      \"scale\":       10000,     // scale of rendering (optional)\n      \"selector\":    \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      d3sparql.namedmap(json, config = {})\n    }\n\n  Dependencies:\n    * topojson.js\n      * Download from http://d3js.org/topojson.v1.min.js\n      * Put <script src=\"topojson.js\"></script> in the HTML <head> section\n    * japan.topojson\n      * Download from https://github.com/sparql-book/sparql-book/blob/master/chapter5/D3/japan.topojson\n*/\nd3sparql.namedmap = function(json, config) {\n  config = config || {}\n\n  let head = json.head.lets\n  let data = json.results.bindings\n\n  let opts = {\n    \"label\":        config.label       || head[0] || \"label\",\n    \"value\":        config.value       || head[1] || \"value\",\n    \"width\":        config.width       || 1000,\n    \"height\":       config.height      || 1000,\n    \"color_max\":    config.color_max   || \"red\",\n    \"color_min\":    config.color_min   || \"white\",\n    \"color_scale\":  config.color_scale || \"log\",\n    \"topojson\":     config.topojson    || \"japan.topojson\",\n    \"mapname\":      config.mapname     || \"japan\",\n    \"keyname\":      config.keyname     || \"name_local\",\n    \"center_lat\":   config.center_lat  || 34,\n    \"center_lng\":   config.center_lng  || 137,\n    \"scale\":        config.scale       || 10000,\n    \"selector\":     config.selector    || null\n  }\n\n  let size = d3.nest()\n        .key(function(d) { return d[opts.label].value })\n        .rollup(function(d) {\n          return d3.sum(d, function(d) {\n            return parseInt(d[opts.value].value)\n          })\n        }).map(data, d3.map)\n  let extent = d3.extent((d3.map(size).values()))\n\n  if (d3sparql.debug) { console.log(JSON.stringify(size)) }\n\n  let svg = d3sparql.select(opts.selector, \"namedmap\").append(\"svg\")\n    .attr(\"width\", opts.width)\n    .attr(\"height\", opts.height)\n\n  d3.json(opts.topojson, function(topojson_map) {\n    let geo = topojson.object(topojson_map, topojson_map.objects[opts.mapname]).geometries\n    let projection = d3.geo.mercator()\n      .center([opts.center_lng, opts.center_lat])\n      .translate([opts.width/2, opts.height/2])\n      .scale(opts.scale)\n    let path = d3.geo.path().projection(projection)\n    let scale;\n    switch (opts.color_scale) {\n      case \"log\":\n        scale = d3.scale.log()\n        break\n      default:\n        scale = d3.scale.linear()\n        break\n    }\n    let color = scale.domain(extent).range([opts.color_min, opts.color_max])\n\n    svg.selectAll(\"path\")\n      .data(geo)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", path)\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 0.5)\n      .style(\"fill\", function(d, i) {\n        // map SPARQL results to colors\n        return color(size[d.properties[opts.keyname]])\n      })\n\n    svg.selectAll(\".place-label\")\n      .data(geo)\n      .enter()\n      .append(\"text\")\n      .attr(\"font-size\", \"8px\")\n      .attr(\"class\", \"place-label\")\n      .attr(\"transform\", function(d) {\n        let lat = d.properties.latitude\n        let lng = d.properties.longitude\n        return \"translate(\" + projection([lng, lat]) + \")\"\n      })\n      .attr(\"dx\", \"-1.5em\")\n      .text(function(d) { return d.properties[opts.keyname] })\n  })\n}\n\nd3sparql.select = function(selector, type) {\n  if (selector) {\n    return d3.select(selector).html(\"\").append(\"div\").attr(\"class\", \"d3sparql \" + type)\n  } else {\n    return d3.select(\"body\").append(\"div\").attr(\"class\", \"d3sparql \" + type)\n  }\n}\n\n/* Helper function only for the d3sparql web site */\nd3sparql.toggle = function() {\n  let button = d3.select(\"#button\")\n  let elem = d3.select(\"#sparql\")\n  if (elem.style(\"display\") === \"none\") {\n    elem.style(\"display\", \"inline\")\n    button.attr(\"class\", \"icon-chevron-up\")\n  } else {\n    elem.style(\"display\", \"none\")\n    button.attr(\"class\", \"icon-chevron-down\")\n  }\n}\n\n/* for IFRAME embed */\nd3sparql.frameheight = function(height) {\n  d3.select(self.frameElement).style(\"height\", height + \"px\")\n}\n\nexport default d3sparql;\n"],"names":["d3sparql","version","debug","fetch","url","callback","console","log","mime","d3","xhr","request","json","responseText","JSON","parse","query","endpoint","sparql","encodeURIComponent","graph","config","head","lets","data","results","bindings","opts","key1","key2","label1","label2","value1","value2","check","map","index","i","length","value","has","nodes","push","set","links","get","stringify","tree","root","parent","child","pair","size","children","traverse","node","list","d","subtotal","sum","total","htmltable","selector","table","select","append","attr","thead","tbody","selectAll","enter","text","col","rows","cells","row","val","style","htmlhash","barchart","label_x","label_y","let_x","let_y","width","height","margin","scale_x","scale","ordinal","rangeRoundBands","scale_y","linear","range","axis_x","svg","axis","orient","axis_y","domain","extent","parseInt","ax","call","ay","bar","rangeBand","piechart","label","hole","radius","Math","min","max","color","category20","arc","outerRadius","innerRadius","pie","layout","g","slice","centroid","scatterplot","label_r","let_r","min_r","max_r","margin_x","margin_y","extent_x","extent_y","extent_r","scale_r","circle","forcegraph","parseFloat","charge","distance","link","force","linkDistance","start","on","source","x","y","target","drag","sankey","nodeWidth","nodePadding","path","dy","sort","a","b","behavior","origin","parentNode","appendChild","dragmove","dx","filter","event","relayout","roundtree","diameter","angle","depth","tree_layout","separation","diagonal","radial","projection","PI","name","dendrogram","cluster","sunburst","sqrt","startAngle","endAngle","partition","click","rotate","transition","duration","attrTween","arcTween","e","isParentOf","each","maxDepth","apply","xd","interpolate","yd","yr","t","p","c","some","circlepack","w","h","r","pack","vis","zoom","window","k","altKey","stopPropagation","treemap","count","category20c","top","right","bottom","left","sticky","div","datum","position","treemapzoom","format","transitioning","ratio","round","grandparent","initialize","display","forEach","g1","insert","classed","rect","g2","t1","t2","remove","coordmap","let_lat","let_lng","topojson","geo","equirectangular","translate","precision","graticule","outline","error","world","feature","objects","land","mesh","countries","namedmap","color_max","color_min","color_scale","mapname","keyname","center_lat","center_lng","nest","key","rollup","values","topojson_map","object","geometries","mercator","center","properties","lat","latitude","lng","longitude","type","html","toggle","button","elem","frameheight","self","frameElement"],"mappings":";;;;;EAAA;EAWA,MAAMA,QAAQ,GAAG;EACfC,EAAAA,OAAO,EAAE,gCADM;EAEfC,EAAAA,KAAK,EAAE,KAFQ;;EAAA,CAAjB;EAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2CAF,QAAQ,CAACG,KAAT,GAAiB,UAASC,GAAT,EAAcC,QAAd,EAAwB;EACvC,MAAIL,QAAQ,CAACE,KAAb,EAAoB;EAAEI,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;EAAkB;;EACxC,MAAII,IAAI,GAAG,iCAAX;EACAC,EAAAA,EAAE,CAACC,GAAH,CAAON,GAAP,EAAYI,IAAZ,EAAkB,UAASG,OAAT,EAAkB;EAClC,QAAIC,IAAI,GAAGD,OAAO,CAACE,YAAnB;;EACA,QAAIb,QAAQ,CAACE,KAAb,EAAoB;EAAEI,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;EAAmB;;EACzCP,IAAAA,QAAQ,CAACS,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAD,CAAR;EACD,GAJD;EAKF;;;;;;;;EAQC,CAhBD;;EAkBAZ,QAAQ,CAACgB,KAAT,GAAiB,UAASC,QAAT,EAAmBC,MAAnB,EAA2Bb,QAA3B,EAAqC;EACpD,MAAID,GAAG,GAAGa,QAAQ,GAAG,SAAX,GAAuBE,kBAAkB,CAACD,MAAD,CAAnD;;EACA,MAAIlB,QAAQ,CAACE,KAAb,EAAoB;EAAEI,IAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;EAAuB;;EAC7CjB,EAAAA,QAAQ,CAACG,KAAT,CAAeC,GAAf,EAAoBC,QAApB;EACD,CAJD;EAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0BAL,QAAQ,CAACoB,KAAT,GAAiB,UAASR,IAAT,EAAeS,MAAf,EAAuB;EACtCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,YAAUN,MAAM,CAACO,IAAP,IAAiBN,IAAI,CAAC,CAAD,CAArB,IAA4B,MAD7B;EAET,YAAUD,MAAM,CAACQ,IAAP,IAAiBP,IAAI,CAAC,CAAD,CAArB,IAA4B,MAF7B;EAGT,cAAUD,MAAM,CAACS,MAAP,IAAiBR,IAAI,CAAC,CAAD,CAArB,IAA4B,KAH7B;EAIT,cAAUD,MAAM,CAACU,MAAP,IAAiBT,IAAI,CAAC,CAAD,CAArB,IAA4B,KAJ7B;EAKT,cAAUD,MAAM,CAACW,MAAP,IAAiBV,IAAI,CAAC,CAAD,CAArB,IAA4B,KAL7B;EAMT,cAAUD,MAAM,CAACY,MAAP,IAAiBX,IAAI,CAAC,CAAD,CAArB,IAA4B;EAN7B,GAAX;EAQA,MAAIF,KAAK,GAAG;EACV,aAAS,EADC;EAEV,aAAS;EAFC,GAAZ;EAIA,MAAIc,KAAK,GAAGzB,EAAE,CAAC0B,GAAH,EAAZ;EACA,MAAIC,KAAK,GAAG,CAAZ;;EACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACc,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpC,QAAIT,IAAI,GAAGJ,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACC,IAAb,EAAmBW,KAA9B;EACA,QAAIV,IAAI,GAAGL,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACE,IAAb,EAAmBU,KAA9B;EACA,QAAIT,MAAM,GAAGH,IAAI,CAACG,MAAL,GAAcN,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACG,MAAb,EAAqBS,KAAnC,GAA2CX,IAAxD;EACA,QAAIG,MAAM,GAAGJ,IAAI,CAACI,MAAL,GAAcP,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACI,MAAb,EAAqBQ,KAAnC,GAA2CV,IAAxD;EACA,QAAIG,MAAM,GAAGL,IAAI,CAACK,MAAL,GAAcR,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACK,MAAb,EAAqBO,KAAnC,GAA2C,KAAxD;EACA,QAAIN,MAAM,GAAGN,IAAI,CAACM,MAAL,GAAcT,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACM,MAAb,EAAqBM,KAAnC,GAA2C,KAAxD;;EACA,QAAI,CAACL,KAAK,CAACM,GAAN,CAAUZ,IAAV,CAAL,EAAsB;EACpBR,MAAAA,KAAK,CAACqB,KAAN,CAAYC,IAAZ,CAAiB;EAAC,eAAOd,IAAR;EAAc,iBAASE,MAAvB;EAA+B,iBAASE;EAAxC,OAAjB;EACAE,MAAAA,KAAK,CAACS,GAAN,CAAUf,IAAV,EAAgBQ,KAAhB;EACAA,MAAAA,KAAK;EACN;;EACD,QAAI,CAACF,KAAK,CAACM,GAAN,CAAUX,IAAV,CAAL,EAAsB;EACpBT,MAAAA,KAAK,CAACqB,KAAN,CAAYC,IAAZ,CAAiB;EAAC,eAAOb,IAAR;EAAc,iBAASE,MAAvB;EAA+B,iBAASE;EAAxC,OAAjB;EACAC,MAAAA,KAAK,CAACS,GAAN,CAAUd,IAAV,EAAgBO,KAAhB;EACAA,MAAAA,KAAK;EACN;;EACDhB,IAAAA,KAAK,CAACwB,KAAN,CAAYF,IAAZ,CAAiB;EAAC,gBAAUR,KAAK,CAACW,GAAN,CAAUjB,IAAV,CAAX;EAA4B,gBAAUM,KAAK,CAACW,GAAN,CAAUhB,IAAV;EAAtC,KAAjB;EACD;;EACD,MAAI7B,QAAQ,CAACE,KAAb,EAAoB;EAAEI,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACgC,SAAL,CAAe1B,KAAf,CAAZ;EAAoC;;EAC1D,SAAOA,KAAP;EACD,CAzCD;EA2CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BApB,QAAQ,CAAC+C,IAAT,GAAgB,UAASnC,IAAT,EAAeS,MAAf,EAAuB;EACrCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,YAAUN,MAAM,CAAC2B,IAAP,IAAiB1B,IAAI,CAAC,CAAD,CADtB;EAET,cAAUD,MAAM,CAAC4B,MAAP,IAAiB3B,IAAI,CAAC,CAAD,CAFtB;EAGT,aAAUD,MAAM,CAAC6B,KAAP,IAAiB5B,IAAI,CAAC,CAAD,CAHtB;EAIT,aAAUD,MAAM,CAACkB,KAAP,IAAiBjB,IAAI,CAAC,CAAD,CAArB,IAA4B;EAJ7B,GAAX;EAOA,MAAI6B,IAAI,GAAG1C,EAAE,CAAC0B,GAAH,EAAX;EACA,MAAIiB,IAAI,GAAG3C,EAAE,CAAC0B,GAAH,EAAX;EACA,MAAIa,IAAI,GAAGxB,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAI,CAACqB,IAAb,EAAmBT,KAA9B;EACA,MAAIU,MAAM,GAAG,IAAb;EACA,MAAIC,KAAK,GAAG,IAAZ;EACA,MAAIG,QAAQ,GAAG,IAAf;;EACA,OAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACc,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpCY,IAAAA,MAAM,GAAGzB,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACsB,MAAb,EAAqBV,KAA9B;EACAW,IAAAA,KAAK,GAAG1B,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACuB,KAAb,EAAoBX,KAA5B;;EACA,QAAIU,MAAM,IAAIC,KAAd,EAAqB;EACnB,UAAIC,IAAI,CAACX,GAAL,CAASS,MAAT,CAAJ,EAAsB;EACpBI,QAAAA,QAAQ,GAAGF,IAAI,CAACN,GAAL,CAASI,MAAT,CAAX;EACAI,QAAAA,QAAQ,CAACX,IAAT,CAAcQ,KAAd;EACD,OAHD,MAGO;EACLG,QAAAA,QAAQ,GAAG,CAACH,KAAD,CAAX;EACD;;EACDC,MAAAA,IAAI,CAACR,GAAL,CAASM,MAAT,EAAiBI,QAAjB;;EACA,UAAI7B,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACY,KAAb,CAAJ,EAAyB;EACvBa,QAAAA,IAAI,CAACT,GAAL,CAASO,KAAT,EAAgB1B,IAAI,CAACa,CAAD,CAAJ,CAAQV,IAAI,CAACY,KAAb,EAAoBA,KAApC;EACD;EACF;EACF;;EACD,WAASe,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,QAAIC,IAAI,GAAGL,IAAI,CAACN,GAAL,CAASU,IAAT,CAAX;;EACA,QAAIC,IAAJ,EAAU;EACR,UAAIH,QAAQ,GAAGG,IAAI,CAACrB,GAAL,CAAS,UAASsB,CAAT,EAAY;EAAE,eAAOH,QAAQ,CAACG,CAAD,CAAf;EAAoB,OAA3C,CAAf,CADQ;;EAGR,UAAIC,QAAQ,GAAGjD,EAAE,CAACkD,GAAH,CAAON,QAAP,EAAiB,UAASI,CAAT,EAAY;EAAE,eAAOA,CAAC,CAAClB,KAAT;EAAgB,OAA/C,CAAf,CAHQ;;EAKR,UAAIqB,KAAK,GAAGnD,EAAE,CAACkD,GAAH,CAAO,CAACD,QAAD,EAAWN,IAAI,CAACP,GAAL,CAASU,IAAT,CAAX,CAAP,CAAZ;EACA,aAAO;EAAC,gBAAQA,IAAT;EAAe,oBAAYF,QAA3B;EAAqC,iBAASO;EAA9C,OAAP;EACD,KAPD,MAOO;EACL,aAAO;EAAC,gBAAQL,IAAT;EAAe,iBAASH,IAAI,CAACP,GAAL,CAASU,IAAT,KAAkB;EAA1C,OAAP;EACD;EACF;;EACD,MAAIR,IAAI,GAAGO,QAAQ,CAACN,IAAD,CAAnB;;EAEA,MAAIhD,QAAQ,CAACE,KAAb,EAAoB;EAAEI,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACgC,SAAL,CAAeC,IAAf,CAAZ;EAAmC;;EACzD,SAAOA,IAAP;EACD,CApDD;EAsDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BA/C,QAAQ,CAAC6D,SAAT,GAAqB,UAASjD,IAAT,EAAeS,MAAf,EAAuB;EAC1CA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,gBAAYN,MAAM,CAACyC,QAAP,IAAmB;EADtB,GAAX;EAIA,MAAIC,KAAK,GAAG/D,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,WAA/B,EAA4CG,MAA5C,CAAmD,OAAnD,EAA4DC,IAA5D,CAAiE,OAAjE,EAA0E,sBAA1E,CAAZ;EACA,MAAIC,KAAK,GAAGJ,KAAK,CAACE,MAAN,CAAa,OAAb,CAAZ;EACA,MAAIG,KAAK,GAAGL,KAAK,CAACE,MAAN,CAAa,OAAb,CAAZ;EACAE,EAAAA,KAAK,CAACF,MAAN,CAAa,IAAb,EACGI,SADH,CACa,IADb,EAEG7C,IAFH,CAEQF,IAFR,EAGGgD,KAHH,GAIGL,MAJH,CAIU,IAJV,EAKGM,IALH,CAKQ,UAASC,GAAT,EAAc;EAAE,WAAOA,GAAP;EAAY,GALpC;EAMA,MAAIC,IAAI,GAAGL,KAAK,CAACC,SAAN,CAAgB,IAAhB,EACR7C,IADQ,CACHA,IADG,EAER8C,KAFQ,GAGRL,MAHQ,CAGD,IAHC,CAAX;EAIA,MAAIS,KAAK,GAAGD,IAAI,CAACJ,SAAL,CAAe,IAAf,EACT7C,IADS,CACJ,UAASmD,GAAT,EAAc;EAClB,WAAOrD,IAAI,CAACa,GAAL,CAAS,UAASqC,GAAT,EAAc;EAC5B,aAAOG,GAAG,CAACH,GAAD,CAAH,GAAWG,GAAG,CAACH,GAAD,CAAH,CAASjC,KAApB,GAA4B,EAAnC;EACD,KAFM,CAAP;EAGD,GALS,EAMT+B,KANS,GAOTL,MAPS,CAOF,IAPE,EAQTM,IARS,CAQJ,UAASK,GAAT,EAAc;EAAE,WAAOA,GAAP;EAAY,GARxB,CAAZ,CAvB0C;;EAkC1Cb,EAAAA,KAAK,CAACc,KAAN,CAAY;EACV,cAAU;EADA,GAAZ;EAGAd,EAAAA,KAAK,CAACM,SAAN,CAAgB,IAAhB,EAAsBQ,KAAtB,CAA4B;EAC1B,kBAAc,SADY;EAE1B,sBAAkB;EAFQ,GAA5B;EAID,CAzCD;EA2CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BA7E,QAAQ,CAAC8E,QAAT,GAAoB,UAASlE,IAAT,EAAeS,MAAf,EAAuB;EACzCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAb,CAAsB,CAAtB,CAAX;EAEA,MAAIC,IAAI,GAAG;EACT,gBAAYN,MAAM,CAACyC,QAAP,IAAmB;EADtB,GAAX;EAIA,MAAIC,KAAK,GAAG/D,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,UAA/B,EAA2CG,MAA3C,CAAkD,OAAlD,EAA2DC,IAA3D,CAAgE,OAAhE,EAAyE,sBAAzE,CAAZ;EACA,MAAIE,KAAK,GAAGL,KAAK,CAACE,MAAN,CAAa,OAAb,CAAZ;EACA,MAAIU,GAAG,GAAGP,KAAK,CAACC,SAAN,CAAgB,IAAhB,EACP7C,IADO,CACF,YAAW;EACd,WAAOF,IAAI,CAACa,GAAL,CAAS,UAASqC,GAAT,EAAc;EAC5B,aAAO;EAAC,gBAAQA,GAAT;EAAc,gBAAQhD,IAAI,CAACgD,GAAD,CAAJ,GAAYhD,IAAI,CAACgD,GAAD,CAAJ,CAAUjC,KAAtB,GAA8B;EAApD,OAAP;EACD,KAFM,CAAP;EAGD,GALM,EAMP+B,KANO,GAOPL,MAPO,CAOA,IAPA,CAAV;EAQAU,EAAAA,GAAG,CAACV,MAAJ,CAAW,IAAX,EACGM,IADH,CACQ,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACnC,IAAT;EAAe,GADrC;EAEAqD,EAAAA,GAAG,CAACV,MAAJ,CAAW,IAAX,EACGM,IADH,CACQ,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACjC,IAAT;EAAe,GADrC,EAtByC;;EA0BzCuC,EAAAA,KAAK,CAACc,KAAN,CAAY;EACV,cAAU;EADA,GAAZ;EAGAd,EAAAA,KAAK,CAACM,SAAN,CAAgB,IAAhB,EAAsBQ,KAAtB,CAA4B;EAC1B,kBAAc,SADY;EAE1B,sBAAkB;EAFQ,GAA5B;EAID,CAjCD;EAmCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiDA7E,QAAQ,CAAC+E,QAAT,GAAoB,UAASnE,IAAT,EAAeS,MAAf,EAAuB;EACzCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,eAAYN,MAAM,CAAC2D,OAAP,IAAmB1D,IAAI,CAAC,CAAD,CAD1B;EAET,eAAYD,MAAM,CAAC4D,OAAP,IAAmB3D,IAAI,CAAC,CAAD,CAF1B;EAGT,aAAYD,MAAM,CAAC6D,KAAP,IAAmB5D,IAAI,CAAC,CAAD,CAH1B;EAIT,aAAYD,MAAM,CAAC8D,KAAP,IAAmB7D,IAAI,CAAC,CAAD,CAJ1B;EAKT,aAAYD,MAAM,CAAC+D,KAAP,IAAmB,GALtB;EAMT,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,GANtB;EAOT,cAAYhE,MAAM,CAACiE,MAAP,IAAmB,EAPtB;EAO2B;EACpC,gBAAYjE,MAAM,CAACyC,QAAP,IAAmB;EARtB,GAAX;EAWA,MAAIyB,OAAO,GAAG9E,EAAE,CAAC+E,KAAH,CAASC,OAAT,GAAmBC,eAAnB,CAAmC,CAAC,CAAD,EAAI/D,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAAC2D,MAAtB,CAAnC,EAAkE,GAAlE,CAAd;EACA,MAAIK,OAAO,GAAGlF,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBC,KAAlB,CAAwB,CAAClE,IAAI,CAAC0D,MAAL,GAAc1D,IAAI,CAAC2D,MAApB,EAA4B,CAA5B,CAAxB,CAAd;EACA,MAAIQ,MAAM,GAAGrF,EAAE,CAACsF,GAAH,CAAOC,IAAP,GAAcR,KAAd,CAAoBD,OAApB,EAA6BU,MAA7B,CAAoC,QAApC,CAAb;EACA,MAAIC,MAAM,GAAGzF,EAAE,CAACsF,GAAH,CAAOC,IAAP,GAAcR,KAAd,CAAoBG,OAApB,EAA6BM,MAA7B,CAAoC,MAApC,CAAb,CApByC;;EAqBzCV,EAAAA,OAAO,CAACY,MAAR,CAAe3E,IAAI,CAACW,GAAL,CAAS,UAASsB,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC9B,IAAI,CAACuD,KAAN,CAAD,CAAc3C,KAArB;EAA4B,GAAnD,CAAf;EACAoD,EAAAA,OAAO,CAACQ,MAAR,CAAe1F,EAAE,CAAC2F,MAAH,CAAU5E,IAAV,EAAgB,UAASiC,CAAT,EAAY;EAAE,WAAO4C,QAAQ,CAAC5C,CAAC,CAAC9B,IAAI,CAACwD,KAAN,CAAD,CAAc5C,KAAf,CAAf;EAAsC,GAApE,CAAf;EAEA,MAAIwD,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,UAA/B,EAA2CG,MAA3C,CAAkD,KAAlD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,CAAV,CAxByC;EA4B3C;;EAEE,MAAIiB,EAAE,GAAGP,GAAG,CAAC9B,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,OADC,EACQ,QADR,EAENA,IAFM,CAED,WAFC,EAEY,eAAevC,IAAI,CAAC2D,MAApB,GAA6B,GAA7B,IAAoC3D,IAAI,CAAC0D,MAAL,GAAc1D,IAAI,CAAC2D,MAAvD,IAAiE,GAF7E,EAGNiB,IAHM,CAGDT,MAHC,CAAT;EAIA,MAAIU,EAAE,GAAGT,GAAG,CAAC9B,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,OADC,EACQ,QADR,EAENA,IAFM,CAED,WAFC,EAEY,eAAevC,IAAI,CAAC2D,MAApB,GAA6B,KAFzC,EAGNiB,IAHM,CAGDL,MAHC,CAAT;EAIA,MAAIO,GAAG,GAAGV,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EACP7C,IADO,CACFA,IADE,EAEP8C,KAFO,GAGPL,MAHO,CAGA,MAHA,EAIPC,IAJO,CAIF,WAJE,EAIW,eAAevC,IAAI,CAAC2D,MAApB,GAA6B,GAA7B,GAAmC,CAAnC,GAAuC,GAJlD,EAKPpB,IALO,CAKF,OALE,EAKO,KALP,EAMPA,IANO,CAMF,GANE,EAMG,UAAST,CAAT,EAAY;EAAE,WAAO8B,OAAO,CAAC9B,CAAC,CAAC9B,IAAI,CAACuD,KAAN,CAAD,CAAc3C,KAAf,CAAd;EAAqC,GANtD,EAOP2B,IAPO,CAOF,OAPE,EAOOqB,OAAO,CAACmB,SAAR,EAPP,EAQPxC,IARO,CAQF,GARE,EAQG,UAAST,CAAT,EAAY;EAAE,WAAOkC,OAAO,CAAClC,CAAC,CAAC9B,IAAI,CAACwD,KAAN,CAAD,CAAc5C,KAAf,CAAd;EAAqC,GARtD,EASP2B,IATO,CASF,QATE,EASQ,UAAST,CAAT,EAAY;EAAE,WAAO9B,IAAI,CAAC0D,MAAL,GAAcM,OAAO,CAACU,QAAQ,CAAC5C,CAAC,CAAC9B,IAAI,CAACwD,KAAN,CAAD,CAAc5C,KAAf,CAAT,CAArB,GAAuDZ,IAAI,CAAC2D,MAAnE;EAA2E,GATjG,CAAV;EAUF;;;;;;;;EAOEgB,EAAAA,EAAE,CAACjC,SAAH,CAAa,MAAb,EACGH,IADH,CACQ,IADR,EACc,OADd,EAEGA,IAFH,CAEQ,GAFR,EAEa,EAFb,EAGGA,IAHH,CAGQ,GAHR,EAGa,CAHb,EAIGA,IAJH,CAIQ,WAJR,EAIqB,YAJrB,EAKGW,KALH,CAKS,aALT,EAKwB,OALxB;EAMAyB,EAAAA,EAAE,CAACrC,MAAH,CAAU,MAAV,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGK,IAFH,CAEQ5C,IAAI,CAACqD,OAFb,EAGGH,KAHH,CAGS,aAHT,EAGwB,QAHxB,EAIGX,IAJH,CAIQ,WAJR,EAIqB,eAAgB,CAACvC,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAAC2D,MAAnB,IAA6B,CAA7C,GAAkD,GAAlD,IAAyD3D,IAAI,CAAC2D,MAAL,GAAc,CAAvE,IAA4E,GAJjG;EAKAkB,EAAAA,EAAE,CAACvC,MAAH,CAAU,MAAV,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGK,IAFH,CAEQ5C,IAAI,CAACsD,OAFb,EAGGJ,KAHH,CAGS,aAHT,EAGwB,QAHxB,EAIGX,IAJH,CAIQ,WAJR,EAIqB,aAJrB,EAKGA,IALH,CAKQ,GALR,EAKa,IAAKvC,IAAI,CAAC0D,MAAL,GAAc,CALhC,EAMGnB,IANH,CAMQ,GANR,EAMa,KAAKvC,IAAI,CAAC2D,MAAL,GAAc,EAAnB,CANb,EAlEyC;;EA2EzCmB,EAAAA,GAAG,CAACvC,IAAJ,CAAS;EACP,YAAQ;EADD,GAAT;EAGA6B,EAAAA,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EAAuBH,IAAvB,CAA4B;EAC1B,cAAU,OADgB;EAE1B,YAAQ,MAFkB;EAG1B,uBAAmB;EAHO,GAA5B;EAKA6B,EAAAA,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EAAsBH,IAAtB,CAA2B;EACzB,cAAU,MADe;EAEzB,YAAQ,OAFiB;EAGzB,iBAAa,KAHY;EAIzB,mBAAe;EAJU,GAA3B;EAMD,CAzFD;EA2FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoCAlE,QAAQ,CAAC2G,QAAT,GAAoB,UAAS/F,IAAT,EAAeS,MAAf,EAAuB;EACzCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,aAAYN,MAAM,CAACuF,KAAP,IAAmBtF,IAAI,CAAC,CAAD,CAD1B;EAET,YAAYD,MAAM,CAAC+B,IAAP,IAAmB9B,IAAI,CAAC,CAAD,CAF1B;EAGT,aAAYD,MAAM,CAAC+D,KAAP,IAAmB,GAHtB;EAIT,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,GAJtB;EAKT,cAAYhE,MAAM,CAACiE,MAAP,IAAmB,EALtB;EAMT,YAAYjE,MAAM,CAACwF,IAAP,IAAmB,GANtB;EAOT,gBAAYxF,MAAM,CAACyC,QAAP,IAAmB;EAPtB,GAAX;EAUA,MAAIgD,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASrF,IAAI,CAACyD,KAAd,EAAqBzD,IAAI,CAAC0D,MAA1B,IAAoC,CAApC,GAAwC1D,IAAI,CAAC2D,MAA1D;EACA,MAAIuB,IAAI,GAAGE,IAAI,CAACE,GAAL,CAASF,IAAI,CAACC,GAAL,CAASF,MAAM,GAAG,EAAlB,EAAsBnF,IAAI,CAACkF,IAA3B,CAAT,EAA2C,CAA3C,CAAX;EACA,MAAIK,KAAK,GAAGzG,EAAE,CAAC+E,KAAH,CAAS2B,UAAT,EAAZ;EAEA,MAAIC,GAAG,GAAG3G,EAAE,CAACsF,GAAH,CAAOqB,GAAP,GACPC,WADO,CACKP,MADL,EAEPQ,WAFO,CAEKT,IAFL,CAAV;EAIA,MAAIU,GAAG,GAAG9G,EAAE,CAAC+G,MAAH,CAAUD,GAAV;EAAA,GAEPhF,KAFO,CAED,UAASkB,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC9B,IAAI,CAACyB,IAAN,CAAD,CAAab,KAApB;EAA2B,GAFxC,CAAV;EAIA,MAAIwD,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,UAA/B,EAA2CG,MAA3C,CAAkD,KAAlD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,EAGPpB,MAHO,CAGA,GAHA,EAIPC,IAJO,CAIF,WAJE,EAIW,eAAevC,IAAI,CAACyD,KAAL,GAAa,CAA5B,GAAgC,GAAhC,GAAsCzD,IAAI,CAAC0D,MAAL,GAAc,CAApD,GAAwD,GAJnE,CAAV;EAMA,MAAIoC,CAAC,GAAG1B,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EACL7C,IADK,CACA+F,GAAG,CAAC/F,IAAD,CADH,EAEL8C,KAFK,GAGLL,MAHK,CAGE,GAHF,EAILC,IAJK,CAIA,OAJA,EAIS,KAJT,CAAR;EAKA,MAAIwD,KAAK,GAAGD,CAAC,CAACxD,MAAF,CAAS,MAAT,EACTC,IADS,CACJ,GADI,EACCkD,GADD,EAETlD,IAFS,CAEJ,MAFI,EAEI,UAAST,CAAT,EAAYpB,CAAZ,EAAe;EAAE,WAAO6E,KAAK,CAAC7E,CAAD,CAAZ;EAAiB,GAFtC,CAAZ;EAGA,MAAIkC,IAAI,GAAGkD,CAAC,CAACxD,MAAF,CAAS,MAAT,EACRC,IADQ,CACH,OADG,EACM,OADN,EAERA,IAFQ,CAEH,WAFG,EAEU,UAAST,CAAT,EAAY;EAAE,WAAO,eAAe2D,GAAG,CAACO,QAAJ,CAAalE,CAAb,CAAf,GAAiC,GAAxC;EAA6C,GAFrE,EAGRS,IAHQ,CAGH,IAHG,EAGG,OAHH,EAIRA,IAJQ,CAIH,aAJG,EAIY,QAJZ,EAKRK,IALQ,CAKH,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACjC,IAAF,CAAOG,IAAI,CAACiF,KAAZ,EAAmBrE,KAA1B;EAAiC,GAL5C,CAAX,CA1CyC;;EAkDzCmF,EAAAA,KAAK,CAACxD,IAAN,CAAW;EACT,cAAU;EADD,GAAX,EAlDyC;;EAsDzC6B,EAAAA,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EAAsBH,IAAtB,CAA2B;EACzB,cAAU,MADe;EAEzB,YAAQ,OAFiB;EAGzB,iBAAa,MAHY;EAIzB,mBAAe;EAJU,GAA3B;EAMD,CA5DD;EA8DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2CAlE,QAAQ,CAAC4H,WAAT,GAAuB,UAAShH,IAAT,EAAeS,MAAf,EAAuB;EAC5CA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,eAAYN,MAAM,CAAC2D,OAAP,IAAmB1D,IAAI,CAAC,CAAD,CAAvB,IAA8B,GADjC;EAET,eAAYD,MAAM,CAAC4D,OAAP,IAAmB3D,IAAI,CAAC,CAAD,CAAvB,IAA8B,GAFjC;EAGT,eAAYD,MAAM,CAACwG,OAAP,IAAmBvG,IAAI,CAAC,CAAD,CAAvB,IAA8B,GAHjC;EAIT,aAAYD,MAAM,CAAC6D,KAAP,IAAmB5D,IAAI,CAAC,CAAD,CAJ1B;EAKT,aAAYD,MAAM,CAAC8D,KAAP,IAAmB7D,IAAI,CAAC,CAAD,CAL1B;EAMT,aAAYD,MAAM,CAACyG,KAAP,IAAmBxG,IAAI,CAAC,CAAD,CAAvB,IAA8B,CANjC;EAOT,aAAYD,MAAM,CAAC0G,KAAP,IAAmB,CAPtB;EAQT,aAAY1G,MAAM,CAAC2G,KAAP,IAAmB,EARtB;EAST,aAAY3G,MAAM,CAAC+D,KAAP,IAAmB,GATtB;EAUT,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,GAVtB;EAWT,gBAAYhE,MAAM,CAAC4G,QAAP,IAAmB,EAXtB;EAYT,gBAAY5G,MAAM,CAAC6G,QAAP,IAAmB,EAZtB;EAaT,gBAAY7G,MAAM,CAACyC,QAAP,IAAmB;EAbtB,GAAX;EAeA,MAAIqE,QAAQ,GAAG1H,EAAE,CAAC2F,MAAH,CAAU5E,IAAV,EAAgB,UAASiC,CAAT,EAAY;EAAE,WAAO4C,QAAQ,CAAC5C,CAAC,CAAC9B,IAAI,CAACuD,KAAN,CAAD,CAAc3C,KAAf,CAAf;EAAsC,GAApE,CAAf;EACA,MAAI6F,QAAQ,GAAG3H,EAAE,CAAC2F,MAAH,CAAU5E,IAAV,EAAgB,UAASiC,CAAT,EAAY;EAAE,WAAO4C,QAAQ,CAAC5C,CAAC,CAAC9B,IAAI,CAACwD,KAAN,CAAD,CAAc5C,KAAf,CAAf;EAAsC,GAApE,CAAf;EACA,MAAI8F,QAAQ,GAAG5H,EAAE,CAAC2F,MAAH,CAAU5E,IAAV,EAAgB,UAASiC,CAAT,EAAY;EAAE,WAAO4C,QAAQ,CAAC5C,CAAC,CAAC9B,IAAI,CAACmG,KAAN,CAAD,GAAgBrE,CAAC,CAAC9B,IAAI,CAACmG,KAAN,CAAD,CAAcvF,KAA9B,GAAsCZ,IAAI,CAACmG,KAA5C,CAAf;EAAmE,GAAjG,CAAf;EACA,MAAIvC,OAAO,GAAG9E,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBC,KAAlB,CAAwB,CAAClE,IAAI,CAACsG,QAAN,EAAgBtG,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAACsG,QAAlC,CAAxB,EAAqE9B,MAArE,CAA4EgC,QAA5E,CAAd;EACA,MAAIxC,OAAO,GAAGlF,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBC,KAAlB,CAAwB,CAAClE,IAAI,CAAC0D,MAAL,GAAc1D,IAAI,CAACuG,QAApB,EAA8BvG,IAAI,CAACuG,QAAnC,CAAxB,EAAsE/B,MAAtE,CAA6EiC,QAA7E,CAAd;EACA,MAAIE,OAAO,GAAG7H,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBC,KAAlB,CAAwB,CAAClE,IAAI,CAACoG,KAAN,EAAapG,IAAI,CAACqG,KAAlB,CAAxB,EAAkD7B,MAAlD,CAAyDkC,QAAzD,CAAd;EACA,MAAIvC,MAAM,GAAGrF,EAAE,CAACsF,GAAH,CAAOC,IAAP,GAAcR,KAAd,CAAoBD,OAApB,CAAb;EACA,MAAIW,MAAM,GAAGzF,EAAE,CAACsF,GAAH,CAAOC,IAAP,GAAcR,KAAd,CAAoBG,OAApB,EAA6BM,MAA7B,CAAoC,MAApC,CAAb;EAEA,MAAIF,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,aAA/B,EAA8CG,MAA9C,CAAqD,KAArD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,CAAV;EAGA,MAAIkD,MAAM,GAAGxC,GAAG,CAAC1B,SAAJ,CAAc,QAAd,EACV7C,IADU,CACLA,IADK,EAEV8C,KAFU,GAGVL,MAHU,CAGH,QAHG,EAIVC,IAJU,CAIL,OAJK,EAII,MAJJ,EAKVA,IALU,CAKL,IALK,EAKC,UAAST,CAAT,EAAY;EAAE,WAAO8B,OAAO,CAAC9B,CAAC,CAAC9B,IAAI,CAACuD,KAAN,CAAD,CAAc3C,KAAf,CAAd;EAAqC,GALpD,EAMV2B,IANU,CAML,IANK,EAMC,UAAST,CAAT,EAAY;EAAE,WAAOkC,OAAO,CAAClC,CAAC,CAAC9B,IAAI,CAACwD,KAAN,CAAD,CAAc5C,KAAf,CAAd;EAAqC,GANpD,EAOV2B,IAPU,CAOL,GAPK,EAOC,UAAST,CAAT,EAAY;EAAE,WAAO6E,OAAO,CAAC7E,CAAC,CAAC9B,IAAI,CAACmG,KAAN,CAAD,GAAgBrE,CAAC,CAAC9B,IAAI,CAACmG,KAAN,CAAD,CAAcvF,KAA9B,GAAsCZ,IAAI,CAACmG,KAA5C,CAAd;EAAkE,GAPjF,EAQV5D,IARU,CAQL,SARK,EAQM,GARN,EASVD,MATU,CASH,OATG,EAUVM,IAVU,CAUL,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC9B,IAAI,CAACkG,OAAN,CAAD,GAAkBpE,CAAC,CAAC9B,IAAI,CAACkG,OAAN,CAAD,CAAgBtF,KAAlC,GAA0CZ,IAAI,CAACkG,OAAtD;EAA+D,GAVxE,CAAb;EAWA,MAAIvB,EAAE,GAAGP,GAAG,CAAC9B,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,OADC,EACQ,QADR,EAENA,IAFM,CAED,WAFC,EAEY,kBAAkBvC,IAAI,CAAC0D,MAAL,GAAc1D,IAAI,CAACuG,QAArC,IAAiD,GAF7D,EAGN3B,IAHM,CAGDT,MAHC,CAAT;EAIA,MAAIU,EAAE,GAAGT,GAAG,CAAC9B,MAAJ,CAAW,GAAX,EACNC,IADM,CACD,OADC,EACQ,QADR,EAENA,IAFM,CAED,WAFC,EAEY,eAAevC,IAAI,CAACsG,QAApB,GAA+B,KAF3C,EAGN1B,IAHM,CAGDL,MAHC,CAAT;EAIAI,EAAAA,EAAE,CAACrC,MAAH,CAAU,MAAV,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGK,IAFH,CAEQ5C,IAAI,CAACqD,OAFb,EAGGH,KAHH,CAGS,aAHT,EAGwB,QAHxB,EAIGX,IAJH,CAIQ,WAJR,EAIqB,eAAgB,CAACvC,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAACsG,QAAnB,IAA+B,CAA/C,GAAoD,GAApD,IAA2DtG,IAAI,CAACuG,QAAL,GAAgB,CAA3E,IAAgF,GAJrG;EAKA1B,EAAAA,EAAE,CAACvC,MAAH,CAAU,MAAV,EACGC,IADH,CACQ,OADR,EACiB,OADjB,EAEGK,IAFH,CAEQ5C,IAAI,CAACsD,OAFb,EAGGJ,KAHH,CAGS,aAHT,EAGwB,QAHxB,EAIGX,IAJH,CAIQ,WAJR,EAIqB,aAJrB,EAKGA,IALH,CAKQ,GALR,EAKa,IAAKvC,IAAI,CAAC0D,MAAL,GAAc,CALhC,EAMGnB,IANH,CAMQ,GANR,EAMa,KAAKvC,IAAI,CAACsG,QAAL,GAAgB,EAArB,CANb,EAzD4C;;EAkE5C3B,EAAAA,EAAE,CAACpC,IAAH,CAAQ;EACN,cAAU,OADJ;EAEN,YAAQ;EAFF,GAAR;EAIAsC,EAAAA,EAAE,CAACtC,IAAH,CAAQ;EACN,cAAU,OADJ;EAEN,YAAQ;EAFF,GAAR,EAtE4C;;EA2E5CqE,EAAAA,MAAM,CAACrE,IAAP,CAAY;EACV,cAAU,MADA;EAEV,oBAAgB,KAFN;EAGV,YAAQ,WAHE;EAIV,eAAW;EAJD,GAAZ,EA3E4C;;EAkF5C6B,EAAAA,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EAAsBH,IAAtB,CAA2B;EACzB,cAAU,MADe;EAEzB,YAAQ,OAFiB;EAGzB,iBAAa,KAHY;EAIzB,mBAAe;EAJU,GAA3B;EAMD,CAxFD;EA0FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgDAlE,QAAQ,CAACwI,UAAT,GAAsB,UAAS5H,IAAT,EAAeS,MAAf,EAAuB;EAC3CA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAID,KAAK,GAAIR,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAACoB,KAAT,CAAeR,IAAf,EAAqBS,MAArB,CAA9B,GAA6DT,IAAzE;EAEA,MAAI4E,KAAK,GAAG/E,EAAE,CAAC+E,KAAH,CAASI,MAAT,GACTO,MADS,CACF1F,EAAE,CAAC2F,MAAH,CAAUhF,KAAK,CAACqB,KAAhB,EAAuB,UAASgB,CAAT,EAAY;EAAE,WAAOgF,UAAU,CAAChF,CAAC,CAAClB,KAAH,CAAjB;EAA4B,GAAjE,CADE,EAETsD,KAFS,CAEH,CAAC,CAAD,EAAI,EAAJ,CAFG,CAAZ;EAIA,MAAIlE,IAAI,GAAG;EACT,cAAaN,MAAM,CAACyF,MAAP,IAAoB,UAASrD,CAAT,EAAY;EAAE,aAAOA,CAAC,CAAClB,KAAF,GAAUiD,KAAK,CAAC/B,CAAC,CAAClB,KAAH,CAAf,GAA2B,IAAIkB,CAAC,CAACmD,KAAF,CAAQtE,MAA9C;EAAsD,KAD5F;EAET,cAAajB,MAAM,CAACqH,MAAP,IAAoB,CAAC,GAFzB;EAGT,gBAAarH,MAAM,CAACsH,QAAP,IAAoB,EAHxB;EAIT,aAAatH,MAAM,CAAC+D,KAAP,IAAoB,IAJxB;EAKT,cAAa/D,MAAM,CAACgE,MAAP,IAAoB,GALxB;EAMT,aAAahE,MAAM,CAACuF,KAAP,IAAoB,KANxB;EAOT,gBAAavF,MAAM,CAACyC,QAAP,IAAoB;EAPxB,GAAX;EAUA,MAAIiC,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,YAA/B,EAA6CG,MAA7C,CAAoD,KAApD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,CAAV;EAGA,MAAIuD,IAAI,GAAG7C,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHJ,KAAK,CAACwB,KADH,EAER0B,KAFQ,GAGRL,MAHQ,CAGD,MAHC,EAIRC,IAJQ,CAIH,OAJG,EAIM,MAJN,CAAX;EAKA,MAAIX,IAAI,GAAGwC,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHJ,KAAK,CAACqB,KADH,EAER6B,KAFQ,GAGRL,MAHQ,CAGD,GAHC,CAAX;EAIA,MAAIsE,MAAM,GAAGhF,IAAI,CAACU,MAAL,CAAY,QAAZ,EACVC,IADU,CACL,OADK,EACI,MADJ,EAEVA,IAFU,CAEL,GAFK,EAEAvC,IAAI,CAACmF,MAFL,CAAb;EAGA,MAAIvC,IAAI,GAAGhB,IAAI,CAACU,MAAL,CAAY,MAAZ,EACRM,IADQ,CACH,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC9B,IAAI,CAACiF,KAAL,IAAc,OAAf,CAAR;EAAiC,GAD5C,EAER1C,IAFQ,CAEH,OAFG,EAEM,MAFN,CAAX;EAGA,MAAI2E,KAAK,GAAGpI,EAAE,CAAC+G,MAAH,CAAUqB,KAAV,GACTH,MADS,CACF/G,IAAI,CAAC+G,MADH,EAETI,YAFS,CAEInH,IAAI,CAACgH,QAFT,EAGTvF,IAHS,CAGJ,CAACzB,IAAI,CAACyD,KAAN,EAAazD,IAAI,CAAC0D,MAAlB,CAHI,EAIT5C,KAJS,CAIHrB,KAAK,CAACqB,KAJH,EAKTG,KALS,CAKHxB,KAAK,CAACwB,KALH,EAMTmG,KANS,EAAZ;EAOAF,EAAAA,KAAK,CAACG,EAAN,CAAS,MAAT,EAAiB,YAAW;EAC1BJ,IAAAA,IAAI,CAAC1E,IAAL,CAAU,IAAV,EAAgB,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACwF,MAAF,CAASC,CAAhB;EAAmB,KAAjD,EACKhF,IADL,CACU,IADV,EACgB,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACwF,MAAF,CAASE,CAAhB;EAAmB,KADjD,EAEKjF,IAFL,CAEU,IAFV,EAEgB,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAAC2F,MAAF,CAASF,CAAhB;EAAmB,KAFjD,EAGKhF,IAHL,CAGU,IAHV,EAGgB,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAAC2F,MAAF,CAASD,CAAhB;EAAmB,KAHjD;EAIA5E,IAAAA,IAAI,CAACL,IAAL,CAAU,GAAV,EAAe,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACyF,CAAT;EAAY,KAAzC,EACKhF,IADL,CACU,GADV,EACe,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAAC0F,CAAT;EAAY,KADzC;EAEAZ,IAAAA,MAAM,CAACrE,IAAP,CAAY,IAAZ,EAAkB,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACyF,CAAT;EAAY,KAA5C,EACOhF,IADP,CACY,IADZ,EACkB,UAAST,CAAT,EAAY;EAAE,aAAOA,CAAC,CAAC0F,CAAT;EAAY,KAD5C;EAED,GATD;EAUA5F,EAAAA,IAAI,CAACgD,IAAL,CAAUsC,KAAK,CAACQ,IAAhB,EAtD2C;;EAyD3CT,EAAAA,IAAI,CAAC1E,IAAL,CAAU;EACR,cAAU;EADF,GAAV;EAGAqE,EAAAA,MAAM,CAACrE,IAAP,CAAY;EACV,cAAU,OADA;EAEV,oBAAgB,KAFN;EAGV,YAAQ,WAHE;EAIV,eAAW;EAJD,GAAZ;EAMAK,EAAAA,IAAI,CAACL,IAAL,CAAU;EACR,iBAAa,KADL;EAER,mBAAe;EAFP,GAAV;EAID,CAtED;EAwEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkDAlE,QAAQ,CAACsJ,MAAT,GAAkB,UAAS1I,IAAT,EAAeS,MAAf,EAAuB;EACvCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAID,KAAK,GAAIR,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAACoB,KAAT,CAAeR,IAAf,EAAqBS,MAArB,CAA9B,GAA6DT,IAAzE;EAEA,MAAIe,IAAI,GAAG;EACT,aAAYN,MAAM,CAAC+D,KAAP,IAAmB,GADtB;EAET,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,IAFtB;EAGT,cAAYhE,MAAM,CAACiE,MAAP,IAAmB,EAHtB;EAIT,gBAAYjE,MAAM,CAACyC,QAAP,IAAmB;EAJtB,GAAX;EAOA,MAAIrB,KAAK,GAAGrB,KAAK,CAACqB,KAAlB;EACA,MAAIG,KAAK,GAAGxB,KAAK,CAACwB,KAAlB;;EACA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,KAAK,CAACN,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;EACrCO,IAAAA,KAAK,CAACP,CAAD,CAAL,CAASE,KAAT,GAAiB,CAAjB,CADqC;EAEtC;;EACD,MAAI+G,MAAM,GAAG7I,EAAE,CAAC6I,MAAH,GACVlG,IADU,CACL,CAACzB,IAAI,CAACyD,KAAN,EAAazD,IAAI,CAAC0D,MAAlB,CADK,EAEVkE,SAFU,CAEA,EAFA,EAGVC,WAHU,CAGE,EAHF,EAIV/G,KAJU,CAIJA,KAJI,EAKVG,KALU,CAKJA,KALI,EAMV4E,MANU,CAMH,EANG,CAAb;EAOA,MAAIiC,IAAI,GAAGH,MAAM,CAACV,IAAP,EAAX;EACA,MAAI1B,KAAK,GAAGzG,EAAE,CAAC+E,KAAH,CAAS2B,UAAT,EAAZ;EACA,MAAIpB,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,QAA/B,EAAyCG,MAAzC,CAAgD,KAAhD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAAC2D,MAAL,GAAc,CADlC,EAEPpB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAAL,GAAc1D,IAAI,CAAC2D,MAAL,GAAc,CAFpC,EAGPrB,MAHO,CAGA,GAHA,EAIPC,IAJO,CAIF,WAJE,EAIW,eAAevC,IAAI,CAAC2D,MAApB,GAA6B,GAA7B,GAAmC3D,IAAI,CAAC2D,MAAxC,GAAiD,GAJ5D,CAAV;EAKA,MAAIsD,IAAI,GAAG7C,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHoB,KADG,EAER0B,KAFQ,GAGRL,MAHQ,CAGD,MAHC,EAIRC,IAJQ,CAIH,OAJG,EAIM,MAJN,EAKRA,IALQ,CAKH,GALG,EAKEuF,IALF,EAMRvF,IANQ,CAMH,cANG,EAMa,UAAST,CAAT,EAAY;EAAE,WAAOsD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYxD,CAAC,CAACiG,EAAd,CAAP;EAA0B,GANrD,EAORC,IAPQ,CAOH,UAASC,CAAT,EAAYC,CAAZ,EAAe;EAAE,WAAOA,CAAC,CAACH,EAAF,GAAOE,CAAC,CAACF,EAAhB;EAAoB,GAPlC,CAAX;EAQA,MAAInG,IAAI,GAAGwC,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHiB,KADG,EAER6B,KAFQ,GAGRL,MAHQ,CAGD,GAHC,EAIRC,IAJQ,CAIH,OAJG,EAIM,MAJN,EAKRA,IALQ,CAKH,WALG,EAKU,UAAST,CAAT,EAAY;EAAE,WAAO,eAAeA,CAAC,CAACyF,CAAjB,GAAqB,GAArB,GAA2BzF,CAAC,CAAC0F,CAA7B,GAAiC,GAAxC;EAA6C,GALrE,EAMR5C,IANQ,CAMH9F,EAAE,CAACqJ,QAAH,CAAYT,IAAZ,GACFU,MADE,CACK,UAAStG,CAAT,EAAY;EAAE,WAAOA,CAAP;EAAU,GAD7B,EAEFuF,EAFE,CAEC,WAFD,EAEc,YAAW;EAAE,SAAKgB,UAAL,CAAgBC,WAAhB,CAA4B,IAA5B;EAAmC,GAF9D,EAGFjB,EAHE,CAGC,MAHD,EAGSkB,QAHT,CANG,CAAX;EAWA3G,EAAAA,IAAI,CAACU,MAAL,CAAY,MAAZ,EACGC,IADH,CACQ,OADR,EACiB,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC0G,EAAT;EAAa,GAD5C,EAEGjG,IAFH,CAEQ,QAFR,EAEkB,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACiG,EAAT;EAAa,GAF7C,EAGGxF,IAHH,CAGQ,MAHR,EAGgB,UAAST,CAAT,EAAY;EAAE,WAAOyD,KAAK,CAACzD,CAAC,CAACmD,KAAH,CAAZ;EAAuB,GAHrD,EAIG1C,IAJH,CAIQ,SAJR,EAImB,GAJnB;EAKAX,EAAAA,IAAI,CAACU,MAAL,CAAY,MAAZ,EACGC,IADH,CACQ,GADR,EACa,CAAC,CADd,EAEGA,IAFH,CAEQ,GAFR,EAEa,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACiG,EAAF,GAAK,CAAZ;EAAe,GAF1C,EAGGxF,IAHH,CAGQ,IAHR,EAGc,OAHd,EAIGA,IAJH,CAIQ,aAJR,EAIuB,KAJvB,EAKGA,IALH,CAKQ,WALR,EAKqB,IALrB,EAMGK,IANH,CAMQ,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACmD,KAAT;EAAgB,GANtC,EAOGwD,MAPH,CAOU,UAAS3G,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACyF,CAAF,GAAMvH,IAAI,CAACyD,KAAL,GAAa,CAA1B;EAA6B,GAPrD,EAQGlB,IARH,CAQQ,GARR,EAQa,IAAIoF,MAAM,CAACC,SAAP,EARjB,EASGrF,IATH,CASQ,aATR,EASuB,OATvB,EAvDuC;;EAmEvC0E,EAAAA,IAAI,CAAC1E,IAAL,CAAU;EACR,YAAQ,MADA;EAER,cAAU,MAFF;EAGR,eAAW;EAHH,GAAV;;EAMA,WAASgG,QAAT,CAAkBzG,CAAlB,EAAqB;EACnBhD,IAAAA,EAAE,CAACuD,MAAH,CAAU,IAAV,EAAgBE,IAAhB,CAAqB,WAArB,EAAkC,eAAeT,CAAC,CAACyF,CAAjB,GAAqB,GAArB,IAA4BzF,CAAC,CAAC0F,CAAF,GAAMpC,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYF,IAAI,CAACC,GAAL,CAASrF,IAAI,CAAC0D,MAAL,GAAc5B,CAAC,CAACiG,EAAzB,EAA6BjJ,EAAE,CAAC4J,KAAH,CAASlB,CAAtC,CAAZ,CAAlC,IAA2F,GAA7H;EACAG,IAAAA,MAAM,CAACgB,QAAP;EACA1B,IAAAA,IAAI,CAAC1E,IAAL,CAAU,GAAV,EAAeuF,IAAf;EACD;EACF,CA9ED;EAiFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2CAzJ,QAAQ,CAACuK,SAAT,GAAqB,UAAS3J,IAAT,EAAeS,MAAf,EAAuB;EAC1CA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAI0B,IAAI,GAAInC,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAAC+C,IAAT,CAAcnC,IAAd,EAAoBS,MAApB,CAA9B,GAA4DT,IAAvE;EAEA,MAAIe,IAAI,GAAG;EACT,gBAAaN,MAAM,CAACmJ,QAAP,IAAmB,GADvB;EAET,aAAanJ,MAAM,CAACoJ,KAAP,IAAmB,GAFvB;EAGT,aAAapJ,MAAM,CAACqJ,KAAP,IAAmB,GAHvB;EAIT,cAAarJ,MAAM,CAACyF,MAAP,IAAmB,CAJvB;EAKT,gBAAazF,MAAM,CAACyC,QAAP,IAAmB;EALvB,GAAX;EAQA,MAAI6G,WAAW,GAAGlK,EAAE,CAAC+G,MAAH,CAAUzE,IAAV,GACfK,IADe,CACV,CAACzB,IAAI,CAAC8I,KAAN,EAAa9I,IAAI,CAAC+I,KAAlB,CADU,EAEfE,UAFe,CAEJ,UAAShB,CAAT,EAAYC,CAAZ,EAAe;EAAE,WAAO,CAACD,CAAC,CAAC3G,MAAF,KAAa4G,CAAC,CAAC5G,MAAf,GAAwB,CAAxB,GAA4B,CAA7B,IAAkC2G,CAAC,CAACc,KAA3C;EAAkD,GAF/D,CAAlB;EAGA,MAAIjI,KAAK,GAAGkI,WAAW,CAAClI,KAAZ,CAAkBM,IAAlB,CAAZ;EACA,MAAIH,KAAK,GAAG+H,WAAW,CAAC/H,KAAZ,CAAkBH,KAAlB,CAAZ;EACA,MAAIoI,QAAQ,GAAGpK,EAAE,CAACsF,GAAH,CAAO8E,QAAP,CAAgBC,MAAhB,GACZC,UADY,CACD,UAAStH,CAAT,EAAY;EAAE,WAAO,CAACA,CAAC,CAAC0F,CAAH,EAAM1F,CAAC,CAACyF,CAAF,GAAM,GAAN,GAAYnC,IAAI,CAACiE,EAAvB,CAAP;EAAmC,GADhD,CAAf;EAEA,MAAIjF,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,WAA/B,EAA4CG,MAA5C,CAAmD,KAAnD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAAC6I,QADZ,EAEPtG,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC6I,QAFb,EAGPvG,MAHO,CAGA,GAHA,EAIPC,IAJO,CAIF,WAJE,EAIW,eAAevC,IAAI,CAAC6I,QAAL,GAAgB,CAA/B,GAAmC,GAAnC,GAAyC7I,IAAI,CAAC6I,QAAL,GAAgB,CAAzD,GAA6D,GAJxE,CAAV;EAKA,MAAI5B,IAAI,GAAG7C,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHoB,KADG,EAER0B,KAFQ,GAGRL,MAHQ,CAGD,MAHC,EAIRC,IAJQ,CAIH,OAJG,EAIM,MAJN,EAKRA,IALQ,CAKH,GALG,EAKE2G,QALF,CAAX;EAMA,MAAItH,IAAI,GAAGwC,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHiB,KADG,EAER6B,KAFQ,GAGRL,MAHQ,CAGD,GAHC,EAIRC,IAJQ,CAIH,OAJG,EAIM,MAJN,EAKRA,IALQ,CAKH,WALG,EAKU,UAAST,CAAT,EAAY;EAAE,WAAO,aAAaA,CAAC,CAACyF,CAAF,GAAM,EAAnB,IAAyB,cAAzB,GAA0CzF,CAAC,CAAC0F,CAA5C,GAAgD,GAAvD;EAA4D,GALpF,CAAX;EAMA,MAAIZ,MAAM,GAAGhF,IAAI,CAACU,MAAL,CAAY,QAAZ,EACVC,IADU,CACL,GADK,EACAvC,IAAI,CAACmF,MADL,CAAb;EAEA,MAAIvC,IAAI,GAAGhB,IAAI,CAACU,MAAL,CAAY,MAAZ,EACRC,IADQ,CACH,IADG,EACG,OADH,EAERA,IAFQ,CAEH,aAFG,EAEY,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACyF,CAAF,GAAM,GAAN,GAAY,OAAZ,GAAsB,KAA7B;EAAoC,GAF9D,EAGRhF,IAHQ,CAGH,WAHG,EAGU,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACyF,CAAF,GAAM,GAAN,GAAY,cAAZ,GAA6B,2BAApC;EAAiE,GAHzF,EAIR3E,IAJQ,CAIH,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACwH,IAAT;EAAe,GAJ1B,CAAX,CAvC0C;;EA8C1CrC,EAAAA,IAAI,CAAC1E,IAAL,CAAU;EACR,YAAQ,MADA;EAER,cAAU,SAFF;EAGR,oBAAgB;EAHR,GAAV;EAKAqE,EAAAA,MAAM,CAACrE,IAAP,CAAY;EACV,YAAQ,SADE;EAEV,cAAU,WAFA;EAGV,oBAAgB,OAHN;EAIV,eAAW;EAJD,GAAZ;EAMAK,EAAAA,IAAI,CAACL,IAAL,CAAU;EACR,iBAAa,MADL;EAER,mBAAe;EAFP,GAAV;EAID,CA7DD;EA+DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2CAlE,QAAQ,CAACkL,UAAT,GAAsB,UAAStK,IAAT,EAAeS,MAAf,EAAuB;EAC3CA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAI0B,IAAI,GAAInC,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAAC+C,IAAT,CAAcnC,IAAd,EAAoBS,MAApB,CAA9B,GAA4DT,IAAvE;EAEA,MAAIe,IAAI,GAAG;EACT,aAAYN,MAAM,CAAC+D,KAAP,IAAmB,GADtB;EAET,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,IAFtB;EAGT,cAAYhE,MAAM,CAACiE,MAAP,IAAmB,GAHtB;EAIT,cAAYjE,MAAM,CAACyF,MAAP,IAAmB,CAJtB;EAKT,gBAAYzF,MAAM,CAACyC,QAAP,IAAmB;EALtB,GAAX;EAQA,MAAIqH,OAAO,GAAG1K,EAAE,CAAC+G,MAAH,CAAU2D,OAAV,GACX/H,IADW,CACN,CAACzB,IAAI,CAAC0D,MAAN,EAAc1D,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAAC2D,MAAhC,CADM,CAAd;EAEA,MAAIuF,QAAQ,GAAGpK,EAAE,CAACsF,GAAH,CAAO8E,QAAP,GACZE,UADY,CACD,UAAStH,CAAT,EAAY;EAAE,WAAO,CAACA,CAAC,CAAC0F,CAAH,EAAM1F,CAAC,CAACyF,CAAR,CAAP;EAAmB,GADhC,CAAf;EAEA,MAAInD,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,YAA/B,EAA6CG,MAA7C,CAAoD,KAApD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,EAGPpB,MAHO,CAGA,GAHA,EAIPC,IAJO,CAIF,WAJE,EAIW,iBAJX,CAAV;EAKA,MAAIzB,KAAK,GAAG0I,OAAO,CAAC1I,KAAR,CAAcM,IAAd,CAAZ;EACA,MAAIH,KAAK,GAAGuI,OAAO,CAACvI,KAAR,CAAcH,KAAd,CAAZ;EACA,MAAImG,IAAI,GAAG7C,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHoB,KADG,EAER0B,KAFQ,GAEAL,MAFA,CAEO,MAFP,EAGRC,IAHQ,CAGH,OAHG,EAGM,MAHN,EAIRA,IAJQ,CAIH,GAJG,EAIE2G,QAJF,CAAX;EAKA,MAAItH,IAAI,GAAGwC,GAAG,CAAC1B,SAAJ,CAAc,OAAd,EACR7C,IADQ,CACHiB,KADG,EAER6B,KAFQ,GAEAL,MAFA,CAEO,GAFP,EAGRC,IAHQ,CAGH,OAHG,EAGM,MAHN,EAIRA,IAJQ,CAIH,WAJG,EAIU,UAAST,CAAT,EAAY;EAAE,WAAO,eAAeA,CAAC,CAAC0F,CAAjB,GAAqB,GAArB,GAA2B1F,CAAC,CAACyF,CAA7B,GAAiC,GAAxC;EAA6C,GAJrE,CAAX;EAKA,MAAIX,MAAM,GAAGhF,IAAI,CAACU,MAAL,CAAY,QAAZ,EACVC,IADU,CACL,GADK,EACAvC,IAAI,CAACmF,MADL,CAAb;EAEA,MAAIvC,IAAI,GAAGhB,IAAI,CAACU,MAAL,CAAY,MAAZ,EACRC,IADQ,CACH,IADG,EACG,UAAST,CAAT,EAAY;EAAE,WAAQA,CAAC,CAACR,MAAF,IAAYQ,CAAC,CAACJ,QAAf,GAA2B,CAAC,CAA5B,GAAgC,CAAvC;EAA0C,GAD3D,EAERa,IAFQ,CAEH,IAFG,EAEG,CAFH,EAGRW,KAHQ,CAGF,aAHE,EAGa,UAASpB,CAAT,EAAY;EAAE,WAAQA,CAAC,CAACR,MAAF,IAAYQ,CAAC,CAACJ,QAAf,GAA2B,KAA3B,GAAmC,OAA1C;EAAmD,GAH9E,EAIRkB,IAJQ,CAIH,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACwH,IAAT;EAAe,GAJ1B,CAAX,CApC2C;;EA2C3CrC,EAAAA,IAAI,CAAC1E,IAAL,CAAU;EACR,YAAQ,MADA;EAER,cAAU,SAFF;EAGR,oBAAgB;EAHR,GAAV;EAKAqE,EAAAA,MAAM,CAACrE,IAAP,CAAY;EACV,YAAQ,SADE;EAEV,cAAU,WAFA;EAGV,oBAAgB,OAHN;EAIV,eAAW;EAJD,GAAZ;EAMAK,EAAAA,IAAI,CAACL,IAAL,CAAU;EACR,iBAAa,MADL;EAER,mBAAe;EAFP,GAAV;EAID,CA1DD;EA4DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoCAlE,QAAQ,CAACoL,QAAT,GAAoB,UAASxK,IAAT,EAAeS,MAAf,EAAuB;EACzCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAI0B,IAAI,GAAInC,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAAC+C,IAAT,CAAcnC,IAAd,EAAoBS,MAApB,CAA9B,GAA4DT,IAAvE;EAEA,MAAIe,IAAI,GAAG;EACT,aAAYN,MAAM,CAAC+D,KAAP,IAAmB,IADtB;EAET,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,GAFtB;EAGT,cAAYhE,MAAM,CAACiE,MAAP,IAAmB,GAHtB;EAIT,gBAAYjE,MAAM,CAACyC,QAAP,IAAmB;EAJtB,GAAX;EAOA,MAAIgD,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASrF,IAAI,CAACyD,KAAd,EAAqBzD,IAAI,CAAC0D,MAA1B,IAAoC,CAApC,GAAwC1D,IAAI,CAAC2D,MAA1D;EACA,MAAI4D,CAAC,GAAGzI,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBC,KAAlB,CAAwB,CAAC,CAAD,EAAI,IAAIkB,IAAI,CAACiE,EAAb,CAAxB,CAAR;EACA,MAAI7B,CAAC,GAAG1I,EAAE,CAAC+E,KAAH,CAAS6F,IAAT,GAAgBxF,KAAhB,CAAsB,CAAC,CAAD,EAAIiB,MAAJ,CAAtB,CAAR;EACA,MAAII,KAAK,GAAGzG,EAAE,CAAC+E,KAAH,CAAS2B,UAAT,EAAZ;EACA,MAAIpB,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,UAA/B,EAA2CG,MAA3C,CAAkD,KAAlD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,EAGPpB,MAHO,CAGA,GAHA,EAIPC,IAJO,CAIF,WAJE,EAIW,eAAevC,IAAI,CAACyD,KAAL,GAAW,CAA1B,GAA8B,GAA9B,GAAoCzD,IAAI,CAAC0D,MAAL,GAAY,CAAhD,GAAoD,GAJ/D,CAAV;EAKA,MAAI+B,GAAG,GAAG3G,EAAE,CAACsF,GAAH,CAAOqB,GAAP,GACPkE,UADO,CACI,UAAS7H,CAAT,EAAa;EAAE,WAAOsD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYF,IAAI,CAACC,GAAL,CAAS,IAAID,IAAI,CAACiE,EAAlB,EAAsB9B,CAAC,CAACzF,CAAC,CAACyF,CAAH,CAAvB,CAAZ,CAAP;EAAmD,GADtE,EAEPqC,QAFO,CAEE,UAAS9H,CAAT,EAAe;EAAE,WAAOsD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYF,IAAI,CAACC,GAAL,CAAS,IAAID,IAAI,CAACiE,EAAlB,EAAsB9B,CAAC,CAACzF,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAAC0G,EAAT,CAAvB,CAAZ,CAAP;EAA0D,GAF7E,EAGP7C,WAHO,CAGK,UAAS7D,CAAT,EAAY;EAAE,WAAOsD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYkC,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAb,CAAP;EAA4B,GAH/C,EAIP9B,WAJO,CAIK,UAAS5D,CAAT,EAAY;EAAE,WAAOsD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYkC,CAAC,CAAC1F,CAAC,CAAC0F,CAAF,GAAM1F,CAAC,CAACiG,EAAT,CAAb,CAAP;EAAmC,GAJtD,CAAV;EAKA,MAAI8B,SAAS,GAAG/K,EAAE,CAAC+G,MAAH,CAAUgE,SAAV,GACbjJ,KADa,CACP,UAASkB,CAAT,EAAY;EAAC,WAAOA,CAAC,CAAClB,KAAT;EAAe,GADrB,CAAhB;EAEA,MAAIE,KAAK,GAAG+I,SAAS,CAAC/I,KAAV,CAAgBM,IAAhB,CAAZ;EACA,MAAI0G,IAAI,GAAG1D,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EACR7C,IADQ,CACHiB,KADG,EAER6B,KAFQ,GAGRL,MAHQ,CAGD,MAHC,EAIRC,IAJQ,CAIH,GAJG,EAIEkD,GAJF,EAKRlD,IALQ,CAKH,OALG,EAKM,KALN,EAMRW,KANQ,CAMF,MANE,EAMM,UAASpB,CAAT,EAAY;EAAE,WAAOyD,KAAK,CAAC,CAACzD,CAAC,CAACJ,QAAF,GAAaI,CAAb,GAAiBA,CAAC,CAACR,MAApB,EAA4BgI,IAA7B,CAAZ;EAAgD,GANpE,EAORjC,EAPQ,CAOL,OAPK,EAOIyC,KAPJ,CAAX;EAQA,MAAIlH,IAAI,GAAGwB,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EACR7C,IADQ,CACHiB,KADG,EAER6B,KAFQ,GAGRL,MAHQ,CAGD,MAHC,EAIRC,IAJQ,CAIH,WAJG,EAIU,UAAST,CAAT,EAAY;EAC7B,QAAIiI,MAAM,GAAGxC,CAAC,CAACzF,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAAC0G,EAAF,GAAK,CAAZ,CAAD,GAAkB,GAAlB,GAAwBpD,IAAI,CAACiE,EAA7B,GAAkC,EAA/C;EACA,WAAO,YAAYU,MAAZ,GAAqB,cAArB,GAAsCvC,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAvC,GAA+C,GAAtD;EACD,GAPQ,EAQRjF,IARQ,CAQH,IARG,EAQG,MARH,EASRA,IATQ,CASH,IATG,EASG,OATH,EAURK,IAVQ,CAUH,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACwH,IAAT;EAAe,GAV1B,EAWRjC,EAXQ,CAWL,OAXK,EAWIyC,KAXJ,CAAX,CArCyC;;EAmDzChC,EAAAA,IAAI,CAACvF,IAAL,CAAU;EACR,cAAU,SADF;EAER,iBAAa;EAFL,GAAV;EAIAK,EAAAA,IAAI,CAACL,IAAL,CAAU;EACR,iBAAa,MADL;EAER,mBAAe;EAFP,GAAV;;EAKA,WAASuH,KAAT,CAAehI,CAAf,EAAkB;EAChBgG,IAAAA,IAAI,CAACkC,UAAL,GACGC,QADH,CACY,GADZ,EAEGC,SAFH,CAEa,GAFb,EAEkBC,QAAQ,CAACrI,CAAD,CAF1B;EAGAc,IAAAA,IAAI,CAACM,KAAL,CAAW,YAAX,EAAyB,UAAUkH,CAAV,EAAa;EAClC;EACA,aAAOC,UAAU,CAACvI,CAAD,EAAIsI,CAAJ,CAAV,GAAmB,IAAnB,GAA0BtL,EAAE,CAACuD,MAAH,CAAU,IAAV,EAAgBa,KAAhB,CAAsB,YAAtB,CAAjC;EACD,KAHH,EAIG8G,UAJH,GAKGC,QALH,CAKY,GALZ,EAMGC,SANH,CAMa,WANb,EAM0B,UAASpI,CAAT,EAAY;EAClC,aAAO,YAAW;EAChB,YAAIiI,MAAM,GAAGxC,CAAC,CAACzF,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAAC0G,EAAF,GAAO,CAAd,CAAD,GAAoB,GAApB,GAA0BpD,IAAI,CAACiE,EAA/B,GAAoC,EAAjD;EACA,eAAO,YAAYU,MAAZ,GAAqB,cAArB,GAAsCvC,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAvC,GAA+C,GAAtD;EACD,OAHD;EAID,KAXH,EAYG8C,IAZH,CAYQ,KAZR,EAYe,UAASF,CAAT,EAAY;EACvB;EACAtL,MAAAA,EAAE,CAACuD,MAAH,CAAU,IAAV,EAAgBa,KAAhB,CAAsB,YAAtB,EAAoCmH,UAAU,CAACvI,CAAD,EAAIsI,CAAJ,CAAV,GAAmB,IAAnB,GAA0B,QAA9D;EACD,KAfH;EAgBD;;EACD,WAASG,QAAT,CAAkBzI,CAAlB,EAAqB;EACnB,WAAOA,CAAC,CAACJ,QAAF,GAAa0D,IAAI,CAACE,GAAL,CAASkF,KAAT,CAAepF,IAAf,EAAqBtD,CAAC,CAACJ,QAAF,CAAWlB,GAAX,CAAe+J,QAAf,CAArB,CAAb,GAA8DzI,CAAC,CAAC0F,CAAF,GAAM1F,CAAC,CAACiG,EAA7E;EACD;;EACD,WAASoC,QAAT,CAAkBrI,CAAlB,EAAqB;EACnB,QAAI2I,EAAE,GAAG3L,EAAE,CAAC4L,WAAH,CAAenD,CAAC,CAAC/C,MAAF,EAAf,EAA2B,CAAC1C,CAAC,CAACyF,CAAH,EAAMzF,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAAC0G,EAAd,CAA3B,CAAT;EAAA,QACImC,EAAE,GAAG7L,EAAE,CAAC4L,WAAH,CAAelD,CAAC,CAAChD,MAAF,EAAf,EAA2B,CAAC1C,CAAC,CAAC0F,CAAH,EAAM+C,QAAQ,CAACzI,CAAD,CAAd,CAA3B,CADT;EAAA,QAEI8I,EAAE,GAAG9L,EAAE,CAAC4L,WAAH,CAAelD,CAAC,CAACtD,KAAF,EAAf,EAA0B,CAACpC,CAAC,CAAC0F,CAAF,GAAM,EAAN,GAAW,CAAZ,EAAerC,MAAf,CAA1B,CAFT;EAGA,WAAO,UAASrD,CAAT,EAAY;EACjB,aAAO,UAAS+I,CAAT,EAAY;EACjBtD,QAAAA,CAAC,CAAC/C,MAAF,CAASiG,EAAE,CAACI,CAAD,CAAX;EACArD,QAAAA,CAAC,CAAChD,MAAF,CAASmG,EAAE,CAACE,CAAD,CAAX,EAAgB3G,KAAhB,CAAsB0G,EAAE,CAACC,CAAD,CAAxB;EACA,eAAOpF,GAAG,CAAC3D,CAAD,CAAV;EACD,OAJD;EAKD,KAND;EAOD;;EACD,WAASuI,UAAT,CAAoBS,CAApB,EAAuBC,CAAvB,EAA0B;EACxB,QAAID,CAAC,KAAKC,CAAV,EAAa,OAAO,IAAP;;EACb,QAAID,CAAC,CAACpJ,QAAN,EAAgB;EACd,aAAOoJ,CAAC,CAACpJ,QAAF,CAAWsJ,IAAX,CAAgB,UAASlJ,CAAT,EAAY;EACjC,eAAOuI,UAAU,CAACvI,CAAD,EAAIiJ,CAAJ,CAAjB;EACD,OAFM,CAAP;EAGD;;EACD,WAAO,KAAP;EACD;EACF,CAzGD;EA2GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAsDA1M,QAAQ,CAAC4M,UAAT,GAAsB,UAAShM,IAAT,EAAeS,MAAf,EAAuB;EAC3CA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAI0B,IAAI,GAAInC,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAAC+C,IAAT,CAAcnC,IAAd,EAAoBS,MAApB,CAA9B,GAA4DT,IAAvE;EAEA,MAAIe,IAAI,GAAG;EACT,aAAaN,MAAM,CAAC+D,KAAP,IAAmB,GADvB;EAET,cAAa/D,MAAM,CAACgE,MAAP,IAAmB,GAFvB;EAGT,gBAAahE,MAAM,CAACmJ,QAAP,IAAmB,GAHvB;EAIT,gBAAanJ,MAAM,CAACyC,QAAP,IAAmB;EAJvB,GAAX;EAOA,MAAI+I,CAAC,GAAGlL,IAAI,CAACyD,KAAb;EAAA,MACI0H,CAAC,GAAGnL,IAAI,CAAC0D,MADb;EAAA,MAEI0H,CAAC,GAAGpL,IAAI,CAAC6I,QAFb;EAAA,MAGItB,CAAC,GAAGzI,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBC,KAAlB,CAAwB,CAAC,CAAD,EAAIkH,CAAJ,CAAxB,CAHR;EAAA,MAII5D,CAAC,GAAG1I,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBC,KAAlB,CAAwB,CAAC,CAAD,EAAIkH,CAAJ,CAAxB,CAJR;EAMA,MAAIC,IAAI,GAAGvM,EAAE,CAAC+G,MAAH,CAAUwF,IAAV,GACR5J,IADQ,CACH,CAAC2J,CAAD,EAAIA,CAAJ,CADG,EAERxK,KAFQ,CAEF,UAASkB,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAClB,KAAT;EAAgB,GAF5B,CAAX;EAIA,MAAIgB,IAAI,GAAIR,IAAZ;EACA,MAAIN,KAAK,GAAGuK,IAAI,CAACvK,KAAL,CAAWM,IAAX,CAAZ;EAEA,MAAIkK,GAAG,GAAGjN,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,YAA/B,EAA6CG,MAA7C,CAAoD,KAApD,EACPC,IADO,CACF,OADE,EACO2I,CADP,EAEP3I,IAFO,CAEF,QAFE,EAEQ4I,CAFR,EAGP7I,MAHO,CAGA,GAHA,EAIPC,IAJO,CAIF,WAJE,EAIW,eAAe,CAAC2I,CAAC,GAAGE,CAAL,IAAU,CAAzB,GAA6B,GAA7B,GAAmC,CAACD,CAAC,GAAGC,CAAL,IAAU,CAA7C,GAAiD,GAJ5D,CAAV;EAMAE,EAAAA,GAAG,CAAC5I,SAAJ,CAAc,QAAd,EACG7C,IADH,CACQiB,KADR,EAEG6B,KAFH,GAGGL,MAHH,CAGU,QAHV,EAIGC,IAJH,CAIQ,OAJR,EAIiB,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACJ,QAAF,GAAa,QAAb,GAAwB,OAA/B;EAAwC,GAJvE,EAKGa,IALH,CAKQ,IALR,EAKc,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACyF,CAAT;EAAY,GALxC,EAMGhF,IANH,CAMQ,IANR,EAMc,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC0F,CAAT;EAAY,GANxC,EAOGjF,IAPH,CAOQ,GAPR,EAOa,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACsJ,CAAT;EAAY,GAPvC;EAQF;;;;;;;;;EARE,GAiBG/D,EAjBH,CAiBM,OAjBN,EAiBe,UAASvF,CAAT,EAAY;EAAE,WAAOyJ,IAAI,CAAC3J,IAAI,KAAKE,CAAT,GAAaV,IAAb,GAAoBU,CAArB,CAAX;EAAoC,GAjBjE;EAmBAwJ,EAAAA,GAAG,CAAC5I,SAAJ,CAAc,MAAd,EACG7C,IADH,CACQiB,KADR,EAEG6B,KAFH,GAGGL,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,OAJR,EAIiB,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACJ,QAAF,GAAa,QAAb,GAAwB,OAA/B;EAAwC,GAJvE,EAKGa,IALH,CAKQ,GALR,EAKa,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACyF,CAAT;EAAY,GALvC,EAMGhF,IANH,CAMQ,GANR,EAMa,UAAST,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC0F,CAAT;EAAY,GANvC;EAAA,GAQGtE,KARH,CAQS,SART,EAQoB,UAASpB,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACsJ,CAAF,GAAM,EAAN,GAAW,CAAX,GAAe,CAAtB;EAAyB,GAR3D,EASGxI,IATH,CASQ,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACwH,IAAT;EAAe,GATrC;EAWE;EAXF,GAYG/G,IAZH,CAYQ,aAZR,EAYuB,OAZvB,EAaGyH,UAbH,GAcGC,QAdH,CAcY,IAdZ,EAeG1H,IAfH,CAeQ,WAfR,EAeqB,UAAST,CAAT,EAAY;EAAE,WAAO,iBAAiBA,CAAC,CAACyF,CAAnB,GAAuB,IAAvB,GAA8BzF,CAAC,CAAC0F,CAAhC,GAAoC,GAA3C;EAAgD,GAfnF;EAiBA1I,EAAAA,EAAE,CAACuD,MAAH,CAAUmJ,MAAV,EAAkBnE,EAAlB,CAAqB,OAArB,EAA8B,YAAW;EAAEkE,IAAAA,IAAI,CAACnK,IAAD,CAAJ;EAAY,GAAvD;;EAEA,WAASmK,IAAT,CAAczJ,CAAd,EAAiBpB,CAAjB,EAAoB;EAClB,QAAI+K,CAAC,GAAGL,CAAC,GAAGtJ,CAAC,CAACsJ,CAAN,GAAU,CAAlB;EACA7D,IAAAA,CAAC,CAAC/C,MAAF,CAAS,CAAC1C,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAACsJ,CAAT,EAAYtJ,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAACsJ,CAApB,CAAT;EACA5D,IAAAA,CAAC,CAAChD,MAAF,CAAS,CAAC1C,CAAC,CAAC0F,CAAF,GAAM1F,CAAC,CAACsJ,CAAT,EAAYtJ,CAAC,CAAC0F,CAAF,GAAM1F,CAAC,CAACsJ,CAApB,CAAT;EACA,QAAIP,CAAC,GAAGS,GAAG,CAACtB,UAAJ,GACLC,QADK,CACInL,EAAE,CAAC4J,KAAH,CAASgD,MAAT,GAAkB,IAAlB,GAAyB,GAD7B,CAAR;EAEAb,IAAAA,CAAC,CAACnI,SAAF,CAAY,QAAZ,EACGH,IADH,CACQ,IADR,EACc,UAAST,CAAT,EAAY;EAAE,aAAOyF,CAAC,CAACzF,CAAC,CAACyF,CAAH,CAAR;EAAe,KAD3C,EAEGhF,IAFH,CAEQ,IAFR,EAEc,UAAST,CAAT,EAAY;EAAE,aAAO0F,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAR;EAAe,KAF3C,EAGGjF,IAHH,CAGQ,GAHR,EAGa,UAAST,CAAT,EAAY;EAAE,aAAO2J,CAAC,GAAG3J,CAAC,CAACsJ,CAAb;EAAgB,KAH3C;EAIAP,IAAAA,CAAC,CAACnI,SAAF,CAAY,MAAZ,EACKH,IADL,CACU,GADV,EACe,UAAST,CAAT,EAAY;EAAE,aAAOyF,CAAC,CAACzF,CAAC,CAACyF,CAAH,CAAR;EAAe,KAD5C,EAEKhF,IAFL,CAEU,GAFV,EAEe,UAAST,CAAT,EAAY;EAAE,aAAO0F,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAR;EAAe,KAF5C,EAGKtE,KAHL,CAGW,SAHX,EAGsB,UAASpB,CAAT,EAAY;EAAE,aAAO2J,CAAC,GAAG3J,CAAC,CAACsJ,CAAN,GAAU,EAAV,GAAe,CAAf,GAAmB,CAA1B;EAA6B,KAHjE;EAIAtM,IAAAA,EAAE,CAAC4J,KAAH,CAASiD,eAAT;EACD;EACF,CArFD;EAuFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmCAtN,QAAQ,CAACuN,OAAT,GAAmB,UAAS3M,IAAT,EAAeS,MAAf,EAAuB;EACxCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAI0B,IAAI,GAAInC,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAAC+C,IAAT,CAAcnC,IAAd,EAAoBS,MAApB,CAA9B,GAA4DT,IAAvE;EAEA,MAAIe,IAAI,GAAG;EACT,aAAYN,MAAM,CAAC+D,KAAP,IAAmB,GADtB;EAET,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,GAFtB;EAGT,aAAYhE,MAAM,CAACmM,KAAP,IAAmB,KAHtB;EAIT,aAAYnM,MAAM,CAAC6F,KAAP,IAAmBzG,EAAE,CAAC+E,KAAH,CAASiI,WAAT,EAJtB;EAKT,cAAYpM,MAAM,CAACiE,MAAP,IAAmB;EAACoI,MAAAA,GAAG,EAAE,CAAN;EAASC,MAAAA,KAAK,EAAE,CAAhB;EAAmBC,MAAAA,MAAM,EAAE,CAA3B;EAA8BC,MAAAA,IAAI,EAAE;EAApC,KALtB;EAMT,gBAAYxM,MAAM,CAACyC,QAAP,IAAmB;EANtB,GAAX;EASA,MAAIsB,KAAK,GAAIzD,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAAC2D,MAAL,CAAYuI,IAAzB,GAAgClM,IAAI,CAAC2D,MAAL,CAAYqI,KAAzD;EACA,MAAItI,MAAM,GAAG1D,IAAI,CAAC0D,MAAL,GAAc1D,IAAI,CAAC2D,MAAL,CAAYoI,GAA1B,GAAgC/L,IAAI,CAAC2D,MAAL,CAAYsI,MAAzD;EACA,MAAI1G,KAAK,GAAGvF,IAAI,CAACuF,KAAjB;;EAEA,WAASsG,KAAT,CAAe/J,CAAf,EAAkB;EAAE,WAAO,CAAP;EAAU;;EAC9B,WAASL,IAAT,CAAcK,CAAd,EAAiB;EAAE,WAAOA,CAAC,CAAClB,KAAT;EAAgB;;EAEnC,MAAIgL,OAAO,GAAG9M,EAAE,CAAC+G,MAAH,CAAU+F,OAAV,GACXnK,IADW,CACN,CAACgC,KAAD,EAAQC,MAAR,CADM,EAEXyI,MAFW,CAEJ,IAFI,EAGXvL,KAHW,CAGLZ,IAAI,CAAC6L,KAAL,GAAaA,KAAb,GAAqBpK,IAHhB,CAAd;EAKA,MAAI2K,GAAG,GAAG/N,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,SAA/B,EACPe,KADO,CACD,UADC,EACW,UADX,EAEPA,KAFO,CAED,OAFC,EAEQlD,IAAI,CAACyD,KAAL,GAAa,IAFrB,EAGPP,KAHO,CAGD,QAHC,EAGSlD,IAAI,CAAC0D,MAAL,GAAc,IAHvB,EAIPR,KAJO,CAID,MAJC,EAIOlD,IAAI,CAAC2D,MAAL,CAAYuI,IAAZ,GAAmB,IAJ1B,EAKPhJ,KALO,CAKD,KALC,EAKMlD,IAAI,CAAC2D,MAAL,CAAYoI,GAAZ,GAAkB,IALxB,CAAV;EAOA,MAAInK,IAAI,GAAGwK,GAAG,CAACC,KAAJ,CAAUjL,IAAV,EAAgBsB,SAAhB,CAA0B,OAA1B,EACR7C,IADQ,CACH+L,OAAO,CAAC9K,KADL,EAER6B,KAFQ,GAGRL,MAHQ,CAGD,KAHC,EAIRC,IAJQ,CAIH,OAJG,EAIM,MAJN,EAKRqC,IALQ,CAKH0H,QALG,EAMRpJ,KANQ,CAMF,YANE,EAMY,UAASpB,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACJ,QAAF,GAAa6D,KAAK,CAACzD,CAAC,CAACwH,IAAH,CAAlB,GAA6B,IAApC;EAA0C,GANpE,EAOR1G,IAPQ,CAOH,UAASd,CAAT,EAAY;EAAE,WAAOA,CAAC,CAACJ,QAAF,GAAa,IAAb,GAAoBI,CAAC,CAACwH,IAA7B;EAAmC,GAP9C,CAAX,CAjCwC;;EA2CxC1H,EAAAA,IAAI,CAACsB,KAAL,CAAW;EACT,oBAAgB,OADP;EAET,oBAAgB,KAFP;EAGT,oBAAgB,OAHP;EAIT,iBAAa,MAJJ;EAKT,mBAAe,YALN;EAMT,mBAAe,MANN;EAOT,gBAAY,QAPH;EAQT,gBAAY,UARH;EAST,mBAAe;EATN,GAAX;;EAYA,WAASoJ,QAAT,GAAoB;EAClB,SAAKpJ,KAAL,CAAW,MAAX,EAAqB,UAASpB,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACyF,CAAF,GAAM,IAAb;EAAmB,KAAtD,EACKrE,KADL,CACW,KADX,EACqB,UAASpB,CAAT,EAAY;EAAE,aAAOA,CAAC,CAAC0F,CAAF,GAAM,IAAb;EAAmB,KADtD,EAEKtE,KAFL,CAEW,OAFX,EAEqB,UAASpB,CAAT,EAAY;EAAE,aAAOsD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYxD,CAAC,CAAC0G,EAAF,GAAO,CAAnB,IAAwB,IAA/B;EAAqC,KAFxE,EAGKtF,KAHL,CAGW,QAHX,EAGqB,UAASpB,CAAT,EAAY;EAAE,aAAOsD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYxD,CAAC,CAACiG,EAAF,GAAO,CAAnB,IAAwB,IAA/B;EAAqC,KAHxE;EAID;EACF,CA7DD;EA+DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqCA1J,QAAQ,CAACkO,WAAT,GAAuB,UAAStN,IAAT,EAAeS,MAAf,EAAuB;EAC5CA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAI0B,IAAI,GAAInC,IAAI,CAACU,IAAL,IAAaV,IAAI,CAACa,OAAnB,GAA8BzB,QAAQ,CAAC+C,IAAT,CAAcnC,IAAd,EAAoBS,MAApB,CAA9B,GAA4DT,IAAvE;EAEA,MAAIe,IAAI,GAAG;EACT,aAAYN,MAAM,CAAC+D,KAAP,IAAmB,GADtB;EAET,cAAY/D,MAAM,CAACgE,MAAP,IAAmB,GAFtB;EAGT,cAAYhE,MAAM,CAACiE,MAAP,IAAmB;EAACoI,MAAAA,GAAG,EAAE,EAAN;EAAUC,MAAAA,KAAK,EAAE,CAAjB;EAAoBC,MAAAA,MAAM,EAAE,CAA5B;EAA+BC,MAAAA,IAAI,EAAE;EAArC,KAHtB;EAIT,aAAYxM,MAAM,CAAC6F,KAAP,IAAmBzG,EAAE,CAAC+E,KAAH,CAAS2B,UAAT,EAJtB;EAKT,cAAY9F,MAAM,CAAC8M,MAAP,IAAmB1N,EAAE,CAAC0N,MAAH,CAAU,IAAV,CALtB;EAMT,gBAAY9M,MAAM,CAACyC,QAAP,IAAmB;EANtB,GAAX;EASA,MAAIsB,KAAK,GAAIzD,IAAI,CAACyD,KAAL,GAAazD,IAAI,CAAC2D,MAAL,CAAYuI,IAAzB,GAAgClM,IAAI,CAAC2D,MAAL,CAAYqI,KAAzD;EACA,MAAItI,MAAM,GAAG1D,IAAI,CAAC0D,MAAL,GAAc1D,IAAI,CAAC2D,MAAL,CAAYoI,GAA1B,GAAgC/L,IAAI,CAAC2D,MAAL,CAAYsI,MAAzD;EACA,MAAI1G,KAAK,GAAGvF,IAAI,CAACuF,KAAjB;EACA,MAAIiH,MAAM,GAAGxM,IAAI,CAACwM,MAAlB;EACA,MAAIC,aAAJ;EAEA,MAAIlF,CAAC,GAAGzI,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBO,MAAlB,CAAyB,CAAC,CAAD,EAAIf,KAAJ,CAAzB,EAAqCS,KAArC,CAA2C,CAAC,CAAD,EAAIT,KAAJ,CAA3C,CAAR;EACA,MAAI+D,CAAC,GAAG1I,EAAE,CAAC+E,KAAH,CAASI,MAAT,GAAkBO,MAAlB,CAAyB,CAAC,CAAD,EAAId,MAAJ,CAAzB,EAAsCQ,KAAtC,CAA4C,CAAC,CAAD,EAAIR,MAAJ,CAA5C,CAAR;EAEA,MAAIkI,OAAO,GAAG9M,EAAE,CAAC+G,MAAH,CAAU+F,OAAV,GACXlK,QADW,CACF,UAASI,CAAT,EAAYiH,KAAZ,EAAmB;EAAE,WAAOA,KAAK,GAAG,IAAH,GAAUjH,CAAC,CAACJ,QAAxB;EAAkC,GADrD,EAEXsG,IAFW,CAEN,UAASC,CAAT,EAAYC,CAAZ,EAAe;EAAE,WAAOD,CAAC,CAACrH,KAAF,GAAUsH,CAAC,CAACtH,KAAnB;EAA0B,GAFrC,EAGX8L,KAHW,CAGLhJ,MAAM,GAAGD,KAAT,GAAiB,GAAjB,IAAwB,IAAI2B,IAAI,CAACsE,IAAL,CAAU,CAAV,CAA5B,CAHK,EAIXiD,KAJW,CAIL,KAJK,CAAd;EAMA,MAAIvI,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,aAA/B,EAA8CG,MAA9C,CAAqD,KAArD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,EAGPR,KAHO,CAGD,aAHC,EAGc,CAAClD,IAAI,CAAC2D,MAAL,CAAYuI,IAAb,GAAoB,IAHlC,EAIPhJ,KAJO,CAID,cAJC,EAIe,CAAClD,IAAI,CAAC2D,MAAL,CAAYqI,KAAb,GAAqB,IAJpC,EAKP1J,MALO,CAKA,GALA,EAMPC,IANO,CAMF,WANE,EAMW,eAAevC,IAAI,CAAC2D,MAAL,CAAYuI,IAA3B,GAAkC,GAAlC,GAAwClM,IAAI,CAAC2D,MAAL,CAAYoI,GAApD,GAA0D,GANrE,EAOP7I,KAPO,CAOD,iBAPC,EAOkB,YAPlB,CAAV;EASA,MAAI0J,WAAW,GAAGxI,GAAG,CAAC9B,MAAJ,CAAW,GAAX,EACfC,IADe,CACV,OADU,EACD,aADC,CAAlB;EAGAqK,EAAAA,WAAW,CAACtK,MAAZ,CAAmB,MAAnB,EACGC,IADH,CACQ,GADR,EACa,CAACvC,IAAI,CAAC2D,MAAL,CAAYoI,GAD1B,EAEGxJ,IAFH,CAEQ,OAFR,EAEiBkB,KAFjB,EAGGlB,IAHH,CAGQ,QAHR,EAGkBvC,IAAI,CAAC2D,MAAL,CAAYoI,GAH9B,EAIGxJ,IAJH,CAIQ,MAJR,EAIgB,SAJhB;EAMAqK,EAAAA,WAAW,CAACtK,MAAZ,CAAmB,MAAnB,EACGC,IADH,CACQ,GADR,EACa,CADb,EAEGA,IAFH,CAEQ,GAFR,EAEa,IAAIvC,IAAI,CAAC2D,MAAL,CAAYoI,GAF7B,EAGGxJ,IAHH,CAGQ,IAHR,EAGc,OAHd,EAIGA,IAJH,CAIQ,QAJR,EAIkB,SAJlB,EAKGA,IALH,CAKQ,MALR,EAKgB,SALhB;EAOAsK,EAAAA,UAAU,CAACzL,IAAD,CAAV;EACAyE,EAAAA,MAAM,CAACzE,IAAD,CAAN;EACA0L,EAAAA,OAAO,CAAC1L,IAAD,CAAP;;EAEA,WAASyL,UAAT,CAAoBzL,IAApB,EAA0B;EACxBA,IAAAA,IAAI,CAACmG,CAAL,GAASnG,IAAI,CAACoG,CAAL,GAAS,CAAlB;EACApG,IAAAA,IAAI,CAACoH,EAAL,GAAU/E,KAAV;EACArC,IAAAA,IAAI,CAAC2G,EAAL,GAAUrE,MAAV;EACAtC,IAAAA,IAAI,CAAC2H,KAAL,GAAa,CAAb;EACD,GA/D2C;EAkE5C;EACA;EACA;EACA;EACA;EACA;;;EACA,WAASlD,MAAT,CAAgB/D,CAAhB,EAAmB;EACjB,QAAIA,CAAC,CAACJ,QAAN,EAAgB;EACdkK,MAAAA,OAAO,CAAC9K,KAAR,CAAc;EAACY,QAAAA,QAAQ,EAAEI,CAAC,CAACJ;EAAb,OAAd;EACAI,MAAAA,CAAC,CAACJ,QAAF,CAAWqL,OAAX,CAAmB,UAAShC,CAAT,EAAY;EAC7BA,QAAAA,CAAC,CAACxD,CAAF,GAAMzF,CAAC,CAACyF,CAAF,GAAMwD,CAAC,CAACxD,CAAF,GAAMzF,CAAC,CAAC0G,EAApB;EACAuC,QAAAA,CAAC,CAACvD,CAAF,GAAM1F,CAAC,CAAC0F,CAAF,GAAMuD,CAAC,CAACvD,CAAF,GAAM1F,CAAC,CAACiG,EAApB;EACAgD,QAAAA,CAAC,CAACvC,EAAF,IAAQ1G,CAAC,CAAC0G,EAAV;EACAuC,QAAAA,CAAC,CAAChD,EAAF,IAAQjG,CAAC,CAACiG,EAAV;EACAgD,QAAAA,CAAC,CAACzJ,MAAF,GAAWQ,CAAX;EACA+D,QAAAA,MAAM,CAACkF,CAAD,CAAN;EACD,OAPD;EAQD;EACF;;EAED,WAAS+B,OAAT,CAAiBhL,CAAjB,EAAoB;EAClB8K,IAAAA,WAAW,CACRP,KADH,CACSvK,CAAC,CAACR,MADX,EAEG+F,EAFH,CAEM,OAFN,EAEe2C,UAFf,EAGG3H,MAHH,CAGU,MAHV,EAIGO,IAJH,CAIQ0G,IAAI,CAACxH,CAAD,CAJZ;EAMA,QAAIkL,EAAE,GAAG5I,GAAG,CAAC6I,MAAJ,CAAW,GAAX,EAAgB,cAAhB,EACNZ,KADM,CACAvK,CADA,EAENS,IAFM,CAED,OAFC,EAEQ,OAFR,CAAT;EAIA,QAAIuD,CAAC,GAAGkH,EAAE,CAACtK,SAAH,CAAa,GAAb,EACL7C,IADK,CACAiC,CAAC,CAACJ,QADF,EAELiB,KAFK,GAGLL,MAHK,CAGE,GAHF,CAAR;EAKAwD,IAAAA,CAAC,CAAC2C,MAAF,CAAS,UAAS3G,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACJ,QAAT;EAAmB,KAA1C,EACGwL,OADH,CACW,UADX,EACuB,IADvB,EAEG7F,EAFH,CAEM,OAFN,EAEe2C,UAFf;EAIAlE,IAAAA,CAAC,CAACpD,SAAF,CAAY,QAAZ,EACG7C,IADH,CACQ,UAASiC,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACJ,QAAF,IAAc,CAACI,CAAD,CAArB;EAA0B,KADhD,EAEGa,KAFH,GAGGL,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,OAJR,EAIiB,OAJjB,EAKGqC,IALH,CAKQuI,IALR;EAOArH,IAAAA,CAAC,CAACxD,MAAF,CAAS,MAAT,EACGC,IADH,CACQ,OADR,EACiB,QADjB,EAEGqC,IAFH,CAEQuI,IAFR,EAGG7K,MAHH,CAGU,OAHV,EAIGM,IAJH,CAIQ,UAASd,CAAT,EAAY;EAAE,aAAO0K,MAAM,CAAC1K,CAAC,CAAClB,KAAH,CAAb;EAAwB,KAJ9C;EAMAkF,IAAAA,CAAC,CAACxD,MAAF,CAAS,MAAT,EACGC,IADH,CACQ,IADR,EACc,OADd,EAEGK,IAFH,CAEQ,UAASd,CAAT,EAAY;EAAE,aAAOA,CAAC,CAACwH,IAAT;EAAe,KAFrC,EAGG1E,IAHH,CAGQhC,IAHR;;EAKA,aAASoH,UAAT,CAAoBlI,CAApB,EAAuB;EACrB,UAAI2K,aAAa,IAAI,CAAC3K,CAAtB,EAAyB;EACzB2K,MAAAA,aAAa,GAAG,IAAhB;EACA,UAAIW,EAAE,GAAGN,OAAO,CAAChL,CAAD,CAAhB;EAAA,UACIuL,EAAE,GAAGL,EAAE,CAAChD,UAAH,GAAgBC,QAAhB,CAAyB,GAAzB,CADT;EAAA,UAEIqD,EAAE,GAAGF,EAAE,CAACpD,UAAH,GAAgBC,QAAhB,CAAyB,GAAzB,CAFT,CAHqB;;EAQrB1C,MAAAA,CAAC,CAAC/C,MAAF,CAAS,CAAC1C,CAAC,CAACyF,CAAH,EAAMzF,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAAC0G,EAAd,CAAT;EACAhB,MAAAA,CAAC,CAAChD,MAAF,CAAS,CAAC1C,CAAC,CAAC0F,CAAH,EAAM1F,CAAC,CAAC0F,CAAF,GAAM1F,CAAC,CAACiG,EAAd,CAAT,EATqB;;EAYrB3D,MAAAA,GAAG,CAAClB,KAAJ,CAAU,iBAAV,EAA6B,IAA7B,EAZqB;;EAerBkB,MAAAA,GAAG,CAAC1B,SAAJ,CAAc,QAAd,EAAwBsF,IAAxB,CAA6B,UAASC,CAAT,EAAYC,CAAZ,EAAe;EAAE,eAAOD,CAAC,CAACc,KAAF,GAAUb,CAAC,CAACa,KAAnB;EAA0B,OAAxE,EAfqB;;EAkBrBqE,MAAAA,EAAE,CAAC1K,SAAH,CAAa,MAAb,EAAqBQ,KAArB,CAA2B,cAA3B,EAA2C,CAA3C,EAlBqB;;EAqBrBmK,MAAAA,EAAE,CAAC3K,SAAH,CAAa,MAAb,EAAqBkC,IAArB,CAA0BhC,IAA1B,EAAgCM,KAAhC,CAAsC,cAAtC,EAAsD,CAAtD;EACAoK,MAAAA,EAAE,CAAC5K,SAAH,CAAa,MAAb,EAAqBkC,IAArB,CAA0BhC,IAA1B,EAAgCM,KAAhC,CAAsC,cAAtC,EAAsD,CAAtD;EACAmK,MAAAA,EAAE,CAAC3K,SAAH,CAAa,MAAb,EAAqBkC,IAArB,CAA0BuI,IAA1B;EACAG,MAAAA,EAAE,CAAC5K,SAAH,CAAa,MAAb,EAAqBkC,IAArB,CAA0BuI,IAA1B,EAxBqB;;EA2BrBE,MAAAA,EAAE,CAACE,MAAH,GAAYjD,IAAZ,CAAiB,KAAjB,EAAwB,YAAW;EACjClG,QAAAA,GAAG,CAAClB,KAAJ,CAAU,iBAAV,EAA6B,YAA7B;EACAuJ,QAAAA,aAAa,GAAG,KAAhB;EACD,OAHD;EAID;;EACD,WAAO3G,CAAP;EACD;;EAED,WAASlD,IAAT,CAAcA,IAAd,EAAoB;EAClBA,IAAAA,IAAI,CAACL,IAAL,CAAU,GAAV,EAAe,UAAST,CAAT,EAAY;EAAE,aAAOyF,CAAC,CAACzF,CAAC,CAACyF,CAAH,CAAD,GAAS,CAAhB;EAAmB,KAAhD,EACKhF,IADL,CACU,GADV,EACe,UAAST,CAAT,EAAY;EAAE,aAAO0F,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAD,GAAS,CAAhB;EAAmB,KADhD;EAED;;EAED,WAAS2F,IAAT,CAAcA,IAAd,EAAoB;EAClBA,IAAAA,IAAI,CAAC5K,IAAL,CAAU,GAAV,EAAe,UAAST,CAAT,EAAY;EAAE,aAAOyF,CAAC,CAACzF,CAAC,CAACyF,CAAH,CAAR;EAAe,KAA5C,EACKhF,IADL,CACU,GADV,EACe,UAAST,CAAT,EAAY;EAAE,aAAO0F,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAR;EAAe,KAD5C,EAEKjF,IAFL,CAEU,OAFV,EAEmB,UAAST,CAAT,EAAY;EAAE,aAAOyF,CAAC,CAACzF,CAAC,CAACyF,CAAF,GAAMzF,CAAC,CAAC0G,EAAT,CAAD,GAAgBjB,CAAC,CAACzF,CAAC,CAACyF,CAAH,CAAxB;EAA+B,KAFhE,EAGKhF,IAHL,CAGU,QAHV,EAGoB,UAAST,CAAT,EAAY;EAAE,aAAO0F,CAAC,CAAC1F,CAAC,CAAC0F,CAAF,GAAM1F,CAAC,CAACiG,EAAT,CAAD,GAAgBP,CAAC,CAAC1F,CAAC,CAAC0F,CAAH,CAAxB;EAA+B,KAHjE,EAIKjF,IAJL,CAIU,MAJV,EAIkB,UAAST,CAAT,EAAY;EAAE,aAAOyD,KAAK,CAACzD,CAAC,CAACwH,IAAH,CAAZ;EAAsB,KAJtD;EAKA6D,IAAAA,IAAI,CAAC5K,IAAL,CAAU;EACR,gBAAU,SADF;EAER,sBAAgB,KAFR;EAGR,iBAAW;EAHH,KAAV;EAKD;;EAED,WAAS+G,IAAT,CAAcxH,CAAd,EAAiB;EACf,WAAOA,CAAC,CAACR,MAAF,GACDgI,IAAI,CAACxH,CAAC,CAACR,MAAH,CAAJ,GAAiB,KAAjB,GAAyBQ,CAAC,CAACwH,IAD1B,GAEDxH,CAAC,CAACwH,IAFR;EAGD;EACF,CAtLD;EAwLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BAjL,QAAQ,CAACmP,QAAT,GAAoB,UAASvO,IAAT,EAAcS,MAAd,EAAsB;EACxCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,eAAaN,MAAM,CAAC+N,OAAP,IAAmB9N,IAAI,CAAC,CAAD,CAAvB,IAA8B,KADlC;EAET,eAAaD,MAAM,CAACgO,OAAP,IAAmB/N,IAAI,CAAC,CAAD,CAAvB,IAA8B,KAFlC;EAGT,aAAaD,MAAM,CAAC+D,KAAP,IAAmB,GAHvB;EAIT,cAAa/D,MAAM,CAACgE,MAAP,IAAmB,GAJvB;EAKT,cAAahE,MAAM,CAACyF,MAAP,IAAmB,CALvB;EAMT,aAAazF,MAAM,CAAC6F,KAAP,IAAmB,SANvB;EAOT,gBAAa7F,MAAM,CAACiO,QAAP,IAAmB,gBAPvB;EAQT,gBAAajO,MAAM,CAACyC,QAAP,IAAmB;EARvB,GAAX;EAWA,MAAIiH,UAAU,GAAGtK,EAAE,CAAC8O,GAAH,CAAOC,eAAP,GACdhK,KADc,CACR,GADQ,EAEdiK,SAFc,CAEJ,CAAC9N,IAAI,CAACyD,KAAL,GAAa,CAAd,EAAiBzD,IAAI,CAAC0D,MAAL,GAAc,CAA/B,CAFI,EAGdqK,SAHc,CAGJ,EAHI,CAAjB;EAIA,MAAIjG,IAAI,GAAGhJ,EAAE,CAAC8O,GAAH,CAAO9F,IAAP,GACRsB,UADQ,CACGA,UADH,CAAX;EAEA,MAAI4E,SAAS,GAAGlP,EAAE,CAAC8O,GAAH,CAAOI,SAAP,EAAhB;EACA,MAAI5J,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,UAA/B,EAA2CG,MAA3C,CAAkD,KAAlD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,CAAV;EAIAU,EAAAA,GAAG,CAAC9B,MAAJ,CAAW,MAAX,EACG+J,KADH,CACS2B,SAAS,CAACC,OADnB,EAEG1L,IAFH,CAEQ,MAFR,EAEe,SAFf,EAGGA,IAHH,CAGQ,GAHR,EAGYuF,IAHZ;EAKA1D,EAAAA,GAAG,CAAC9B,MAAJ,CAAW,MAAX,EACG+J,KADH,CACS2B,SADT,EAEGzL,IAFH,CAEQ,MAFR,EAEe,MAFf,EAGGA,IAHH,CAGQ,QAHR,EAGiB,SAHjB,EAIGA,IAJH,CAIQ,cAJR,EAIuB,MAJvB,EAKGA,IALH,CAKQ,gBALR,EAKyB,IALzB,EAMGA,IANH,CAMQ,GANR,EAMauF,IANb;EAQAhJ,EAAAA,EAAE,CAACG,IAAH,CAAQe,IAAI,CAAC2N,QAAb,EAAuB,UAASO,KAAT,EAAgBC,KAAhB,EAAuB;EAC5C/J,IAAAA,GAAG,CAAC6I,MAAJ,CAAW,MAAX,EAAmB,YAAnB,EACGZ,KADH,CACSsB,QAAQ,CAACS,OAAT,CAAiBD,KAAjB,EAAwBA,KAAK,CAACE,OAAN,CAAcC,IAAtC,CADT,EAEG/L,IAFH,CAEQ,MAFR,EAEgB,SAFhB,EAGGA,IAHH,CAGQ,QAHR,EAGkB,SAHlB,EAIGA,IAJH,CAIQ,GAJR,EAIauF,IAJb;EAMA1D,IAAAA,GAAG,CAAC6I,MAAJ,CAAW,MAAX,EAAmB,YAAnB,EACGZ,KADH,CACSsB,QAAQ,CAACY,IAAT,CAAcJ,KAAd,EAAqBA,KAAK,CAACE,OAAN,CAAcG,SAAnC,EAA8C,UAASvG,CAAT,EAAYC,CAAZ,EAAe;EAAE,aAAOD,CAAC,KAAKC,CAAb;EAAgB,KAA/E,CADT,EAEG3F,IAFH,CAEQ,OAFR,EAEiB,UAFjB,EAGGA,IAHH,CAGQ,MAHR,EAGgB,MAHhB,EAIGA,IAJH,CAIQ,QAJR,EAIkB,SAJlB,EAKGA,IALH,CAKQ,cALR,EAKwB,MALxB,EAMGA,IANH,CAMQ,GANR,EAMauF,IANb;EAQA1D,IAAAA,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EACG7C,IADH,CACQA,IADR,EAEG8C,KAFH,GAEWL,MAFX,CAEkB,QAFlB,EAE4B,MAF5B,EAGGC,IAHH,CAGQ,MAHR,EAGevC,IAAI,CAACuF,KAHpB,EAIGhD,IAJH,CAIQ,GAJR,EAIavC,IAAI,CAACmF,MAJlB,EAKG5C,IALH,CAKQ,QALR,EAKiB,SALjB,EAMGA,IANH,CAMQ,WANR,EAMqB,UAAST,CAAT,EAAY;EAC7B,aAAO,eAAesH,UAAU,CAAC,CAC/BtH,CAAC,CAAC9B,IAAI,CAAC0N,OAAN,CAAD,CAAgB9M,KADe,EAE/BkB,CAAC,CAAC9B,IAAI,CAACyN,OAAN,CAAD,CAAgB7M,KAFe,CAAD,CAAzB,GAGF,GAHL;EAID,KAXH;EAYD,GA3BD;EA4BD,CArED;EAuEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmCAvC,QAAQ,CAACoQ,QAAT,GAAoB,UAASxP,IAAT,EAAeS,MAAf,EAAuB;EACzCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;EAEA,MAAIC,IAAI,GAAGV,IAAI,CAACU,IAAL,CAAUC,IAArB;EACA,MAAIC,IAAI,GAAGZ,IAAI,CAACa,OAAL,CAAaC,QAAxB;EAEA,MAAIC,IAAI,GAAG;EACT,aAAgBN,MAAM,CAACuF,KAAP,IAAsBtF,IAAI,CAAC,CAAD,CAA1B,IAAiC,OADxC;EAET,aAAgBD,MAAM,CAACkB,KAAP,IAAsBjB,IAAI,CAAC,CAAD,CAA1B,IAAiC,OAFxC;EAGT,aAAgBD,MAAM,CAAC+D,KAAP,IAAsB,IAH7B;EAIT,cAAgB/D,MAAM,CAACgE,MAAP,IAAsB,IAJ7B;EAKT,iBAAgBhE,MAAM,CAACgP,SAAP,IAAsB,KAL7B;EAMT,iBAAgBhP,MAAM,CAACiP,SAAP,IAAsB,OAN7B;EAOT,mBAAgBjP,MAAM,CAACkP,WAAP,IAAsB,KAP7B;EAQT,gBAAgBlP,MAAM,CAACiO,QAAP,IAAsB,gBAR7B;EAST,eAAgBjO,MAAM,CAACmP,OAAP,IAAsB,OAT7B;EAUT,eAAgBnP,MAAM,CAACoP,OAAP,IAAsB,YAV7B;EAWT,kBAAgBpP,MAAM,CAACqP,UAAP,IAAsB,EAX7B;EAYT,kBAAgBrP,MAAM,CAACsP,UAAP,IAAsB,GAZ7B;EAaT,aAAgBtP,MAAM,CAACmE,KAAP,IAAsB,KAb7B;EAcT,gBAAgBnE,MAAM,CAACyC,QAAP,IAAsB;EAd7B,GAAX;EAiBA,MAAIV,IAAI,GAAG3C,EAAE,CAACmQ,IAAH,GACJC,GADI,CACA,UAASpN,CAAT,EAAY;EAAE,WAAOA,CAAC,CAAC9B,IAAI,CAACiF,KAAN,CAAD,CAAcrE,KAArB;EAA4B,GAD1C,EAEJuO,MAFI,CAEG,UAASrN,CAAT,EAAY;EAClB,WAAOhD,EAAE,CAACkD,GAAH,CAAOF,CAAP,EAAU,UAASA,CAAT,EAAY;EAC3B,aAAO4C,QAAQ,CAAC5C,CAAC,CAAC9B,IAAI,CAACY,KAAN,CAAD,CAAcA,KAAf,CAAf;EACD,KAFM,CAAP;EAGD,GANI,EAMFJ,GANE,CAMEX,IANF,EAMQf,EAAE,CAAC0B,GANX,CAAX;EAOA,MAAIiE,MAAM,GAAG3F,EAAE,CAAC2F,MAAH,CAAW3F,EAAE,CAAC0B,GAAH,CAAOiB,IAAP,EAAa2N,MAAb,EAAX,CAAb;;EAEA,MAAI/Q,QAAQ,CAACE,KAAb,EAAoB;EAAEI,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACgC,SAAL,CAAeM,IAAf,CAAZ;EAAmC;;EAEzD,MAAI2C,GAAG,GAAG/F,QAAQ,CAACgE,MAAT,CAAgBrC,IAAI,CAACmC,QAArB,EAA+B,UAA/B,EAA2CG,MAA3C,CAAkD,KAAlD,EACPC,IADO,CACF,OADE,EACOvC,IAAI,CAACyD,KADZ,EAEPlB,IAFO,CAEF,QAFE,EAEQvC,IAAI,CAAC0D,MAFb,CAAV;EAIA5E,EAAAA,EAAE,CAACG,IAAH,CAAQe,IAAI,CAAC2N,QAAb,EAAuB,UAAS0B,YAAT,EAAuB;EAC5C,QAAIzB,GAAG,GAAGD,QAAQ,CAAC2B,MAAT,CAAgBD,YAAhB,EAA8BA,YAAY,CAAChB,OAAb,CAAqBrO,IAAI,CAAC6O,OAA1B,CAA9B,EAAkEU,UAA5E;EACA,QAAInG,UAAU,GAAGtK,EAAE,CAAC8O,GAAH,CAAO4B,QAAP,GACdC,MADc,CACP,CAACzP,IAAI,CAACgP,UAAN,EAAkBhP,IAAI,CAAC+O,UAAvB,CADO,EAEdjB,SAFc,CAEJ,CAAC9N,IAAI,CAACyD,KAAL,GAAW,CAAZ,EAAezD,IAAI,CAAC0D,MAAL,GAAY,CAA3B,CAFI,EAGdG,KAHc,CAGR7D,IAAI,CAAC6D,KAHG,CAAjB;EAIA,QAAIiE,IAAI,GAAGhJ,EAAE,CAAC8O,GAAH,CAAO9F,IAAP,GAAcsB,UAAd,CAAyBA,UAAzB,CAAX;EACA,QAAIvF,KAAJ;;EACA,YAAQ7D,IAAI,CAAC4O,WAAb;EACE,WAAK,KAAL;EACE/K,QAAAA,KAAK,GAAG/E,EAAE,CAAC+E,KAAH,CAASjF,GAAT,EAAR;EACA;;EACF;EACEiF,QAAAA,KAAK,GAAG/E,EAAE,CAAC+E,KAAH,CAASI,MAAT,EAAR;EACA;EANJ;;EAQA,QAAIsB,KAAK,GAAG1B,KAAK,CAACW,MAAN,CAAaC,MAAb,EAAqBP,KAArB,CAA2B,CAAClE,IAAI,CAAC2O,SAAN,EAAiB3O,IAAI,CAAC0O,SAAtB,CAA3B,CAAZ;EAEAtK,IAAAA,GAAG,CAAC1B,SAAJ,CAAc,MAAd,EACG7C,IADH,CACQ+N,GADR,EAEGjL,KAFH,GAGGL,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,GAJR,EAIauF,IAJb,EAKGvF,IALH,CAKQ,QALR,EAKkB,OALlB,EAMGA,IANH,CAMQ,cANR,EAMwB,GANxB,EAOGW,KAPH,CAOS,MAPT,EAOiB,UAASpB,CAAT,EAAYpB,CAAZ,EAAe;EAC5B;EACA,aAAO6E,KAAK,CAAC9D,IAAI,CAACK,CAAC,CAAC4N,UAAF,CAAa1P,IAAI,CAAC8O,OAAlB,CAAD,CAAL,CAAZ;EACD,KAVH;EAYA1K,IAAAA,GAAG,CAAC1B,SAAJ,CAAc,cAAd,EACG7C,IADH,CACQ+N,GADR,EAEGjL,KAFH,GAGGL,MAHH,CAGU,MAHV,EAIGC,IAJH,CAIQ,WAJR,EAIqB,KAJrB,EAKGA,IALH,CAKQ,OALR,EAKiB,aALjB,EAMGA,IANH,CAMQ,WANR,EAMqB,UAAST,CAAT,EAAY;EAC7B,UAAI6N,GAAG,GAAG7N,CAAC,CAAC4N,UAAF,CAAaE,QAAvB;EACA,UAAIC,GAAG,GAAG/N,CAAC,CAAC4N,UAAF,CAAaI,SAAvB;EACA,aAAO,eAAe1G,UAAU,CAAC,CAACyG,GAAD,EAAMF,GAAN,CAAD,CAAzB,GAAwC,GAA/C;EACD,KAVH,EAWGpN,IAXH,CAWQ,IAXR,EAWc,QAXd,EAYGK,IAZH,CAYQ,UAASd,CAAT,EAAY;EAAE,aAAOA,CAAC,CAAC4N,UAAF,CAAa1P,IAAI,CAAC8O,OAAlB,CAAP;EAAmC,KAZzD;EAaD,GA3CD;EA4CD,CAlFD;;EAoFAzQ,QAAQ,CAACgE,MAAT,GAAkB,UAASF,QAAT,EAAmB4N,IAAnB,EAAyB;EACzC,MAAI5N,QAAJ,EAAc;EACZ,WAAOrD,EAAE,CAACuD,MAAH,CAAUF,QAAV,EAAoB6N,IAApB,CAAyB,EAAzB,EAA6B1N,MAA7B,CAAoC,KAApC,EAA2CC,IAA3C,CAAgD,OAAhD,EAAyD,cAAcwN,IAAvE,CAAP;EACD,GAFD,MAEO;EACL,WAAOjR,EAAE,CAACuD,MAAH,CAAU,MAAV,EAAkBC,MAAlB,CAAyB,KAAzB,EAAgCC,IAAhC,CAAqC,OAArC,EAA8C,cAAcwN,IAA5D,CAAP;EACD;EACF,CAND;EAQA;;;EACA1R,QAAQ,CAAC4R,MAAT,GAAkB,YAAW;EAC3B,MAAIC,MAAM,GAAGpR,EAAE,CAACuD,MAAH,CAAU,SAAV,CAAb;EACA,MAAI8N,IAAI,GAAGrR,EAAE,CAACuD,MAAH,CAAU,SAAV,CAAX;;EACA,MAAI8N,IAAI,CAACjN,KAAL,CAAW,SAAX,MAA0B,MAA9B,EAAsC;EACpCiN,IAAAA,IAAI,CAACjN,KAAL,CAAW,SAAX,EAAsB,QAAtB;EACAgN,IAAAA,MAAM,CAAC3N,IAAP,CAAY,OAAZ,EAAqB,iBAArB;EACD,GAHD,MAGO;EACL4N,IAAAA,IAAI,CAACjN,KAAL,CAAW,SAAX,EAAsB,MAAtB;EACAgN,IAAAA,MAAM,CAAC3N,IAAP,CAAY,OAAZ,EAAqB,mBAArB;EACD;EACF,CAVD;EAYA;;;EACAlE,QAAQ,CAAC+R,WAAT,GAAuB,UAAS1M,MAAT,EAAiB;EACtC5E,EAAAA,EAAE,CAACuD,MAAH,CAAUgO,IAAI,CAACC,YAAf,EAA6BpN,KAA7B,CAAmC,QAAnC,EAA6CQ,MAAM,GAAG,IAAtD;EACD,CAFD;;;;;;;;"}