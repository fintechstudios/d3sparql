{"version":3,"file":"d3sparql.umd.js","sources":["../d3sparql.js"],"sourcesContent":["//\n// d3sparql.js - utilities for visualizing SPARQL results with the D3 library\n//\n//   Web site: http://github.com/ktym/d3sparql/\n//   Copyright: 2013-2015 (C) Toshiaki Katayama (ktym@dbcls.jp)\n//   License: BSD license (same as D3.js)\n//   Initial version: 2013-01-28\n//\n\nimport d3 from 'd3';\nimport * as topojson from 'topojson-client';\n\nconst d3sparql = {\n  version: 'd3sparql.js version 2020-04-25',\n  debug: false  // set to true for showing debug information\n};\n\nexport default d3sparql;\n\n/**\n * @param {...*} messages\n */\nfunction debug(...messages) {\n  if (d3sparql.debug) {\n    const args = [];\n    for (const message of messages) {\n      switch (typeof message) {\n        case 'object':\n          args.push(JSON.stringify(message));\n          break;\n        default:\n          args.push(message);\n      }\n    }\n    console.debug(...args);\n  }\n}\n\n/**\n * Execute a SPARQL query\n * @param {string} url\n * @param {RequestInit} [init]\n */\nd3sparql.fetch = async (url, init = {}) => {\n  debug(url);\n  const res = await fetch(url, {\n    ...init,\n    headers: {\n      ...init.headers,\n      Accept: 'application/sparql-results+json',\n    }\n  });\n\n  if (!res.ok) {\n    throw new Error(await res.text());\n  }\n  return res.json();\n};\n\n/**\n * @param {string} endpoint\n * @param {string} sparql\n * @param {('GET'|'POST')} [type]\n * @returns {Promise<object>}\n */\nd3sparql.query = function (endpoint, sparql, type = 'GET') {\n  const url = new URL(endpoint);\n  if (type === 'GET') {\n    url.search = `query=${encodeURIComponent(sparql)}`;\n    return d3sparql.fetch(url.href);\n  } else if (type === 'POST') {\n    // encode query as Form data\n    const formData = new FormData();\n    formData.append('query', sparql);\n    // encode Form data to x-www-form-urlencoded\n    const body = new URLSearchParams([...formData.entries()]);\n    return d3sparql.fetch(url.href, {\n      body,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      }\n    });\n  }\n\n  throw new TypeError(`unsupported query type: ${type}`);\n\n};\n\n\n/*\n  Convert sparql-results+json object into a JSON graph in the {\"nodes\": [], \"links\": []} form.\n  Suitable for d3.layout.force(), d3.layout.sankey() etc.\n\n  Options:\n    config = {\n      \"key1\":   \"node1\",       // SPARQL letiable name for node1 (optional; default is the 1st letiable)\n      \"key2\":   \"node2\",       // SPARQL letiable name for node2 (optional; default is the 2nd letibale)\n      \"label1\": \"node1label\",  // SPARQL letiable name for the label of node1 (optional; default is the 3rd letiable)\n      \"label2\": \"node2label\",  // SPARQL letiable name for the label of node2 (optional; default is the 4th letiable)\n      \"value1\": \"node1value\",  // SPARQL letiable name for the value of node1 (optional; default is the 5th letiable)\n      \"value2\": \"node2value\"   // SPARQL letiable name for the value of node2 (optional; default is the 6th letiable)\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.forcegraph(json, config)\n      d3sparql.sankey(json, config)\n    }\n\n  TODO:\n    Should follow the convention in the miserables.json https://gist.github.com/mbostock/4062045 to contain group for nodes and value for edges.\n*/\nd3sparql.graph = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let key1 = config.key1 || head[0] || 'key1';\n  let key2 = config.key2 || head[1] || 'key2';\n  let label1 = config.label1 || head[2] || false;\n  let label2 = config.label2 || head[3] || false;\n  let value1 = config.value1 || head[4] || false;\n  let value2 = config.value2 || head[5] || false;\n\n  let graph = {\n    'nodes': [],\n    'links': []\n  };\n  let valueToIndexMap = new Map();\n  let index = 0;\n  for (let i = 0; i < data.length; i++) {\n    let datum = data[i];\n    let key1Val = datum[key1].value;\n    let key2Val = datum[key2].value;\n    let label1Val = label1 ? datum[label1].value : key1Val;\n    let label2Val = label2 ? datum[label2].value : key2Val;\n    let value1Val = value1 ? datum[value1].value : false;\n    let value2Val = value2 ? datum[value2].value : false;\n    if (!valueToIndexMap.has(key1Val)) {\n      graph.nodes.push({ 'key': key1Val, 'label': label1Val, 'value': value1Val });\n      valueToIndexMap.set(key1Val, index);\n      index++;\n    }\n    if (!valueToIndexMap.has(key2Val)) {\n      graph.nodes.push({ 'key': key2Val, 'label': label2Val, 'value': value2Val });\n      valueToIndexMap.set(key2Val, index);\n      index++;\n    }\n    graph.links.push({ 'source': valueToIndexMap.get(key1Val), 'target': valueToIndexMap.get(key2Val) });\n  }\n  debug(graph);\n  return graph;\n};\n\n/*\n  Convert sparql-results+json object into a JSON tree of {\"name\": name, \"value\": size, \"children\": []} format like in the flare.json file.\n\n  Suitable for d3.layout.hierarchy() family\n    * cluster:    d3sparql.dendrogram()\n    * pack:       d3sparql.circlepack()\n    * partition:  d3sparql.sunburst()\n    * tree:       d3sparql.roundtree()\n    * treemap:    d3sparql.treemap(), d3sparql.treemapzoom()\n\n  Options:\n    config = {\n      \"root\":   \"root_name\",    // SPARQL letiable name for root node (optional; default is the 1st letiable)\n      \"parent\": \"parent_name\",  // SPARQL letiable name for parent node (optional; default is the 2nd letiable)\n      \"child\":  \"child_name\",   // SPARQL letiable name for child node (ptional; default is the 3rd letiable)\n      \"value\":  \"value_name\"    // SPARQL letiable name for numerical value of the child node (optional; default is the 4th letiable or \"value\")\n    }\n\n  Synopsis:\n    d3sparql.sparql(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.roundtree(json, config)\n      d3sparql.dendrogram(json, config)\n      d3sparql.sunburst(json, config)\n      d3sparql.treemap(json, config)\n      d3sparql.treemapzoom(json, config)\n    }\n*/\nd3sparql.tree = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let rootKey = config.root || head[0];\n  let parentKey = config.parent || head[1];\n  let childKey = config.child || head[2];\n  let valueKey = config.value || head[3] || 'value';\n\n  let pair = new Map();\n  let size = new Map();\n  let root = data[0][rootKey].value;\n  let parent = true;\n  let child = parent;\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    parent = datum[parentKey].value;\n    child = datum[childKey].value;\n    if (parent !== child) {\n      /** @type {Array} */\n      let children;\n      if (pair.has(parent)) {\n        children = pair.get(parent);\n        children.push(child);\n      } else {\n        children = [child];\n      }\n      pair.set(parent, children);\n      if (datum[valueKey]) {\n        size.set(child, datum[valueKey].value);\n      }\n    }\n  }\n\n  function traverse(node) {\n    let list = pair.get(node);\n    if (list) {\n      let children = list.map((d) => traverse(d));\n      // sum of values of children\n      let subtotal = d3.sum(children, (d) => d.value);\n      // add a value of parent if exists\n      let total = d3.sum([subtotal, size.get(node)]);\n      return { 'name': node, 'children': children, 'value': total };\n    } else {\n      return { 'name': node, 'value': size.get(node) || 1 };\n    }\n  }\n\n  let tree = traverse(root);\n\n  debug(tree);\n  return tree;\n};\n\n/*\n  Rendering sparql-results+json object containing multiple rows into a HTML table\n\n  Options:\n    config = {\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.htmltable(json, config)\n    }\n\n  CSS:\n    <style>\n    table {\n      margin: 10px;\n    }\n    th {\n      background: #eeeeee;\n    }\n    th:first-letter {\n       text-transform: capitalize;\n    }\n    </style>\n*/\nd3sparql.htmltable = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let columns = config.columns || head;\n  let headers = config.headers || columns;\n  let selector = config.selector || null;\n  let limit = config.limit !== undefined ? config.limit : data.length;\n  let offset = config.offset !== undefined ? config.offset : 0;\n\n  data = data.slice(offset, offset + limit);\n\n  let table = d3sparql\n    .select(selector, 'htmltable')\n    .append('table')\n    .attr('class', 'table table-bordered');\n\n  debug('Table');\n  debug(table);\n  let thead = table.append('thead');\n  let tbody = table.append('tbody');\n  thead.append('tr')\n    .selectAll('th')\n    .data(headers)\n    .enter()\n    .append('th')\n    .text((col) => col);\n  let rows = tbody.selectAll('tr')\n    .data(data)\n    .enter()\n    .append('tr');\n  let cells = rows.selectAll('td')\n    .data((row) => columns.map((col) => row[col] ? row[col].value : ''))\n    .enter()\n    .append('td')\n    .text((val) => val);\n\n  debug('Table cells');\n  debug(cells);\n\n  // default CSS\n  table.style({\n    'margin': '10px'\n  });\n  table.selectAll('th').style({\n    'background': '#eeeeee',\n    'text-transform': 'capitalize',\n  });\n};\n\n/*\n  Rendering sparql-results+json object containing one row into a HTML table\n\n  Options:\n    config = {\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.htmlhash(json, config)\n    }\n\n  CSS:\n    <style>\n    table {\n      margin: 10px;\n    }\n    th {\n      background: #eeeeee;\n    }\n    th:first-letter {\n       text-transform: capitalize;\n    }\n    </style>\n*/\nd3sparql.htmlhash = function (json, config) {\n  config = config || {};\n\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings[0];\n\n  let selector = config.selector || null;\n\n  let table = d3sparql\n    .select(selector, 'htmlhash')\n    .append('table')\n    .attr('class', 'table table-bordered');\n\n  let tbody = table.append('tbody');\n  let row = tbody.selectAll('tr')\n    .data(() => head.map((col) => ({ head: col, data: data[col] ? data[col].value : '' })))\n    .enter()\n    .append('tr');\n  row.append('th')\n    .text((d) => d.head);\n  row.append('td')\n    .text((d) => d.data);\n\n  // default CSS\n  table.style({\n    'margin': '10px'\n  });\n  table.selectAll('th').style({\n    'background': '#eeeeee',\n    'text-transform': 'capitalize',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a bar chart\n\n  References:\n    http://bl.ocks.org/mbostock/3885304\n    http://bl.ocks.org/mbostock/4403522\n\n  Options:\n    config = {\n      \"label_x\":  \"Prefecture\",  // label for x-axis (optional; default is same as let_x)\n      \"label_y\":  \"Area\",        // label for y-axis (optional; default is same as let_y)\n      \"let_x\":    \"pref\",        // SPARQL letiable name for x-axis (optional; default is the 1st letiable)\n      \"let_y\":    \"area\",        // SPARQL letiable name for y-axis (optional; default is the 2nd letiable)\n      \"width\":    850,           // canvas width (optional)\n      \"height\":   300,           // canvas height (optional)\n      \"margin\":   40,            // canvas margin (optional)\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.barchart(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .bar {\n      fill: steelblue;\n    }\n    .bar:hover {\n      fill: brown;\n    }\n    .axis {\n      font: 10px sans-serif;\n    }\n    .axis path,\n    .axis line {\n      fill: none;\n      stroke: #000000;\n      shape-rendering: crispEdges;\n    }\n    .x.axis path {\n      display: none;\n    }\n    </style>\n*/\nd3sparql.barchart = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let opts = {\n    'label_x': config.label_x || head[0],\n    'label_y': config.label_y || head[1],\n    'let_x': config.let_x || head[0],\n    'let_y': config.let_y || head[1],\n    'width': config.width || 750,\n    'height': config.height || 300,\n    'margin': config.margin || 80,  // TODO: to make use of {top: 10, right: 10, bottom: 80, left: 80}\n    'selector': config.selector || null\n  };\n\n  let scale_x = d3.scale.ordinal().rangeRoundBands([0, opts.width - opts.margin], 0.1);\n  let scale_y = d3.scale.linear().range([opts.height - opts.margin, 0]);\n  let axis_x = d3.svg.axis().scale(scale_x).orient('bottom');\n  let axis_y = d3.svg.axis().scale(scale_y).orient('left');  // .ticks(10, \"%\")\n  scale_x.domain(data.map(function (d) {\n    return d[opts.let_x].value;\n  }));\n  scale_y.domain(d3.extent(data, function (d) {\n    return parseInt(d[opts.let_y].value);\n  }));\n\n  let svg = d3sparql.select(opts.selector, 'barchart').append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height);\n//    .append(\"g\")\n//    .attr(\"transform\", \"translate(\" + opts.margin + \",\" + 0 + \")\")\n\n  let ax = svg.append('g')\n    .attr('class', 'axis x')\n    .attr('transform', 'translate(' + opts.margin + ',' + (opts.height - opts.margin) + ')')\n    .call(axis_x);\n  let ay = svg.append('g')\n    .attr('class', 'axis y')\n    .attr('transform', 'translate(' + opts.margin + ',0)')\n    .call(axis_y);\n  let bar = svg.selectAll('.bar')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr('transform', 'translate(' + opts.margin + ',' + 0 + ')')\n    .attr('class', 'bar')\n    .attr('x', function (d) {\n      return scale_x(d[opts.let_x].value);\n    })\n    .attr('width', scale_x.rangeBand())\n    .attr('y', function (d) {\n      return scale_y(d[opts.let_y].value);\n    })\n    .attr('height', function (d) {\n      return opts.height - scale_y(parseInt(d[opts.let_y].value)) - opts.margin;\n    });\n  /*\n      .call(function(e) {\n        e.each(function(d) {\n          console.log(parseInt(d[opts.let_y].value))\n        })\n      })\n  */\n  ax.selectAll('text')\n    .attr('dy', '.35em')\n    .attr('x', 10)\n    .attr('y', 0)\n    .attr('transform', 'rotate(90)')\n    .style('text-anchor', 'start');\n  ax.append('text')\n    .attr('class', 'label')\n    .text(opts.label_x)\n    .style('text-anchor', 'middle')\n    .attr('transform', 'translate(' + ((opts.width - opts.margin) / 2) + ',' + (opts.margin - 5) + ')');\n  ay.append('text')\n    .attr('class', 'label')\n    .text(opts.label_y)\n    .style('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', 0 - (opts.height / 2))\n    .attr('y', 0 - (opts.margin - 20));\n\n  // default CSS/SVG\n  bar.attr({\n    'fill': 'steelblue',\n  });\n  svg.selectAll('.axis').attr({\n    'stroke': 'black',\n    'fill': 'none',\n    'shape-rendering': 'crispEdges',\n  });\n  svg.selectAll('text').attr({\n    'stroke': 'none',\n    'fill': 'black',\n    'font-size': '8pt',\n    'font-family': 'sans-serif',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a pie chart\n\n  References:\n    http://bl.ocks.org/mbostock/3887235 Pie chart\n    http://bl.ocks.org/mbostock/3887193 Donut chart\n\n  Options:\n    config = {\n      \"label\":    \"pref\",    // SPARQL letiable name for slice label (optional; default is the 1st letiable)\n      \"size\":     \"area\",    // SPARQL letiable name for slice value (optional; default is the 2nd letiable)\n      \"width\":    700,       // canvas width (optional)\n      \"height\":   600,       // canvas height (optional)\n      \"margin\":   10,        // canvas margin (optional)\n      \"hole\":     50,        // radius size of a center hole (optional; 0 for pie, r > 0 for doughnut)\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.piechart(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .label {\n      font: 10px sans-serif;\n    }\n    .arc path {\n      stroke: #ffffff;\n    }\n    </style>\n*/\nd3sparql.piechart = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let opts = {\n    'label': config.label || head[0],\n    'size': config.size || head[1],\n    'width': config.width || 700,\n    'height': config.height || 700,\n    'margin': config.margin || 10,\n    'hole': config.hole || 100,\n    'selector': config.selector || null\n  };\n\n  let radius = Math.min(opts.width, opts.height) / 2 - opts.margin;\n  let hole = Math.max(Math.min(radius - 50, opts.hole), 0);\n  let color = d3.scale.category20();\n\n  let arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(hole);\n\n  let pie = d3.layout.pie()\n    //.sort(null)\n    .value(function (d) {\n      return d[opts.size].value;\n    });\n\n  let svg = d3sparql\n    .select(opts.selector, 'piechart')\n    .append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height)\n    .append('g')\n    .attr('transform', 'translate(' + opts.width / 2 + ',' + opts.height / 2 + ')');\n\n  let g = svg.selectAll('.arc')\n    .data(pie(data))\n    .enter()\n    .append('g')\n    .attr('class', 'arc');\n  let slice = g.append('path')\n    .attr('d', arc)\n    .attr('fill', function (d, i) {\n      return color(i);\n    });\n  let text = g.append('text')\n    .attr('class', 'label')\n    .attr('transform', function (d) {\n      return 'translate(' + arc.centroid(d) + ')';\n    })\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'middle')\n    .text(function (d) {\n      return d.data[opts.label].value;\n    });\n\n  // default CSS/SVG\n  slice.attr({\n    'stroke': '#ffffff',\n  });\n  // TODO: not working?\n  svg.selectAll('text').attr({\n    'stroke': 'none',\n    'fill': 'black',\n    'font-size': '20px',\n    'font-family': 'sans-serif',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a scatter plot\n\n  References:\n    http://bl.ocks.org/mbostock/3244058\n\n  Options:\n    config = {\n      \"label_x\":  \"Size\",    // label for x-axis (optional; default is same as let_x)\n      \"label_y\":  \"Count\",   // label for y-axis (optional; default is same as let_y)\n      \"let_x\":    \"size\",    // SPARQL letiable name for x-axis values (optional; default is the 1st letiable)\n      \"let_y\":    \"count\",   // SPARQL letiable name for y-axis values (optional; default is the 2nd letiable)\n      \"let_r\":    \"volume\",  // SPARQL letiable name for radius (optional; default is the 3rd letiable)\n      \"min_r\":    1,         // minimum radius size (optional; default is 1)\n      \"max_r\":    20,        // maximum radius size (optional; default is 20)\n      \"width\":    850,       // canvas width (optional)\n      \"height\":   300,       // canvas height (optional)\n      \"margin_x\": 80,        // canvas margin x (optional)\n      \"margin_y\": 40,        // canvas margin y (optional)\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.scatterplot(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .label {\n      font-size: 10pt;\n    }\n    .node circle {\n      stroke: black;\n      stroke-width: 1px;\n      fill: pink;\n      opacity: 0.5;\n    }\n    </style>\n*/\nd3sparql.scatterplot = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let opts = {\n    'label_x': config.label_x || head[0] || 'x',\n    'label_y': config.label_y || head[1] || 'y',\n    'label_r': config.label_r || head[2] || 'r',\n    'let_x': config.let_x || head[0],\n    'let_y': config.let_y || head[1],\n    'let_r': config.let_r || head[2] || 5,\n    'min_r': config.min_r || 1,\n    'max_r': config.max_r || 20,\n    'width': config.width || 850,\n    'height': config.height || 300,\n    'margin_x': config.margin_x || 80,\n    'margin_y': config.margin_y || 40,\n    'selector': config.selector || null\n  };\n  let extent_x = d3.extent(data, function (d) {\n    return parseInt(d[opts.let_x].value);\n  });\n  let extent_y = d3.extent(data, function (d) {\n    return parseInt(d[opts.let_y].value);\n  });\n  let extent_r = d3.extent(data, function (d) {\n    return parseInt(d[opts.let_r] ? d[opts.let_r].value : opts.let_r);\n  });\n  let scale_x = d3.scale.linear().range([opts.margin_x, opts.width - opts.margin_x]).domain(extent_x);\n  let scale_y = d3.scale.linear().range([opts.height - opts.margin_y, opts.margin_y]).domain(extent_y);\n  let scale_r = d3.scale.linear().range([opts.min_r, opts.max_r]).domain(extent_r);\n  let axis_x = d3.svg.axis().scale(scale_x);\n  let axis_y = d3.svg.axis().scale(scale_y).orient('left');\n\n  let svg = d3sparql.select(opts.selector, 'scatterplot').append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height);\n  let circle = svg.selectAll('circle')\n    .data(data)\n    .enter()\n    .append('circle')\n    .attr('class', 'node')\n    .attr('cx', function (d) {\n      return scale_x(d[opts.let_x].value);\n    })\n    .attr('cy', function (d) {\n      return scale_y(d[opts.let_y].value);\n    })\n    .attr('r', function (d) {\n      return scale_r(d[opts.let_r] ? d[opts.let_r].value : opts.let_r);\n    })\n    .attr('opacity', 0.5)\n    .append('title')\n    .text(function (d) {\n      return d[opts.label_r] ? d[opts.label_r].value : opts.label_r;\n    });\n  let ax = svg.append('g')\n    .attr('class', 'x axis')\n    .attr('transform', 'translate(0,' + (opts.height - opts.margin_y) + ')')\n    .call(axis_x);\n  let ay = svg.append('g')\n    .attr('class', 'y axis')\n    .attr('transform', 'translate(' + opts.margin_x + ',0)')\n    .call(axis_y);\n  ax.append('text')\n    .attr('class', 'label')\n    .text(opts.label_x)\n    .style('text-anchor', 'middle')\n    .attr('transform', 'translate(' + ((opts.width - opts.margin_x) / 2) + ',' + (opts.margin_y - 5) + ')');\n  ay.append('text')\n    .attr('class', 'label')\n    .text(opts.label_y)\n    .style('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', 0 - (opts.height / 2))\n    .attr('y', 0 - (opts.margin_x - 20));\n\n  // default CSS/SVG\n  ax.attr({\n    'stroke': 'black',\n    'fill': 'none',\n  });\n  ay.attr({\n    'stroke': 'black',\n    'fill': 'none',\n  });\n  // This doesn't work with .append(\"circle\") with .append(\"title\") for tooltip\n  circle.attr({\n    'stroke': 'gray',\n    'stroke-width': '1px',\n    'fill': 'lightblue',\n    'opacity': 0.5,\n  });\n  //svg.selectAll(\".label\").attr({\n  svg.selectAll('text').attr({\n    'stroke': 'none',\n    'fill': 'black',\n    'font-size': '8pt',\n    'font-family': 'sans-serif',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a force graph\n\n  References:\n    http://bl.ocks.org/mbostock/4062045\n\n  Options:\n    config = {\n      \"radius\":   12,        // static value or a function to calculate radius of nodes (optional)\n      \"charge\":   -250,      // force between nodes (optional; negative: repulsion, positive: attraction)\n      \"distance\": 30,        // target distance between linked nodes (optional)\n      \"width\":    1000,      // canvas width (optional)\n      \"height\":   500,       // canvas height (optional)\n      \"label\":    \"name\",    // SPARQL letiable name for node labels (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.graph() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.forcegraph(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .link {\n      stroke: #999999;\n    }\n    .node {\n      stroke: black;\n      opacity: 0.5;\n    }\n    circle.node {\n      stroke-width: 1px;\n      fill: lightblue;\n    }\n    text.node {\n      font-family: \"sans-serif\";\n      font-size: 8px;\n    }\n    </style>\n\n  TODO:\n    Try other d3.layout.force options.\n*/\nd3sparql.forcegraph = function (json, config = {}) {\n  let graph = (json.head && json.results) ? d3sparql.graph(json, config) : json;\n\n  let scale = d3.scale.linear()\n    .domain(d3.extent(graph.nodes, (d) => parseFloat(d.value)))\n    .range([1, 20]);\n\n  const radius = config.radius || ((d) => d.value ? scale(d.value) : 1 + d.label.length);\n  const charge = config.charge || -500;\n  const distance = config.distance || 50;\n  const width = config.width || 1000;\n  const height = config.height || 750;\n  const label = config.label || false;\n  const selector = config.selector || null;\n\n  let svg = d3sparql.select(selector, 'forcegraph').append('svg')\n    .attr('width', width)\n    .attr('height', height);\n  let link = svg.selectAll('.link')\n    .data(graph.links)\n    .enter()\n    .append('line')\n    .attr('class', 'link');\n  let node = svg.selectAll('.node')\n    .data(graph.nodes)\n    .enter()\n    .append('g');\n  let circle = node.append('circle')\n    .attr('class', 'node')\n    .attr('r', radius);\n  let text = node.append('text')\n    .text(function (d) {\n      return d[label || 'label'];\n    })\n    .attr('class', 'node');\n  let force = d3.layout.force()\n    .charge(charge)\n    .linkDistance(distance)\n    .size([width, height])\n    .nodes(graph.nodes)\n    .links(graph.links)\n    .start();\n  force.on('tick', function () {\n    link.attr('x1', function (d) {\n        return d.source.x;\n      })\n      .attr('y1', function (d) {\n        return d.source.y;\n      })\n      .attr('x2', function (d) {\n        return d.target.x;\n      })\n      .attr('y2', function (d) {\n        return d.target.y;\n      });\n    text.attr('x', function (d) {\n        return d.x;\n      })\n      .attr('y', function (d) {\n        return d.y;\n      });\n    circle.attr('cx', function (d) {\n        return d.x;\n      })\n      .attr('cy', function (d) {\n        return d.y;\n      });\n  });\n  node.call(force.drag);\n\n  // default CSS/SVG\n  link.attr({\n    'stroke': '#999999',\n  });\n  circle.attr({\n    'stroke': 'black',\n    'stroke-width': '1px',\n    'fill': 'lightblue',\n    'opacity': 1,\n  });\n  text.attr({\n    'font-size': '8px',\n    'font-family': 'sans-serif',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a sanky graph\n\n  References:\n    https://github.com/d3/d3-plugins/tree/master/sankey\n    http://bost.ocks.org/mike/sankey/\n\n  Options:\n    config = {\n      \"width\":    1000,      // canvas width (optional)\n      \"height\":   900,       // canvas height (optional)\n      \"margin\":   50,        // canvas margin (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.graph() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.sankey(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .node rect {\n      cursor: move;\n      fill-opacity: .9;\n      shape-rendering: crispEdges;\n    }\n    .node text {\n      pointer-events: none;\n      text-shadow: 0 1px 0 #ffffff;\n    }\n    .link {\n      fill: none;\n      stroke: #000000;\n      stroke-opacity: .2;\n    }\n    .link:hover {\n      stroke-opacity: .5;\n    }\n    </style>\n\n  Dependencies:\n    * sankey.js\n      * Download from https://github.com/d3/d3-plugins/tree/master/sankey\n      * Put <script src=\"sankey.js\"></script> in the HTML <head> section\n*/\nd3sparql.sankey = function (json, config) {\n  config = config || {};\n\n  let graph = (json.head && json.results) ? d3sparql.graph(json, config) : json;\n\n  let opts = {\n    'width': config.width || 750,\n    'height': config.height || 1200,\n    'margin': config.margin || 10,\n    'selector': config.selector || null\n  };\n\n  let nodes = graph.nodes;\n  let links = graph.links;\n  for (let i = 0; i < links.length; i++) {\n    links[i].value = 2;  // TODO: fix to use values on links\n  }\n  let sankey = d3.sankey()\n    .size([opts.width, opts.height])\n    .nodeWidth(15)\n    .nodePadding(10)\n    .nodes(nodes)\n    .links(links)\n    .layout(32);\n  let path = sankey.link();\n  let color = d3.scale.category20();\n  let svg = d3sparql.select(opts.selector, 'sankey').append('svg')\n    .attr('width', opts.width + opts.margin * 2)\n    .attr('height', opts.height + opts.margin * 2)\n    .append('g')\n    .attr('transform', 'translate(' + opts.margin + ',' + opts.margin + ')');\n  let link = svg.selectAll('.link')\n    .data(links)\n    .enter()\n    .append('path')\n    .attr('class', 'link')\n    .attr('d', path)\n    .attr('stroke-width', function (d) {\n      return Math.max(1, d.dy);\n    })\n    .sort(function (a, b) {\n      return b.dy - a.dy;\n    });\n  let node = svg.selectAll('.node')\n    .data(nodes)\n    .enter()\n    .append('g')\n    .attr('class', 'node')\n    .attr('transform', function (d) {\n      return 'translate(' + d.x + ',' + d.y + ')';\n    })\n    .call(d3.behavior.drag()\n      .origin(function (d) {\n        return d;\n      })\n      .on('dragstart', function () {\n        this.parentNode.appendChild(this);\n      })\n      .on('drag', dragmove)\n    );\n  node.append('rect')\n    .attr('width', function (d) {\n      return d.dx;\n    })\n    .attr('height', function (d) {\n      return d.dy;\n    })\n    .attr('fill', function (d) {\n      return color(d.label);\n    })\n    .attr('opacity', 0.5);\n  node.append('text')\n    .attr('x', -6)\n    .attr('y', function (d) {\n      return d.dy / 2;\n    })\n    .attr('dy', '.35em')\n    .attr('text-anchor', 'end')\n    .attr('transform', null)\n    .text(function (d) {\n      return d.label;\n    })\n    .filter(function (d) {\n      return d.x < opts.width / 2;\n    })\n    .attr('x', 6 + sankey.nodeWidth())\n    .attr('text-anchor', 'start');\n\n  // default CSS/SVG\n  link.attr({\n    'fill': 'none',\n    'stroke': 'grey',\n    'opacity': 0.5,\n  });\n\n  function dragmove(d) {\n    d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(opts.height - d.dy, d3.event.y))) + ')');\n    sankey.relayout();\n    link.attr('d', path);\n  }\n};\n\n\n/*\n  Rendering sparql-results+json object into a round tree\n\n  References:\n    http://bl.ocks.org/4063550  Reingold-Tilford Tree\n\n  Options:\n    config = {\n      \"diameter\": 800,       // canvas diameter (optional)\n      \"angle\":    360,       // arc angle (optional; less than 360 for wedge)\n      \"depth\":    200,       // arc depth (optional; less than diameter/2 - label length to fit)\n      \"radius\":   5,         // node radius (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.roundtree(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .link {\n      fill: none;\n      stroke: #cccccc;\n      stroke-width: 1.5px;\n    }\n    .node circle {\n      fill: #ffffff;\n      stroke: darkgreen;\n      stroke-width: 1.5px;\n      opacity: 1;\n    }\n    .node text {\n      font-size: 10px;\n      font-family: sans-serif;\n    }\n    </style>\n*/\nd3sparql.roundtree = function (json, config) {\n  config = config || {};\n\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json;\n\n  let opts = {\n    'diameter': config.diameter || 800,\n    'angle': config.angle || 360,\n    'depth': config.depth || 200,\n    'radius': config.radius || 5,\n    'selector': config.selector || null\n  };\n\n  let tree_layout = d3.layout.tree()\n    .size([opts.angle, opts.depth])\n    .separation(function (a, b) {\n      return (a.parent === b.parent ? 1 : 2) / a.depth;\n    });\n  let nodes = tree_layout.nodes(tree);\n  let links = tree_layout.links(nodes);\n  let diagonal = d3.svg.diagonal.radial()\n    .projection(function (d) {\n      return [d.y, d.x / 180 * Math.PI];\n    });\n  let svg = d3sparql.select(opts.selector, 'roundtree').append('svg')\n    .attr('width', opts.diameter)\n    .attr('height', opts.diameter)\n    .append('g')\n    .attr('transform', 'translate(' + opts.diameter / 2 + ',' + opts.diameter / 2 + ')');\n  let link = svg.selectAll('.link')\n    .data(links)\n    .enter()\n    .append('path')\n    .attr('class', 'link')\n    .attr('d', diagonal);\n  let node = svg.selectAll('.node')\n    .data(nodes)\n    .enter()\n    .append('g')\n    .attr('class', 'node')\n    .attr('transform', function (d) {\n      return 'rotate(' + (d.x - 90) + ') translate(' + d.y + ')';\n    });\n  let circle = node.append('circle')\n    .attr('r', opts.radius);\n  let text = node.append('text')\n    .attr('dy', '.35em')\n    .attr('text-anchor', function (d) {\n      return d.x < 180 ? 'start' : 'end';\n    })\n    .attr('transform', function (d) {\n      return d.x < 180 ? 'translate(8)' : 'rotate(180) translate(-8)';\n    })\n    .text(function (d) {\n      return d.name;\n    });\n\n  // default CSS/SVG\n  link.attr({\n    'fill': 'none',\n    'stroke': '#cccccc',\n    'stroke-width': '1.5px',\n  });\n  circle.attr({\n    'fill': '#ffffff',\n    'stroke': 'steelblue',\n    'stroke-width': '1.5px',\n    'opacity': 1,\n  });\n  text.attr({\n    'font-size': '10px',\n    'font-family': 'sans-serif',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a dendrogram\n\n  References:\n    http://bl.ocks.org/4063570  Cluster Dendrogram\n\n  Options:\n    config = {\n      \"width\":    900,       // canvas width (optional)\n      \"height\":   4500,      // canvas height (optional)\n      \"margin\":   300,       // width margin for labels (optional)\n      \"radius\":   5,         // radius of node circles (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.dendrogram(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .link {\n      fill: none;\n      stroke: #cccccc;\n      stroke-width: 1.5px;\n    }\n    .node circle {\n      fill: #ffffff;\n      stroke: steelblue;\n      stroke-width: 1.5px;\n      opacity: 1;\n    }\n    .node text {\n      font-size: 10px;\n      font-family: sans-serif;\n    }\n    </style>\n*/\nd3sparql.dendrogram = function (json, config = {}) {\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json;\n\n  let opts = {\n    'width': config.width || 800,\n    'height': config.height || 2000,\n    'margin': config.margin || 350,\n    'radius': config.radius || 5,\n    'selector': config.selector || null\n  };\n\n  let cluster = d3.layout.cluster()\n    .size([opts.height, opts.width - opts.margin]);\n  let diagonal = d3.svg.diagonal()\n    .projection(function (d) {\n      return [d.y, d.x];\n    });\n  let svg = d3sparql.select(opts.selector, 'dendrogram').append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height)\n    .append('g')\n    .attr('transform', 'translate(40,0)');\n  let nodes = cluster.nodes(tree);\n  let links = cluster.links(nodes);\n  let link = svg.selectAll('.link')\n    .data(links)\n    .enter().append('path')\n    .attr('class', 'link')\n    .attr('d', diagonal);\n  let node = svg.selectAll('.node')\n    .data(nodes)\n    .enter().append('g')\n    .attr('class', 'node')\n    .attr('transform', function (d) {\n      return 'translate(' + d.y + ',' + d.x + ')';\n    });\n  let circle = node.append('circle')\n    .attr('r', opts.radius);\n  let text = node.append('text')\n    .attr('dx', function (d) {\n      return (d.parent && d.children) ? -8 : 8;\n    })\n    .attr('dy', 5)\n    .style('text-anchor', function (d) {\n      return (d.parent && d.children) ? 'end' : 'start';\n    })\n    .text(function (d) {\n      return d.name;\n    });\n\n  // default CSS/SVG\n  link.attr({\n    'fill': 'none',\n    'stroke': '#cccccc',\n    'stroke-width': '1.5px',\n  });\n  circle.attr({\n    'fill': '#ffffff',\n    'stroke': 'steelblue',\n    'stroke-width': '1.5px',\n    'opacity': 1,\n  });\n  text.attr({\n    'font-size': '10px',\n    'font-family': 'sans-serif',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a sunburst\n\n  References:\n    http://bl.ocks.org/4348373  Zoomable Sunburst\n    http://www.jasondavies.com/coffee-wheel/  Coffee Flavour Wheel\n\n  Options:\n    config = {\n      \"width\":    1000,      // canvas width (optional)\n      \"height\":   900,       // canvas height (optional)\n      \"margin\":   150,       // margin for labels (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.sunburst(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .node text {\n      font-size: 10px;\n      font-family: sans-serif;\n    }\n    .arc {\n      stroke: #ffffff;\n      fill-rule: evenodd;\n    }\n    </style>\n*/\nd3sparql.sunburst = function (json, config = {}) {\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json;\n\n  let opts = {\n    'width': config.width || 1000,\n    'height': config.height || 900,\n    'margin': config.margin || 150,\n    'selector': config.selector || null\n  };\n\n  let radius = Math.min(opts.width, opts.height) / 2 - opts.margin;\n  let x = d3.scale.linear().range([0, 2 * Math.PI]);\n  let y = d3.scale.sqrt().range([0, radius]);\n  let color = d3.scale.category20();\n  let svg = d3sparql.select(opts.selector, 'sunburst').append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height)\n    .append('g')\n    .attr('transform', 'translate(' + opts.width / 2 + ',' + opts.height / 2 + ')');\n  let arc = d3.svg.arc()\n    .startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    })\n    .endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    })\n    .innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    })\n    .outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n  let partition = d3.layout.partition()\n    .value(function (d) {\n      return d.value;\n    });\n  let nodes = partition.nodes(tree);\n  let path = svg.selectAll('path')\n    .data(nodes)\n    .enter()\n    .append('path')\n    .attr('d', arc)\n    .attr('class', 'arc')\n    .style('fill', function (d) {\n      return color((d.children ? d : d.parent).name);\n    })\n    .on('click', click);\n  let text = svg.selectAll('text')\n    .data(nodes)\n    .enter()\n    .append('text')\n    .attr('transform', function (d) {\n      let rotate = x(d.x + d.dx / 2) * 180 / Math.PI - 90;\n      return 'rotate(' + rotate + ') translate(' + y(d.y) + ')';\n    })\n    .attr('dx', '.5em')\n    .attr('dy', '.35em')\n    .text(function (d) {\n      return d.name;\n    })\n    .on('click', click);\n\n  // default CSS/SVG\n  path.attr({\n    'stroke': '#ffffff',\n    'fill-rule': 'evenodd',\n  });\n  text.attr({\n    'font-size': '10px',\n    'font-family': 'sans-serif',\n  });\n\n  function click(d) {\n    path.transition()\n      .duration(750)\n      .attrTween('d', arcTween(d));\n    text.style('visibility', function (e) {\n        // required for showing labels just before the transition when zooming back to the upper level\n        return isParentOf(d, e) ? null : d3.select(this).style('visibility');\n      })\n      .transition()\n      .duration(750)\n      .attrTween('transform', function (d) {\n        return function () {\n          let rotate = x(d.x + d.dx / 2) * 180 / Math.PI - 90;\n          return 'rotate(' + rotate + ') translate(' + y(d.y) + ')';\n        };\n      })\n      .each('end', function (e) {\n        // required for hiding labels just after the transition when zooming down to the lower level\n        d3.select(this).style('visibility', isParentOf(d, e) ? null : 'hidden');\n      });\n  }\n\n  function maxDepth(d) {\n    return d.children ? Math.max.apply(Math, d.children.map(maxDepth)) : d.y + d.dy;\n  }\n\n  function arcTween(d) {\n    let xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n      yd = d3.interpolate(y.domain(), [d.y, maxDepth(d)]),\n      yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);\n\n    return (data) => {\n      return (t) => {\n        x.domain(xd(t));\n        y.domain(yd(t)).range(yr(t));\n        return arc(data);\n      }\n    }\n  }\n\n  function isParentOf(p, c) {\n    if (p === c) {\n      return true;\n    }\n    if (p.children) {\n      return p.children.some((d) => isParentOf(d, c));\n    }\n    return false;\n  }\n};\n\n/*\n  Rendering sparql-results+json object into a circle pack\n\n  References:\n    http://mbostock.github.com/d3/talk/20111116/pack-hierarchy.html  Circle Packing\n\n  Options:\n    config = {\n      \"width\":    800,       // canvas width (optional)\n      \"height\":   800,       // canvas height (optional)\n      \"diameter\": 700,       // diamieter of the outer circle (optional)\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.circlepack(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    text {\n      font-size: 11px;\n      pointer-events: none;\n    }\n    text.parent {\n      fill: #1f77b4;\n    }\n    circle {\n      fill: #cccccc;\n      stroke: #999999;\n      pointer-events: all;\n    }\n    circle.parent {\n      fill: #1f77b4;\n      fill-opacity: .1;\n      stroke: steelblue;\n    }\n    circle.parent:hover {\n      stroke: #ff7f0e;\n      stroke-width: .5px;\n    }\n    circle.child {\n      pointer-events: none;\n    }\n    </style>\n\n  TODO:\n    Fix rotation angle for each text to avoid string collision\n*/\nd3sparql.circlepack = function (json, config = {}) {\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json;\n\n  let opts = {\n    'width': config.width || 800,\n    'height': config.height || 800,\n    'diameter': config.diameter || 700,\n    'selector': config.selector || null\n  };\n\n  let w = opts.width,\n    h = opts.height,\n    r = opts.diameter,\n    x = d3.scale.linear().range([0, r]),\n    y = d3.scale.linear().range([0, r]);\n\n  let pack = d3.layout.pack()\n    .size([r, r])\n    .value(function (d) {\n      return d.value;\n    });\n\n  let node = tree;\n  let nodes = pack.nodes(tree);\n\n  let vis = d3sparql.select(opts.selector, 'circlepack').append('svg')\n    .attr('width', w)\n    .attr('height', h)\n    .append('g')\n    .attr('transform', 'translate(' + (w - r) / 2 + ',' + (h - r) / 2 + ')');\n\n  vis.selectAll('circle')\n    .data(nodes)\n    .enter()\n    .append('circle')\n    .attr('class', function (d) {\n      return d.children ? 'parent' : 'child';\n    })\n    .attr('cx', function (d) {\n      return d.x;\n    })\n    .attr('cy', function (d) {\n      return d.y;\n    })\n    .attr('r', function (d) {\n      return d.r;\n    })\n    /*\n        // CSS: circle { ... }\n        .attr(\"fill\", function(d) { return d.children ? \"#1f77b4\" : \"#cccccc\" })\n        .attr(\"fill-opacity\", function(d) { return d.children ? \".1\" : \"1\" })\n        .attr(\"stroke\", function(d) { return d.children ? \"steelblue\" : \"#999999\" })\n        .attr(\"pointer-events\", function(d) { return d.children ? \"all\" : \"none\" })\n        .on(\"mouseover\", function() { d3.select(this).attr(\"stroke\", \"#ff7f0e\").attr(\"stroke-width\", \".5px\") })\n        .on(\"mouseout\", function() { d3.select(this).attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", \".5px\") })\n    */\n    .on('click', function (d) {\n      return zoom(node === d ? tree : d);\n    });\n\n  vis.selectAll('text')\n    .data(nodes)\n    .enter()\n    .append('text')\n    .attr('class', function (d) {\n      return d.children ? 'parent' : 'child';\n    })\n    .attr('x', function (d) {\n      return d.x;\n    })\n    .attr('y', function (d) {\n      return d.y;\n    })\n    //    .attr(\"dy\", \".35em\")\n    .style('opacity', function (d) {\n      return d.r > 20 ? 1 : 0;\n    })\n    .text(function (d) {\n      return d.name;\n    })\n    // rotate to avoid string collision\n    //.attr(\"text-anchor\", \"middle\")\n    .attr('text-anchor', 'start')\n    .transition()\n    .duration(1000)\n    .attr('transform', function (d) {\n      return 'rotate(-30, ' + d.x + ', ' + d.y + ')';\n    });\n\n  d3.select(window).on('click', function () {\n    zoom(tree);\n  });\n\n  function zoom(d, i) {\n    let k = r / d.r / 2;\n    x.domain([d.x - d.r, d.x + d.r]);\n    y.domain([d.y - d.r, d.y + d.r]);\n    let t = vis.transition()\n      .duration(d3.event.altKey ? 2000 : 500);\n    t.selectAll('circle')\n      .attr('cx', function (d) {\n        return x(d.x);\n      })\n      .attr('cy', function (d) {\n        return y(d.y);\n      })\n      .attr('r', function (d) {\n        return k * d.r;\n      });\n    t.selectAll('text')\n      .attr('x', function (d) {\n        return x(d.x);\n      })\n      .attr('y', function (d) {\n        return y(d.y);\n      })\n      .style('opacity', function (d) {\n        return k * d.r > 20 ? 1 : 0;\n      });\n    d3.event.stopPropagation();\n  }\n};\n\n/*\n  Rendering sparql-results+json object into a treemap\n\n  References:\n    http://bl.ocks.org/4063582  Treemap\n\n  Options:\n    config = {\n      \"width\":    800,       // canvas width (optional)\n      \"height\":   500,       // canvas height (optional)\n      \"margin\":   {\"top\": 10, \"right\": 10, \"bottom\": 10, \"left\": 10},\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.treemap(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    .node {\n      border: solid 1px white;\n      font: 10px sans-serif;\n      line-height: 12px;\n      overflow: hidden;\n      position: absolute;\n      text-indent: 2px;\n    }\n    </style>\n*/\nd3sparql.treemap = function (json, config = {}) {\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json;\n\n  let width = config.width || 800;\n  let height = config.height || 500;\n  let count = config.count || false;\n  let color = config.color || d3.scale.category20c();\n  let margin = config.margin || { top: 0, right: 0, bottom: 0, left: 0 };\n  let selector = config.selector || null;\n\n  width = width - margin.left - margin.right;\n  height = height - margin.top - margin.bottom;\n\n  let getCount = (d) => 1;\n  let getSize = (d) => d.value;\n\n  let treemap = d3.layout.treemap()\n    .size([width, height])\n    .sticky(true)\n    .value(count ? getCount : getSize);\n\n  let div = d3sparql.select(selector, 'treemap')\n    .style('position', 'relative')\n    .style('width', width + 'px')\n    .style('height', height + 'px')\n    .style('left', margin.left + 'px')\n    .style('top', margin.top + 'px');\n\n  function position() {\n    this.style('left', function (d) {\n        return d.x + 'px';\n      })\n      .style('top', function (d) {\n        return d.y + 'px';\n      })\n      .style('width', function (d) {\n        return Math.max(0, d.dx - 1) + 'px';\n      })\n      .style('height', function (d) {\n        return Math.max(0, d.dy - 1) + 'px';\n      });\n  }\n\n  let node = div.datum(tree).selectAll('.node')\n    .data(treemap.nodes)\n    .enter()\n    .append('div')\n    .attr('class', 'node')\n    .call(position)\n    .style('background', (d) => d.children ? color(d.name) : null)\n    .text((d) => d.children ? null : d.name);\n\n  // default CSS/SVG\n  node.style({\n    'border-style': 'solid',\n    'border-width': '1px',\n    'border-color': 'white',\n    'font-size': '10px',\n    'font-family': 'sans-serif',\n    'line-height': '12px',\n    'overflow': 'hidden',\n    'position': 'absolute',\n    'text-indent': '2px',\n  });\n};\n\n/*\n  Rendering sparql-results+json object into a zoomable treemap\n\n  References:\n    http://bost.ocks.org/mike/treemap/  Zoomable Treemaps\n    http://bl.ocks.org/zanarmstrong/76d263bd36f312cb0f9f\n\n  Options:\n    config = {\n      \"width\":    800,       // canvas width (optional)\n      \"height\":   500,       // canvas height (optional)\n      \"margin\":   {\"top\": 10, \"right\": 10, \"bottom\": 10, \"left\": 10},\n      \"selector\": \"#result\"\n      // options for d3sparql.tree() can be added here ...\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      let config = { ... }\n      d3sparql.treemapzoom(json, config)\n    }\n\n  CSS/SVG:\n    <style>\n    rect {\n      cursor: pointer;\n    }\n    .grandparent:hover rect {\n      opacity: 0.8;\n    }\n    .children:hover rect.child {\n      opacity: 0.2;\n    }\n    </style>\n*/\nd3sparql.treemapzoom = function (json, config = {}) {\n  let tree = (json.head && json.results) ? d3sparql.tree(json, config) : json;\n\n  let opts = {\n    'width': config.width || 800,\n    'height': config.height || 500,\n    'margin': config.margin || { top: 25, right: 0, bottom: 0, left: 0 },\n    'color': config.color || d3.scale.category20(),\n    'format': config.format || d3.format(',d'),\n    'selector': config.selector || null\n  };\n\n  let width = opts.width - opts.margin.left - opts.margin.right;\n  let height = opts.height - opts.margin.top - opts.margin.bottom;\n  let color = opts.color;\n  let format = opts.format;\n  let transitioning;\n\n  let x = d3.scale.linear().domain([0, width]).range([0, width]);\n  let y = d3.scale.linear().domain([0, height]).range([0, height]);\n\n  let treemap = d3.layout.treemap()\n    .children(function (d, depth) {\n      return depth ? null : d.children;\n    })\n    .sort(function (a, b) {\n      return a.value - b.value;\n    })\n    .ratio(height / width * 0.5 * (1 + Math.sqrt(5)))\n    .round(false);\n\n  let svg = d3sparql.select(opts.selector, 'treemapzoom').append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height)\n    .style('margin-left', -opts.margin.left + 'px')\n    .style('margin.right', -opts.margin.right + 'px')\n    .append('g')\n    .attr('transform', 'translate(' + opts.margin.left + ',' + opts.margin.top + ')')\n    .style('shape-rendering', 'crispEdges');\n\n  let grandparent = svg.append('g')\n    .attr('class', 'grandparent');\n\n  grandparent.append('rect')\n    .attr('y', -opts.margin.top)\n    .attr('width', width)\n    .attr('height', opts.margin.top)\n    .attr('fill', '#666666');\n\n  grandparent.append('text')\n    .attr('x', 6)\n    .attr('y', 6 - opts.margin.top)\n    .attr('dy', '.75em')\n    .attr('stroke', '#ffffff')\n    .attr('fill', '#ffffff');\n\n  let initialize = (tree) => {\n    tree.x = tree.y = 0;\n    tree.dx = width;\n    tree.dy = height;\n    tree.depth = 0;\n  }\n\n  // Compute the treemap layout recursively such that each group of siblings\n  // uses the same size (1×1) rather than the dimensions of the parent cell.\n  // This optimizes the layout for the current zoom state. Note that a wrapper\n  // object is created for the parent node for each group of siblings so that\n  // the parent’s dimensions are not discarded as we recurse. Since each group\n  // of sibling was laid out in 1×1, we must rescale to fit using absolute\n  // coordinates. This lets us use a viewport to zoom.\n  let layout = (d) => {\n    if (!d.children) {\n     return;\n    }\n    treemap.nodes({ children: d.children });\n    d.children.forEach((c) => {\n      c.x = d.x + c.x * d.dx;\n      c.y = d.y + c.y * d.dy;\n      c.dx *= d.dx;\n      c.dy *= d.dy;\n      c.parent = d;\n      layout(c);\n    });\n  }\n\n  initialize(tree);\n  layout(tree);\n  display(tree);\n\n  function display(d) {\n    grandparent\n      .datum(d.parent)\n      .on('click', transition)\n      .select('text')\n      .text(name(d));\n\n    let g1 = svg.insert('g', '.grandparent')\n      .datum(d)\n      .attr('class', 'depth');\n\n    let g = g1.selectAll('g')\n      .data(d.children)\n      .enter()\n      .append('g');\n\n    g.filter(function (d) {\n        return d.children;\n      })\n      .classed('children', true)\n      .on('click', transition);\n\n    g.selectAll('.child')\n      .data(function (d) {\n        return d.children || [d];\n      })\n      .enter()\n      .append('rect')\n      .attr('class', 'child')\n      .call(rect);\n\n    g.append('rect')\n      .attr('class', 'parent')\n      .call(rect)\n      .append('title')\n      .text(function (d) {\n        return format(d.value);\n      });\n\n    g.append('text')\n      .attr('dy', '.75em')\n      .text(function (d) {\n        return d.name;\n      })\n      .call(text);\n\n    function transition(d) {\n      if (transitioning || !d) return;\n      transitioning = true;\n      let g2 = display(d),\n        t1 = g1.transition().duration(750),\n        t2 = g2.transition().duration(750);\n\n      // Update the domain only after entering new elements.\n      x.domain([d.x, d.x + d.dx]);\n      y.domain([d.y, d.y + d.dy]);\n\n      // Enable anti-aliasing during the transition.\n      svg.style('shape-rendering', null);\n\n      // Draw child nodes on top of parent nodes.\n      svg.selectAll('.depth').sort(function (a, b) {\n        return a.depth - b.depth;\n      });\n\n      // Fade-in entering text.\n      g2.selectAll('text').style('fill-opacity', 0);\n\n      // Transition to the new view.\n      t1.selectAll('text').call(text).style('fill-opacity', 0);\n      t2.selectAll('text').call(text).style('fill-opacity', 1);\n      t1.selectAll('rect').call(rect);\n      t2.selectAll('rect').call(rect);\n\n      // Remove the old node when the transition is finished.\n      t1.remove().each('end', function () {\n        svg.style('shape-rendering', 'crispEdges');\n        transitioning = false;\n      });\n    }\n\n    return g;\n  }\n\n  function text(text) {\n    text.attr('x', function (d) {\n        return x(d.x) + 6;\n      })\n      .attr('y', function (d) {\n        return y(d.y) + 6;\n      });\n  }\n\n  function rect(rect) {\n    rect.attr('x', function (d) {\n        return x(d.x);\n      })\n      .attr('y', function (d) {\n        return y(d.y);\n      })\n      .attr('width', function (d) {\n        return x(d.x + d.dx) - x(d.x);\n      })\n      .attr('height', function (d) {\n        return y(d.y + d.dy) - y(d.y);\n      })\n      .attr('fill', function (d) {\n        return color(d.name);\n      });\n    rect.attr({\n      'stroke': '#ffffff',\n      'stroke-width': '1px',\n      'opacity': 0.8,\n    });\n  }\n\n  function name(d) {\n    return d.parent\n      ? name(d.parent) + ' / ' + d.name\n      : d.name;\n  }\n};\n\n/*\n  World Map spotted by coordinations (longitude and latitude)\n\n  Options:\n    config = {\n      \"let_lat\":  \"lat\",     // SPARQL letiable name for latitude (optional; default is the 1st letiable)\n      \"let_lng\":  \"lng\",     // SPARQL letiable name for longitude (optional; default is the 2nd letiable)\n      \"width\":    960,       // canvas width (optional)\n      \"height\":   480,       // canvas height (optional)\n      \"radius\":   5,         // circle radius (optional)\n      \"color\":    \"#FF3333,  // circle color (optional)\n      \"topojson\": \"path/to/world-50m.json\",  // TopoJSON file\n      \"selector\": \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      d3sparql.coordmap(json, config = {})\n    }\n\n  Dependencies:\n    * topojson.js\n      * Download from http://d3js.org/topojson.v1.min.js\n      * Put <script src=\"topojson.js\"></script> in the HTML <head> section\n    * world-50m.json\n      * Download from https://github.com/mbostock/topojson/blob/master/examples/world-50m.json\n*/\nd3sparql.coordmap = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let opts = {\n    'let_lat': config.let_lat || head[0] || 'lat',\n    'let_lng': config.let_lng || head[1] || 'lng',\n    'width': config.width || 960,\n    'height': config.height || 480,\n    'radius': config.radius || 5,\n    'color': config.color || '#FF3333',\n    'topojson': config.topojson || 'world-50m.json',\n    'selector': config.selector || null\n  };\n\n  let projection = d3.geo.equirectangular()\n    .scale(153)\n    .translate([opts.width / 2, opts.height / 2])\n    .precision(.1);\n  let path = d3.geo.path()\n    .projection(projection);\n  let graticule = d3.geo.graticule();\n  let svg = d3sparql.select(opts.selector, 'coordmap').append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height);\n\n  svg.append('path')\n    .datum(graticule.outline)\n    .attr('fill', '#a4bac7')\n    .attr('d', path);\n\n  svg.append('path')\n    .datum(graticule)\n    .attr('fill', 'none')\n    .attr('stroke', '#333333')\n    .attr('stroke-width', '.5px')\n    .attr('stroke-opacity', '.5')\n    .attr('d', path);\n\n  d3.json(opts.topojson, function (error, world) {\n    svg.insert('path', '.graticule')\n      .datum(topojson.feature(world, world.objects.land))\n      .attr('fill', '#d7c7ad')\n      .attr('stroke', '#766951')\n      .attr('d', path);\n\n    svg.insert('path', '.graticule')\n      .datum(topojson.mesh(world, world.objects.countries, function (a, b) {\n        return a !== b;\n      }))\n      .attr('class', 'boundary')\n      .attr('fill', 'none')\n      .attr('stroke', '#a5967e')\n      .attr('stroke-width', '.5px')\n      .attr('d', path);\n\n    svg.selectAll('.pin')\n      .data(data)\n      .enter().append('circle', '.pin')\n      .attr('fill', opts.color)\n      .attr('r', opts.radius)\n      .attr('stroke', '#455346')\n      .attr('transform', function (d) {\n        return 'translate(' + projection([\n          d[opts.let_lng].value,\n          d[opts.let_lat].value\n        ]) + ')';\n      });\n  });\n};\n\n/*\n  World Map colored by location names defined in a TopoJSON file\n\n  Options:\n    config = {\n      \"label\":       \"name\",    // SPARQL letiable name for location names (optional; default is the 1st letiable)\n      \"value\":       \"size\",    // SPARQL letiable name for numerical values (optional; default is the 2nd letiable)\n      \"width\":       1000,      // canvas width (optional)\n      \"height\":      1000,      // canvas height (optional)\n      \"color_max\":   \"blue\",    // color for maximum value (optional)\n      \"color_min\":   \"white\",   // color for minimum value (optional)\n      \"color_scale\": \"linear\"   // color scale (optional; \"linear\" or \"log\")\n      \"topojson\":    \"path/to/japan.topojson\",  // TopoJSON file\n      \"mapname\":     \"japan\",   // JSON key name of a map location root (e.g., \"objects\":{\"japan\":{\"type\":\"GeometryCollection\", ...)\n      \"keyname\":     \"name\",    // JSON key name of map locations matched with \"label\" (e.g., \"properties\":{\"name\":\"Tokyo\", ...)\n      \"center_lat\":  34,        // latitude for a map location center (optional; default is 34 for Japan)\n      \"center_lng\":  137,       // longitude for a map location center (optional; default is 137 for Japan)\n      \"scale\":       10000,     // scale of rendering (optional)\n      \"selector\":    \"#result\"\n    }\n\n  Synopsis:\n    d3sparql.query(endpoint, sparql, render)\n\n    function render(json) {\n      d3sparql.namedmap(json, config = {})\n    }\n\n  Dependencies:\n    * topojson.js\n      * Download from http://d3js.org/topojson.v1.min.js\n      * Put <script src=\"topojson.js\"></script> in the HTML <head> section\n    * japan.topojson\n      * Download from https://github.com/sparql-book/sparql-book/blob/master/chapter5/D3/japan.topojson\n*/\nd3sparql.namedmap = function (json, config = {}) {\n  let head = json.head.lets || json.head.vars || [];\n  let data = json.results.bindings;\n\n  let opts = {\n    'label': config.label || head[0] || 'label',\n    'value': config.value || head[1] || 'value',\n    'width': config.width || 1000,\n    'height': config.height || 1000,\n    'color_max': config.color_max || 'red',\n    'color_min': config.color_min || 'white',\n    'color_scale': config.color_scale || 'log',\n    'topojson': config.topojson || 'japan.topojson',\n    'mapname': config.mapname || 'japan',\n    'keyname': config.keyname || 'name_local',\n    'center_lat': config.center_lat || 34,\n    'center_lng': config.center_lng || 137,\n    'scale': config.scale || 10000,\n    'selector': config.selector || null\n  };\n\n  let size = d3\n    .nest()\n    .key((d) => d[opts.label].value)\n    .rollup((d) => d3.sum(d, (d) => parseInt(d[opts.value].value)))\n    .map(data, d3.map);\n  let extent = d3.extent((d3.map(size).values()));\n\n  debug(size);\n\n  let svg = d3sparql.select(opts.selector, 'namedmap').append('svg')\n    .attr('width', opts.width)\n    .attr('height', opts.height);\n\n  d3.json(opts.topojson, function (topojson_map) {\n    let geo = topojson.object(topojson_map, topojson_map.objects[opts.mapname]).geometries;\n    let projection = d3.geo.mercator()\n      .center([opts.center_lng, opts.center_lat])\n      .translate([opts.width / 2, opts.height / 2])\n      .scale(opts.scale);\n    let path = d3.geo.path().projection(projection);\n    let scale;\n    switch (opts.color_scale) {\n      case 'log':\n        scale = d3.scale.log();\n        break;\n      default:\n        scale = d3.scale.linear();\n        break;\n    }\n    let color = scale.domain(extent).range([opts.color_min, opts.color_max]);\n\n    svg.selectAll('path')\n      .data(geo)\n      .enter()\n      .append('path')\n      .attr('d', path)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 0.5)\n      .style('fill', function (d, i) {\n        // map SPARQL results to colors\n        return color(size[d.properties[opts.keyname]]);\n      });\n\n    svg.selectAll('.place-label')\n      .data(geo)\n      .enter()\n      .append('text')\n      .attr('font-size', '8px')\n      .attr('class', 'place-label')\n      .attr('transform', function (d) {\n        let lat = d.properties.latitude;\n        let lng = d.properties.longitude;\n        return 'translate(' + projection([lng, lat]) + ')';\n      })\n      .attr('dx', '-1.5em')\n      .text((d) => d.properties[opts.keyname]);\n  });\n};\n\n/**\n * @param {string|EventTarget} [selector] if not given, will use body\n * @param {string} type\n * @returns {d3.Selection<any>}\n */\nd3sparql.select = function (selector, type) {\n  const elem = selector ? d3.select(selector).html('') : d3.select('body');\n  return elem.append('div').attr('class', 'd3sparql ' + type);\n};\n\n/* Helper function only for the d3sparql web site */\nd3sparql.toggle = function () {\n  let button = d3.select('#button');\n  let elem = d3.select('#sparql');\n  if (elem.style('display') === 'none') {\n    elem.style('display', 'inline');\n    button.attr('class', 'icon-chevron-up');\n  } else {\n    elem.style('display', 'none');\n    button.attr('class', 'icon-chevron-down');\n  }\n};\n\n/* for IFRAME embed */\nd3sparql.frameheight = function (height) {\n  d3.select(self.frameElement).style('height', height + 'px');\n};\n"],"names":["d3sparql","version","debug","messages","args","message","push","JSON","stringify","console","fetch","async","url","init","res","headers","Accept","ok","Error","text","json","query","endpoint","sparql","type","URL","search","encodeURIComponent","href","formData","FormData","append","body","URLSearchParams","entries","method","TypeError","graph","config","head","lets","vars","data","results","bindings","key1","key2","label1","label2","value1","value2","valueToIndexMap","Map","index","i","length","datum","key1Val","value","key2Val","label1Val","label2Val","value1Val","value2Val","has","nodes","set","links","get","tree","rootKey","root","parentKey","parent","childKey","child","valueKey","pair","size","children","traverse","node","list","map","d","subtotal","d3","sum","htmltable","columns","selector","limit","undefined","offset","slice","table","select","attr","thead","tbody","selectAll","enter","col","cells","row","val","style","htmlhash","barchart","opts","label_x","label_y","let_x","let_y","width","height","margin","scale_x","scale","ordinal","rangeRoundBands","scale_y","linear","range","axis_x","svg","axis","orient","axis_y","domain","extent","parseInt","ax","call","ay","bar","rangeBand","piechart","label","hole","radius","Math","min","max","color","category20","arc","outerRadius","innerRadius","pie","layout","g","centroid","scatterplot","label_r","let_r","min_r","max_r","margin_x","margin_y","extent_x","extent_y","extent_r","scale_r","circle","forcegraph","parseFloat","charge","distance","link","force","linkDistance","start","on","source","x","y","target","drag","sankey","nodeWidth","nodePadding","path","dy","sort","a","b","behavior","origin","parentNode","appendChild","this","event","relayout","dx","filter","roundtree","diameter","angle","depth","tree_layout","separation","diagonal","radial","projection","PI","name","dendrogram","cluster","sunburst","sqrt","startAngle","endAngle","partition","click","transition","duration","attrTween","xd","interpolate","yd","maxDepth","yr","t","arcTween","e","isParentOf","each","apply","p","c","some","circlepack","w","h","r","pack","vis","zoom","k","altKey","stopPropagation","window","treemap","count","category20c","top","right","bottom","left","sticky","treemapzoom","transitioning","format","ratio","round","grandparent","forEach","rect","initialize","display","g1","insert","g2","t1","t2","remove","classed","coordmap","let_lat","let_lng","topojson","geo","equirectangular","translate","precision","graticule","outline","error","world","objects","land","countries","namedmap","color_max","color_min","color_scale","mapname","keyname","center_lat","center_lng","nest","key","rollup","values","topojson_map","geometries","mercator","center","log","properties","lat","latitude","lng","longitude","html","toggle","button","elem","frameheight","self","frameElement"],"mappings":"qVAYA,MAAMA,EAAW,CACfC,QAAS,iCACTC,OAAO,GAQT,SAASA,KAASC,MACZH,EAASE,MAAO,OACZE,EAAO,OACR,MAAMC,KAAWF,gBACLE,OACR,SACHD,EAAKE,KAAKC,KAAKC,UAAUH,kBAGzBD,EAAKE,KAAKD,GAGhBI,QAAQP,SAASE,WASrBJ,EAASU,MAAQC,MAAOC,EAAKC,EAAO,MAClCX,EAAMU,SACAE,QAAYJ,MAAME,EAAK,IACxBC,EACHE,QAAS,IACJF,EAAKE,QACRC,OAAQ,yCAIPF,EAAIG,SACD,IAAIC,YAAYJ,EAAIK,eAErBL,EAAIM,QASbpB,EAASqB,MAAQ,SAAUC,EAAUC,EAAQC,EAAO,aAC5CZ,EAAM,IAAIa,IAAIH,MACP,QAATE,SACFZ,EAAIc,OAAU,SAAQC,mBAAmBJ,GAClCvB,EAASU,MAAME,EAAIgB,MACrB,GAAa,SAATJ,EAAiB,OAEpBK,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASR,SAEnBS,EAAO,IAAIC,gBAAgB,IAAIJ,EAASK,mBACvClC,EAASU,MAAME,EAAIgB,KAAM,CAC9BI,KAAAA,EACAG,OAAQ,OACRpB,QAAS,gBACS,6CAKhB,IAAIqB,UAAW,2BAA0BZ,IA+BjDxB,EAASqC,MAAQ,SAAUjB,EAAMkB,EAAS,QACpCC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpBC,EAAOP,EAAOO,MAAQN,EAAK,IAAM,OACjCO,EAAOR,EAAOQ,MAAQP,EAAK,IAAM,OACjCQ,EAAST,EAAOS,QAAUR,EAAK,KAAM,EACrCS,EAASV,EAAOU,QAAUT,EAAK,KAAM,EACrCU,EAASX,EAAOW,QAAUV,EAAK,KAAM,EACrCW,EAASZ,EAAOY,QAAUX,EAAK,KAAM,EAErCF,EAAQ,OACD,SACA,IAEPc,EAAkB,IAAIC,IACtBC,EAAQ,MACP,IAAIC,EAAI,EAAGA,EAAIZ,EAAKa,OAAQD,IAAK,KAChCE,EAAQd,EAAKY,GACbG,EAAUD,EAAMX,GAAMa,MACtBC,EAAUH,EAAMV,GAAMY,MACtBE,EAAYb,EAASS,EAAMT,GAAQW,MAAQD,EAC3CI,EAAYb,EAASQ,EAAMR,GAAQU,MAAQC,EAC3CG,IAAYb,GAASO,EAAMP,GAAQS,MACnCK,IAAYb,GAASM,EAAMN,GAAQQ,MAClCP,EAAgBa,IAAIP,KACvBpB,EAAM4B,MAAM3D,KAAK,KAASmD,QAAkBG,QAAoBE,IAChEX,EAAgBe,IAAIT,EAASJ,GAC7BA,KAEGF,EAAgBa,IAAIL,KACvBtB,EAAM4B,MAAM3D,KAAK,KAASqD,QAAkBE,QAAoBE,IAChEZ,EAAgBe,IAAIP,EAASN,GAC7BA,KAEFhB,EAAM8B,MAAM7D,KAAK,QAAY6C,EAAgBiB,IAAIX,UAAoBN,EAAgBiB,IAAIT,YAE3FzD,EAAMmC,GACCA,GAiCTrC,EAASqE,KAAO,SAAUjD,EAAMkB,EAAS,QACnCC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpB0B,EAAUhC,EAAOiC,MAAQhC,EAAK,GAC9BiC,EAAYlC,EAAOmC,QAAUlC,EAAK,GAClCmC,EAAWpC,EAAOqC,OAASpC,EAAK,GAChCqC,EAAWtC,EAAOoB,OAASnB,EAAK,IAAM,QAEtCsC,EAAO,IAAIzB,IACX0B,EAAO,IAAI1B,IACXmB,EAAO7B,EAAK,GAAG4B,GAASZ,MACxBe,GAAS,EACTE,EAAQF,MACP,IAAInB,EAAI,EAAGA,EAAIZ,EAAKa,OAAQD,IAAK,OAC9BE,EAAQd,EAAKY,MACnBmB,EAASjB,EAAMgB,GAAWd,MAC1BiB,EAAQnB,EAAMkB,GAAUhB,MACpBe,IAAWE,EAAO,KAEhBI,EACAF,EAAKb,IAAIS,IACXM,EAAWF,EAAKT,IAAIK,GACpBM,EAASzE,KAAKqE,IAEdI,EAAW,CAACJ,GAEdE,EAAKX,IAAIO,EAAQM,GACbvB,EAAMoB,IACRE,EAAKZ,IAAIS,EAAOnB,EAAMoB,GAAUlB,YAmBlCW,WAdKW,EAASC,OACZC,EAAOL,EAAKT,IAAIa,MAChBC,EAAM,KACJH,EAAWG,EAAKC,IAAKC,GAAMJ,EAASI,IAEpCC,EAAWC,EAAGC,IAAIR,EAAWK,GAAMA,EAAE1B,aAGlC,MAAUuB,WAAkBF,QADvBO,EAAGC,IAAI,CAACF,EAAUP,EAAKV,IAAIa,YAGhC,MAAUA,QAAeH,EAAKV,IAAIa,IAAS,GAI3CD,CAAST,UAEpBrE,EAAMmE,GACCA,GAgCTrE,EAASwF,UAAY,SAAUpE,EAAMkB,EAAS,QACxCC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpB6C,EAAUnD,EAAOmD,SAAWlD,EAC5BxB,EAAUuB,EAAOvB,SAAW0E,EAC5BC,EAAWpD,EAAOoD,UAAY,KAC9BC,OAAyBC,IAAjBtD,EAAOqD,MAAsBrD,EAAOqD,MAAQjD,EAAKa,OACzDsC,OAA2BD,IAAlBtD,EAAOuD,OAAuBvD,EAAOuD,OAAS,EAE3DnD,EAAOA,EAAKoD,MAAMD,EAAQA,EAASF,OAE/BI,EAAQ/F,EACTgG,OAAON,EAAU,aACjB3D,OAAO,SACPkE,KAAK,QAAS,wBAEjB/F,EAAM,SACNA,EAAM6F,OACFG,EAAQH,EAAMhE,OAAO,SACrBoE,EAAQJ,EAAMhE,OAAO,SACzBmE,EAAMnE,OAAO,MACVqE,UAAU,MACV1D,KAAK3B,GACLsF,QACAtE,OAAO,MACPZ,KAAMmF,GAAQA,OAKbC,EAJOJ,EAAMC,UAAU,MACxB1D,KAAKA,GACL2D,QACAtE,OAAO,MACOqE,UAAU,MACxB1D,KAAM8D,GAAQf,EAAQN,IAAKmB,GAAQE,EAAIF,GAAOE,EAAIF,GAAK5C,MAAQ,KAC/D2C,QACAtE,OAAO,MACPZ,KAAMsF,GAAQA,GAEjBvG,EAAM,eACNA,EAAMqG,GAGNR,EAAMW,MAAM,QACA,SAEZX,EAAMK,UAAU,MAAMM,MAAM,YACZ,2BACI,gBAiCtB1G,EAAS2G,SAAW,SAAUvF,EAAMkB,GAClCA,EAASA,GAAU,OAEfC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAAS,GAE7B8C,EAAWpD,EAAOoD,UAAY,KAE9BK,EAAQ/F,EACTgG,OAAON,EAAU,YACjB3D,OAAO,SACPkE,KAAK,QAAS,wBAGbO,EADQT,EAAMhE,OAAO,SACTqE,UAAU,MACvB1D,KAAK,IAAMH,EAAK4C,IAAKmB,KAAW/D,KAAM+D,EAAK5D,KAAMA,EAAK4D,GAAO5D,EAAK4D,GAAK5C,MAAQ,OAC/E2C,QACAtE,OAAO,MACVyE,EAAIzE,OAAO,MACRZ,KAAMiE,GAAMA,EAAE7C,MACjBiE,EAAIzE,OAAO,MACRZ,KAAMiE,GAAMA,EAAE1C,MAGjBqD,EAAMW,MAAM,QACA,SAEZX,EAAMK,UAAU,MAAMM,MAAM,YACZ,2BACI,gBAqDtB1G,EAAS4G,SAAW,SAAUxF,EAAMkB,EAAS,QACvCC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpBiE,EAAO,SACEvE,EAAOwE,SAAWvE,EAAK,WACvBD,EAAOyE,SAAWxE,EAAK,SACzBD,EAAO0E,OAASzE,EAAK,SACrBD,EAAO2E,OAAS1E,EAAK,SACrBD,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,WACjB7E,EAAO8E,QAAU,YACf9E,EAAOoD,UAAY,MAG7B2B,EAAU/B,EAAGgC,MAAMC,UAAUC,gBAAgB,CAAC,EAAGX,EAAKK,MAAQL,EAAKO,QAAS,IAC5EK,EAAUnC,EAAGgC,MAAMI,SAASC,MAAM,CAACd,EAAKM,OAASN,EAAKO,OAAQ,IAC9DQ,EAAStC,EAAGuC,IAAIC,OAAOR,MAAMD,GAASU,OAAO,UAC7CC,EAAS1C,EAAGuC,IAAIC,OAAOR,MAAMG,GAASM,OAAO,QACjDV,EAAQY,OAAOvF,EAAKyC,KAAI,SAAUC,UACzBA,EAAEyB,EAAKG,OAAOtD,UAEvB+D,EAAQQ,OAAO3C,EAAG4C,OAAOxF,GAAM,SAAU0C,UAChC+C,SAAS/C,EAAEyB,EAAKI,OAAOvD,eAG5BmE,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,YAAY3D,OAAO,OACzDkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QAInBiB,EAAKP,EAAI9F,OAAO,KACjBkE,KAAK,QAAS,UACdA,KAAK,YAAa,aAAeY,EAAKO,OAAS,KAAOP,EAAKM,OAASN,EAAKO,QAAU,KACnFiB,KAAKT,GACJU,EAAKT,EAAI9F,OAAO,KACjBkE,KAAK,QAAS,UACdA,KAAK,YAAa,aAAeY,EAAKO,OAAS,OAC/CiB,KAAKL,GACJO,EAAMV,EAAIzB,UAAU,QACrB1D,KAAKA,GACL2D,QACAtE,OAAO,QACPkE,KAAK,YAAa,aAAeY,EAAKO,OAApB,OAClBnB,KAAK,QAAS,OACdA,KAAK,KAAK,SAAUb,UACZiC,EAAQjC,EAAEyB,EAAKG,OAAOtD,UAE9BuC,KAAK,QAASoB,EAAQmB,aACtBvC,KAAK,KAAK,SAAUb,UACZqC,EAAQrC,EAAEyB,EAAKI,OAAOvD,UAE9BuC,KAAK,UAAU,SAAUb,UACjByB,EAAKM,OAASM,EAAQU,SAAS/C,EAAEyB,EAAKI,OAAOvD,QAAUmD,EAAKO,UASvEgB,EAAGhC,UAAU,QACVH,KAAK,KAAM,SACXA,KAAK,IAAK,IACVA,KAAK,IAAK,GACVA,KAAK,YAAa,cAClBS,MAAM,cAAe,SACxB0B,EAAGrG,OAAO,QACPkE,KAAK,QAAS,SACd9E,KAAK0F,EAAKC,SACVJ,MAAM,cAAe,UACrBT,KAAK,YAAa,cAAiBY,EAAKK,MAAQL,EAAKO,QAAU,EAAK,KAAOP,EAAKO,OAAS,GAAK,KACjGkB,EAAGvG,OAAO,QACPkE,KAAK,QAAS,SACd9E,KAAK0F,EAAKE,SACVL,MAAM,cAAe,UACrBT,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAKY,EAAKM,OAAS,GAC7BlB,KAAK,IAAK,GAAKY,EAAKO,OAAS,KAGhCmB,EAAItC,KAAK,MACC,cAEV4B,EAAIzB,UAAU,SAASH,KAAK,QAChB,aACF,yBACW,eAErB4B,EAAIzB,UAAU,QAAQH,KAAK,QACf,YACF,oBACK,oBACE,gBAwCnBjG,EAASyI,SAAW,SAAUrH,EAAMkB,EAAS,QACvCC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpBiE,EAAO,OACAvE,EAAOoG,OAASnG,EAAK,QACtBD,EAAOwC,MAAQvC,EAAK,SACnBD,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,WACjB7E,EAAO8E,QAAU,QACnB9E,EAAOqG,MAAQ,aACXrG,EAAOoD,UAAY,MAG7BkD,EAASC,KAAKC,IAAIjC,EAAKK,MAAOL,EAAKM,QAAU,EAAIN,EAAKO,OACtDuB,EAAOE,KAAKE,IAAIF,KAAKC,IAAIF,EAAS,GAAI/B,EAAK8B,MAAO,GAClDK,EAAQ1D,EAAGgC,MAAM2B,aAEjBC,EAAM5D,EAAGuC,IAAIqB,MACdC,YAAYP,GACZQ,YAAYT,GAEXU,EAAM/D,EAAGgE,OAAOD,MAEjB3F,OAAM,SAAU0B,UACRA,EAAEyB,EAAK/B,MAAMpB,SAGpBmE,EAAM7H,EACPgG,OAAOa,EAAKnB,SAAU,YACtB3D,OAAO,OACPkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QACpBpF,OAAO,KACPkE,KAAK,YAAa,aAAeY,EAAKK,MAAQ,EAAI,IAAML,EAAKM,OAAS,EAAI,KAEzEoC,EAAI1B,EAAIzB,UAAU,QACnB1D,KAAK2G,EAAI3G,IACT2D,QACAtE,OAAO,KACPkE,KAAK,QAAS,OACbH,EAAQyD,EAAExH,OAAO,QAClBkE,KAAK,IAAKiD,GACVjD,KAAK,QAAQ,SAAUb,EAAG9B,UAClB0F,EAAM1F,MAENiG,EAAExH,OAAO,QACjBkE,KAAK,QAAS,SACdA,KAAK,aAAa,SAAUb,SACpB,aAAe8D,EAAIM,SAASpE,GAAK,OAEzCa,KAAK,KAAM,SACXA,KAAK,cAAe,UACpB9E,MAAK,SAAUiE,UACPA,EAAE1C,KAAKmE,EAAK6B,OAAOhF,SAI9BoC,EAAMG,KAAK,QACC,YAGZ4B,EAAIzB,UAAU,QAAQH,KAAK,QACf,YACF,oBACK,qBACE,gBA+CnBjG,EAASyJ,YAAc,SAAUrI,EAAMkB,EAAS,QAC1CC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpBiE,EAAO,SACEvE,EAAOwE,SAAWvE,EAAK,IAAM,YAC7BD,EAAOyE,SAAWxE,EAAK,IAAM,YAC7BD,EAAOoH,SAAWnH,EAAK,IAAM,UAC/BD,EAAO0E,OAASzE,EAAK,SACrBD,EAAO2E,OAAS1E,EAAK,SACrBD,EAAOqH,OAASpH,EAAK,IAAM,QAC3BD,EAAOsH,OAAS,QAChBtH,EAAOuH,OAAS,SAChBvH,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,aACf7E,EAAOwH,UAAY,YACnBxH,EAAOyH,UAAY,YACnBzH,EAAOoD,UAAY,MAE7BsE,EAAW1E,EAAG4C,OAAOxF,GAAM,SAAU0C,UAChC+C,SAAS/C,EAAEyB,EAAKG,OAAOtD,UAE5BuG,EAAW3E,EAAG4C,OAAOxF,GAAM,SAAU0C,UAChC+C,SAAS/C,EAAEyB,EAAKI,OAAOvD,UAE5BwG,EAAW5E,EAAG4C,OAAOxF,GAAM,SAAU0C,UAChC+C,SAAS/C,EAAEyB,EAAK8C,OAASvE,EAAEyB,EAAK8C,OAAOjG,MAAQmD,EAAK8C,UAEzDtC,EAAU/B,EAAGgC,MAAMI,SAASC,MAAM,CAACd,EAAKiD,SAAUjD,EAAKK,MAAQL,EAAKiD,WAAW7B,OAAO+B,GACtFvC,EAAUnC,EAAGgC,MAAMI,SAASC,MAAM,CAACd,EAAKM,OAASN,EAAKkD,SAAUlD,EAAKkD,WAAW9B,OAAOgC,GACvFE,EAAU7E,EAAGgC,MAAMI,SAASC,MAAM,CAACd,EAAK+C,MAAO/C,EAAKgD,QAAQ5B,OAAOiC,GACnEtC,EAAStC,EAAGuC,IAAIC,OAAOR,MAAMD,GAC7BW,EAAS1C,EAAGuC,IAAIC,OAAOR,MAAMG,GAASM,OAAO,QAE7CF,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,eAAe3D,OAAO,OAC5DkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QACnBiD,EAASvC,EAAIzB,UAAU,UACxB1D,KAAKA,GACL2D,QACAtE,OAAO,UACPkE,KAAK,QAAS,QACdA,KAAK,MAAM,SAAUb,UACbiC,EAAQjC,EAAEyB,EAAKG,OAAOtD,UAE9BuC,KAAK,MAAM,SAAUb,UACbqC,EAAQrC,EAAEyB,EAAKI,OAAOvD,UAE9BuC,KAAK,KAAK,SAAUb,UACZ+E,EAAQ/E,EAAEyB,EAAK8C,OAASvE,EAAEyB,EAAK8C,OAAOjG,MAAQmD,EAAK8C,UAE3D1D,KAAK,UAAW,IAChBlE,OAAO,SACPZ,MAAK,SAAUiE,UACPA,EAAEyB,EAAK6C,SAAWtE,EAAEyB,EAAK6C,SAAShG,MAAQmD,EAAK6C,WAEtDtB,EAAKP,EAAI9F,OAAO,KACjBkE,KAAK,QAAS,UACdA,KAAK,YAAa,gBAAkBY,EAAKM,OAASN,EAAKkD,UAAY,KACnE1B,KAAKT,GACJU,EAAKT,EAAI9F,OAAO,KACjBkE,KAAK,QAAS,UACdA,KAAK,YAAa,aAAeY,EAAKiD,SAAW,OACjDzB,KAAKL,GACRI,EAAGrG,OAAO,QACPkE,KAAK,QAAS,SACd9E,KAAK0F,EAAKC,SACVJ,MAAM,cAAe,UACrBT,KAAK,YAAa,cAAiBY,EAAKK,MAAQL,EAAKiD,UAAY,EAAK,KAAOjD,EAAKkD,SAAW,GAAK,KACrGzB,EAAGvG,OAAO,QACPkE,KAAK,QAAS,SACd9E,KAAK0F,EAAKE,SACVL,MAAM,cAAe,UACrBT,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAKY,EAAKM,OAAS,GAC7BlB,KAAK,IAAK,GAAKY,EAAKiD,SAAW,KAGlC1B,EAAGnC,KAAK,QACI,aACF,SAEVqC,EAAGrC,KAAK,QACI,aACF,SAGVmE,EAAOnE,KAAK,QACA,sBACM,WACR,oBACG,KAGb4B,EAAIzB,UAAU,QAAQH,KAAK,QACf,YACF,oBACK,oBACE,gBAoDnBjG,EAASqK,WAAa,SAAUjJ,EAAMkB,EAAS,QACzCD,EAASjB,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqC,MAAMjB,EAAMkB,GAAUlB,EAErEkG,EAAQhC,EAAGgC,MAAMI,SAClBO,OAAO3C,EAAG4C,OAAO7F,EAAM4B,MAAQmB,GAAMkF,WAAWlF,EAAE1B,SAClDiE,MAAM,CAAC,EAAG,WAEPiB,EAAStG,EAAOsG,SAAYxD,GAAMA,EAAE1B,MAAQ4D,EAAMlC,EAAE1B,OAAS,EAAI0B,EAAEsD,MAAMnF,QACzEgH,EAASjI,EAAOiI,SAAW,IAC3BC,EAAWlI,EAAOkI,UAAY,GAC9BtD,EAAQ5E,EAAO4E,OAAS,IACxBC,EAAS7E,EAAO6E,QAAU,IAC1BuB,EAAQpG,EAAOoG,QAAS,EACxBhD,EAAWpD,EAAOoD,UAAY,SAEhCmC,EAAM7H,EAASgG,OAAON,EAAU,cAAc3D,OAAO,OACtDkE,KAAK,QAASiB,GACdjB,KAAK,SAAUkB,GACdsD,EAAO5C,EAAIzB,UAAU,SACtB1D,KAAKL,EAAM8B,OACXkC,QACAtE,OAAO,QACPkE,KAAK,QAAS,QACbhB,EAAO4C,EAAIzB,UAAU,SACtB1D,KAAKL,EAAM4B,OACXoC,QACAtE,OAAO,KACNqI,EAASnF,EAAKlD,OAAO,UACtBkE,KAAK,QAAS,QACdA,KAAK,IAAK2C,GACTzH,EAAO8D,EAAKlD,OAAO,QACpBZ,MAAK,SAAUiE,UACPA,EAAEsD,GAAS,YAEnBzC,KAAK,QAAS,QACbyE,EAAQpF,EAAGgE,OAAOoB,QACnBH,OAAOA,GACPI,aAAaH,GACb1F,KAAK,CAACoC,EAAOC,IACblD,MAAM5B,EAAM4B,OACZE,MAAM9B,EAAM8B,OACZyG,QACHF,EAAMG,GAAG,QAAQ,WACfJ,EAAKxE,KAAK,MAAM,SAAUb,UACfA,EAAE0F,OAAOC,KAEjB9E,KAAK,MAAM,SAAUb,UACbA,EAAE0F,OAAOE,KAEjB/E,KAAK,MAAM,SAAUb,UACbA,EAAE6F,OAAOF,KAEjB9E,KAAK,MAAM,SAAUb,UACbA,EAAE6F,OAAOD,KAEpB7J,EAAK8E,KAAK,KAAK,SAAUb,UACdA,EAAE2F,KAEV9E,KAAK,KAAK,SAAUb,UACZA,EAAE4F,KAEbZ,EAAOnE,KAAK,MAAM,SAAUb,UACjBA,EAAE2F,KAEV9E,KAAK,MAAM,SAAUb,UACbA,EAAE4F,QAGf/F,EAAKoD,KAAKqC,EAAMQ,MAGhBT,EAAKxE,KAAK,QACE,YAEZmE,EAAOnE,KAAK,QACA,uBACM,WACR,oBACG,IAEb9E,EAAK8E,KAAK,aACK,oBACE,gBAsDnBjG,EAASmL,OAAS,SAAU/J,EAAMkB,GAChCA,EAASA,GAAU,OAEfD,EAASjB,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqC,MAAMjB,EAAMkB,GAAUlB,EAErEyF,EAAO,OACAvE,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,YACjB7E,EAAO8E,QAAU,YACf9E,EAAOoD,UAAY,MAG7BzB,EAAQ5B,EAAM4B,MACdE,EAAQ9B,EAAM8B,UACb,IAAIb,EAAI,EAAGA,EAAIa,EAAMZ,OAAQD,IAChCa,EAAMb,GAAGI,MAAQ,MAEfyH,EAAS7F,EAAG6F,SACbrG,KAAK,CAAC+B,EAAKK,MAAOL,EAAKM,SACvBiE,UAAU,IACVC,YAAY,IACZpH,MAAMA,GACNE,MAAMA,GACNmF,OAAO,IACNgC,EAAOH,EAAOV,OACdzB,EAAQ1D,EAAGgC,MAAM2B,aACjBpB,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,UAAU3D,OAAO,OACvDkE,KAAK,QAASY,EAAKK,MAAsB,EAAdL,EAAKO,QAChCnB,KAAK,SAAUY,EAAKM,OAAuB,EAAdN,EAAKO,QAClCrF,OAAO,KACPkE,KAAK,YAAa,aAAeY,EAAKO,OAAS,IAAMP,EAAKO,OAAS,KAClEqD,EAAO5C,EAAIzB,UAAU,SACtB1D,KAAKyB,GACLkC,QACAtE,OAAO,QACPkE,KAAK,QAAS,QACdA,KAAK,IAAKqF,GACVrF,KAAK,gBAAgB,SAAUb,UACvByD,KAAKE,IAAI,EAAG3D,EAAEmG,OAEtBC,MAAK,SAAUC,EAAGC,UACVA,EAAEH,GAAKE,EAAEF,MAEhBtG,EAAO4C,EAAIzB,UAAU,SACtB1D,KAAKuB,GACLoC,QACAtE,OAAO,KACPkE,KAAK,QAAS,QACdA,KAAK,aAAa,SAAUb,SACpB,aAAeA,EAAE2F,EAAI,IAAM3F,EAAE4F,EAAI,OAEzC3C,KAAK/C,EAAGqG,SAAST,OACfU,QAAO,SAAUxG,UACTA,KAERyF,GAAG,aAAa,gBACVgB,WAAWC,YAAYC,SAE7BlB,GAAG,iBAqCUzF,GAChBE,EAAGU,OAAO+F,MAAM9F,KAAK,YAAa,aAAeb,EAAE2F,EAAI,KAAO3F,EAAE4F,EAAInC,KAAKE,IAAI,EAAGF,KAAKC,IAAIjC,EAAKM,OAAS/B,EAAEmG,GAAIjG,EAAG0G,MAAMhB,KAAO,KAC7HG,EAAOc,WACPxB,EAAKxE,KAAK,IAAKqF,OAtCjBrG,EAAKlD,OAAO,QACTkE,KAAK,SAAS,SAAUb,UAChBA,EAAE8G,MAEVjG,KAAK,UAAU,SAAUb,UACjBA,EAAEmG,MAEVtF,KAAK,QAAQ,SAAUb,UACf4D,EAAM5D,EAAEsD,UAEhBzC,KAAK,UAAW,IACnBhB,EAAKlD,OAAO,QACTkE,KAAK,KAAM,GACXA,KAAK,KAAK,SAAUb,UACZA,EAAEmG,GAAK,KAEftF,KAAK,KAAM,SACXA,KAAK,cAAe,OACpBA,KAAK,YAAa,MAClB9E,MAAK,SAAUiE,UACPA,EAAEsD,SAEVyD,QAAO,SAAU/G,UACTA,EAAE2F,EAAIlE,EAAKK,MAAQ,KAE3BjB,KAAK,IAAK,EAAIkF,EAAOC,aACrBnF,KAAK,cAAe,SAGvBwE,EAAKxE,KAAK,MACA,cACE,eACC,MAsDfjG,EAASoM,UAAY,SAAUhL,EAAMkB,GACnCA,EAASA,GAAU,OAEf+B,EAAQjD,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqE,KAAKjD,EAAMkB,GAAUlB,EAEnEyF,EAAO,UACGvE,EAAO+J,UAAY,UACtB/J,EAAOgK,OAAS,UAChBhK,EAAOiK,OAAS,WACfjK,EAAOsG,QAAU,WACftG,EAAOoD,UAAY,MAG7B8G,EAAclH,EAAGgE,OAAOjF,OACzBS,KAAK,CAAC+B,EAAKyF,MAAOzF,EAAK0F,QACvBE,YAAW,SAAUhB,EAAGC,UACfD,EAAEhH,SAAWiH,EAAEjH,OAAS,EAAI,GAAKgH,EAAEc,SAE3CtI,EAAQuI,EAAYvI,MAAMI,GAC1BF,EAAQqI,EAAYrI,MAAMF,GAC1ByI,EAAWpH,EAAGuC,IAAI6E,SAASC,SAC5BC,YAAW,SAAUxH,SACb,CAACA,EAAE4F,EAAG5F,EAAE2F,EAAI,IAAMlC,KAAKgE,OAE9BhF,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,aAAa3D,OAAO,OAC1DkE,KAAK,QAASY,EAAKwF,UACnBpG,KAAK,SAAUY,EAAKwF,UACpBtK,OAAO,KACPkE,KAAK,YAAa,aAAeY,EAAKwF,SAAW,EAAI,IAAMxF,EAAKwF,SAAW,EAAI,KAC9E5B,EAAO5C,EAAIzB,UAAU,SACtB1D,KAAKyB,GACLkC,QACAtE,OAAO,QACPkE,KAAK,QAAS,QACdA,KAAK,IAAKyG,GACTzH,EAAO4C,EAAIzB,UAAU,SACtB1D,KAAKuB,GACLoC,QACAtE,OAAO,KACPkE,KAAK,QAAS,QACdA,KAAK,aAAa,SAAUb,SACpB,WAAaA,EAAE2F,EAAI,IAAM,eAAiB3F,EAAE4F,EAAI,OAEvDZ,EAASnF,EAAKlD,OAAO,UACtBkE,KAAK,IAAKY,EAAK+B,QACdzH,EAAO8D,EAAKlD,OAAO,QACpBkE,KAAK,KAAM,SACXA,KAAK,eAAe,SAAUb,UACtBA,EAAE2F,EAAI,IAAM,QAAU,SAE9B9E,KAAK,aAAa,SAAUb,UACpBA,EAAE2F,EAAI,IAAM,eAAiB,+BAErC5J,MAAK,SAAUiE,UACPA,EAAE0H,QAIbrC,EAAKxE,KAAK,MACA,cACE,yBACM,UAElBmE,EAAOnE,KAAK,MACF,iBACE,2BACM,gBACL,IAEb9E,EAAK8E,KAAK,aACK,qBACE,gBA+CnBjG,EAAS+M,WAAa,SAAU3L,EAAMkB,EAAS,QACzC+B,EAAQjD,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqE,KAAKjD,EAAMkB,GAAUlB,EAEnEyF,EAAO,OACAvE,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,WACjB7E,EAAO8E,QAAU,WACjB9E,EAAOsG,QAAU,WACftG,EAAOoD,UAAY,MAG7BsH,EAAU1H,EAAGgE,OAAO0D,UACrBlI,KAAK,CAAC+B,EAAKM,OAAQN,EAAKK,MAAQL,EAAKO,SACpCsF,EAAWpH,EAAGuC,IAAI6E,WACnBE,YAAW,SAAUxH,SACb,CAACA,EAAE4F,EAAG5F,EAAE2F,MAEflD,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,cAAc3D,OAAO,OAC3DkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QACpBpF,OAAO,KACPkE,KAAK,YAAa,mBACjBhC,EAAQ+I,EAAQ/I,MAAMI,GACtBF,EAAQ6I,EAAQ7I,MAAMF,GACtBwG,EAAO5C,EAAIzB,UAAU,SACtB1D,KAAKyB,GACLkC,QAAQtE,OAAO,QACfkE,KAAK,QAAS,QACdA,KAAK,IAAKyG,GACTzH,EAAO4C,EAAIzB,UAAU,SACtB1D,KAAKuB,GACLoC,QAAQtE,OAAO,KACfkE,KAAK,QAAS,QACdA,KAAK,aAAa,SAAUb,SACpB,aAAeA,EAAE4F,EAAI,IAAM5F,EAAE2F,EAAI,OAExCX,EAASnF,EAAKlD,OAAO,UACtBkE,KAAK,IAAKY,EAAK+B,QACdzH,EAAO8D,EAAKlD,OAAO,QACpBkE,KAAK,MAAM,SAAUb,UACZA,EAAEX,QAAUW,EAAEL,UAAa,EAAI,KAExCkB,KAAK,KAAM,GACXS,MAAM,eAAe,SAAUtB,UACtBA,EAAEX,QAAUW,EAAEL,SAAY,MAAQ,WAE3C5D,MAAK,SAAUiE,UACPA,EAAE0H,QAIbrC,EAAKxE,KAAK,MACA,cACE,yBACM,UAElBmE,EAAOnE,KAAK,MACF,iBACE,2BACM,gBACL,IAEb9E,EAAK8E,KAAK,aACK,qBACE,gBAwCnBjG,EAASiN,SAAW,SAAU7L,EAAMkB,EAAS,QACvC+B,EAAQjD,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqE,KAAKjD,EAAMkB,GAAUlB,EAEnEyF,EAAO,OACAvE,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,WACjB7E,EAAO8E,QAAU,aACf9E,EAAOoD,UAAY,MAG7BkD,EAASC,KAAKC,IAAIjC,EAAKK,MAAOL,EAAKM,QAAU,EAAIN,EAAKO,OACtD2D,EAAIzF,EAAGgC,MAAMI,SAASC,MAAM,CAAC,EAAG,EAAIkB,KAAKgE,KACzC7B,EAAI1F,EAAGgC,MAAM4F,OAAOvF,MAAM,CAAC,EAAGiB,IAC9BI,EAAQ1D,EAAGgC,MAAM2B,aACjBpB,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,YAAY3D,OAAO,OACzDkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QACpBpF,OAAO,KACPkE,KAAK,YAAa,aAAeY,EAAKK,MAAQ,EAAI,IAAML,EAAKM,OAAS,EAAI,KACzE+B,EAAM5D,EAAGuC,IAAIqB,MACdiE,YAAW,SAAU/H,UACbyD,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAID,KAAKgE,GAAI9B,EAAE3F,EAAE2F,QAE9CqC,UAAS,SAAUhI,UACXyD,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAID,KAAKgE,GAAI9B,EAAE3F,EAAE2F,EAAI3F,EAAE8G,SAEpD9C,aAAY,SAAUhE,UACdyD,KAAKE,IAAI,EAAGiC,EAAE5F,EAAE4F,OAExB7B,aAAY,SAAU/D,UACdyD,KAAKE,IAAI,EAAGiC,EAAE5F,EAAE4F,EAAI5F,EAAEmG,QAM7BtH,EAJYqB,EAAGgE,OAAO+D,YACvB3J,OAAM,SAAU0B,UACRA,EAAE1B,SAESO,MAAMI,GACxBiH,EAAOzD,EAAIzB,UAAU,QACtB1D,KAAKuB,GACLoC,QACAtE,OAAO,QACPkE,KAAK,IAAKiD,GACVjD,KAAK,QAAS,OACdS,MAAM,QAAQ,SAAUtB,UAChB4D,GAAO5D,EAAEL,SAAWK,EAAIA,EAAEX,QAAQqI,SAE1CjC,GAAG,QAASyC,GACXnM,EAAO0G,EAAIzB,UAAU,QACtB1D,KAAKuB,GACLoC,QACAtE,OAAO,QACPkE,KAAK,aAAa,SAAUb,SAEpB,WAD0B,IAApB2F,EAAE3F,EAAE2F,EAAI3F,EAAE8G,GAAK,GAAWrD,KAAKgE,GAAK,IACrB,eAAiB7B,EAAE5F,EAAE4F,GAAK,OAEvD/E,KAAK,KAAM,QACXA,KAAK,KAAM,SACX9E,MAAK,SAAUiE,UACPA,EAAE0H,QAEVjC,GAAG,QAASyC,YAYNA,EAAMlI,GACbkG,EAAKiC,aACFC,SAAS,KACTC,UAAU,aAuBGrI,OACZsI,EAAKpI,EAAGqI,YAAY5C,EAAE9C,SAAU,CAAC7C,EAAE2F,EAAG3F,EAAE2F,EAAI3F,EAAE8G,KAChD0B,EAAKtI,EAAGqI,YAAY3C,EAAE/C,SAAU,CAAC7C,EAAE4F,EAAG6C,EAASzI,KAC/C0I,EAAKxI,EAAGqI,YAAY3C,EAAErD,QAAS,CAACvC,EAAE4F,EAAI,GAAK,EAAGpC,WAExClG,GACEqL,IACNhD,EAAE9C,OAAOyF,EAAGK,IACZ/C,EAAE/C,OAAO2F,EAAGG,IAAIpG,MAAMmG,EAAGC,IAClB7E,EAAIxG,IAhCGsL,CAAS5I,IAC3BjE,EAAKuF,MAAM,cAAc,SAAUuH,UAExBC,EAAW9I,EAAG6I,GAAK,KAAO3I,EAAGU,OAAO+F,MAAMrF,MAAM,iBAExD6G,aACAC,SAAS,KACTC,UAAU,aAAa,SAAUrI,UACzB,iBAEE,WAD0B,IAApB2F,EAAE3F,EAAE2F,EAAI3F,EAAE8G,GAAK,GAAWrD,KAAKgE,GAAK,IACrB,eAAiB7B,EAAE5F,EAAE4F,GAAK,QAGzDmD,KAAK,OAAO,SAAUF,GAErB3I,EAAGU,OAAO+F,MAAMrF,MAAM,aAAcwH,EAAW9I,EAAG6I,GAAK,KAAO,sBAI3DJ,EAASzI,UACTA,EAAEL,SAAW8D,KAAKE,IAAIqF,MAAMvF,KAAMzD,EAAEL,SAASI,IAAI0I,IAAazI,EAAE4F,EAAI5F,EAAEmG,YAiBtE2C,EAAWG,EAAGC,UACjBD,IAAMC,KAGND,EAAEtJ,UACGsJ,EAAEtJ,SAASwJ,KAAMnJ,GAAM8I,EAAW9I,EAAGkJ,IAtDhDhD,EAAKrF,KAAK,QACE,sBACG,YAEf9E,EAAK8E,KAAK,aACK,qBACE,gBA4GnBjG,EAASwO,WAAa,SAAUpN,EAAMkB,EAAS,QACzC+B,EAAQjD,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqE,KAAKjD,EAAMkB,GAAUlB,EAEnEyF,EAAO,OACAvE,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,aACf7E,EAAO+J,UAAY,aACnB/J,EAAOoD,UAAY,MAG7B+I,EAAI5H,EAAKK,MACXwH,EAAI7H,EAAKM,OACTwH,EAAI9H,EAAKwF,SACTtB,EAAIzF,EAAGgC,MAAMI,SAASC,MAAM,CAAC,EAAGgH,IAChC3D,EAAI1F,EAAGgC,MAAMI,SAASC,MAAM,CAAC,EAAGgH,IAE9BC,EAAOtJ,EAAGgE,OAAOsF,OAClB9J,KAAK,CAAC6J,EAAGA,IACTjL,OAAM,SAAU0B,UACRA,EAAE1B,SAGTuB,EAAOZ,EACPJ,EAAQ2K,EAAK3K,MAAMI,GAEnBwK,EAAM7O,EAASgG,OAAOa,EAAKnB,SAAU,cAAc3D,OAAO,OAC3DkE,KAAK,QAASwI,GACdxI,KAAK,SAAUyI,GACf3M,OAAO,KACPkE,KAAK,YAAa,cAAgBwI,EAAIE,GAAK,EAAI,KAAOD,EAAIC,GAAK,EAAI,cAgE7DG,EAAK1J,EAAG9B,OACXyL,EAAIJ,EAAIvJ,EAAEuJ,EAAI,EAClB5D,EAAE9C,OAAO,CAAC7C,EAAE2F,EAAI3F,EAAEuJ,EAAGvJ,EAAE2F,EAAI3F,EAAEuJ,IAC7B3D,EAAE/C,OAAO,CAAC7C,EAAE4F,EAAI5F,EAAEuJ,EAAGvJ,EAAE4F,EAAI5F,EAAEuJ,QACzBZ,EAAIc,EAAItB,aACTC,SAASlI,EAAG0G,MAAMgD,OAAS,IAAO,KACrCjB,EAAE3H,UAAU,UACTH,KAAK,MAAM,SAAUb,UACb2F,EAAE3F,EAAE2F,MAEZ9E,KAAK,MAAM,SAAUb,UACb4F,EAAE5F,EAAE4F,MAEZ/E,KAAK,KAAK,SAAUb,UACZ2J,EAAI3J,EAAEuJ,KAEjBZ,EAAE3H,UAAU,QACTH,KAAK,KAAK,SAAUb,UACZ2F,EAAE3F,EAAE2F,MAEZ9E,KAAK,KAAK,SAAUb,UACZ4F,EAAE5F,EAAE4F,MAEZtE,MAAM,WAAW,SAAUtB,UACnB2J,EAAI3J,EAAEuJ,EAAI,GAAK,EAAI,KAE9BrJ,EAAG0G,MAAMiD,kBAxFXJ,EAAIzI,UAAU,UACX1D,KAAKuB,GACLoC,QACAtE,OAAO,UACPkE,KAAK,SAAS,SAAUb,UAChBA,EAAEL,SAAW,SAAW,WAEhCkB,KAAK,MAAM,SAAUb,UACbA,EAAE2F,KAEV9E,KAAK,MAAM,SAAUb,UACbA,EAAE4F,KAEV/E,KAAK,KAAK,SAAUb,UACZA,EAAEuJ,KAWV9D,GAAG,SAAS,SAAUzF,UACd0J,EAAK7J,IAASG,EAAIf,EAAOe,MAGpCyJ,EAAIzI,UAAU,QACX1D,KAAKuB,GACLoC,QACAtE,OAAO,QACPkE,KAAK,SAAS,SAAUb,UAChBA,EAAEL,SAAW,SAAW,WAEhCkB,KAAK,KAAK,SAAUb,UACZA,EAAE2F,KAEV9E,KAAK,KAAK,SAAUb,UACZA,EAAE4F,KAGVtE,MAAM,WAAW,SAAUtB,UACnBA,EAAEuJ,EAAI,GAAK,EAAI,KAEvBxN,MAAK,SAAUiE,UACPA,EAAE0H,QAIV7G,KAAK,cAAe,SACpBsH,aACAC,SAAS,KACTvH,KAAK,aAAa,SAAUb,SACpB,eAAiBA,EAAE2F,EAAI,KAAO3F,EAAE4F,EAAI,OAG/C1F,EAAGU,OAAOkJ,QAAQrE,GAAG,SAAS,WAC5BiE,EAAKzK,OAoETrE,EAASmP,QAAU,SAAU/N,EAAMkB,EAAS,QACtC+B,EAAQjD,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqE,KAAKjD,EAAMkB,GAAUlB,EAEnE8F,EAAQ5E,EAAO4E,OAAS,IACxBC,EAAS7E,EAAO6E,QAAU,IAC1BiI,EAAQ9M,EAAO8M,QAAS,EACxBpG,EAAQ1G,EAAO0G,OAAS1D,EAAGgC,MAAM+H,cACjCjI,EAAS9E,EAAO8E,QAAU,CAAEkI,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC/D/J,EAAWpD,EAAOoD,UAAY,KAElCwB,EAAQA,EAAQE,EAAOqI,KAAOrI,EAAOmI,MACrCpI,EAASA,EAASC,EAAOkI,IAAMlI,EAAOoI,WAKlCL,EAAU7J,EAAGgE,OAAO6F,UACrBrK,KAAK,CAACoC,EAAOC,IACbuI,QAAO,GACPhM,MAAM0L,EANOhK,GAAM,EACPA,GAAMA,EAAE1B,OAOb1D,EAASgG,OAAON,EAAU,WACjCgB,MAAM,WAAY,YAClBA,MAAM,QAASQ,EAAQ,MACvBR,MAAM,SAAUS,EAAS,MACzBT,MAAM,OAAQU,EAAOqI,KAAO,MAC5B/I,MAAM,MAAOU,EAAOkI,IAAM,MAiBd9L,MAAMa,GAAM+B,UAAU,SAClC1D,KAAKyM,EAAQlL,OACboC,QACAtE,OAAO,OACPkE,KAAK,QAAS,QACdoC,sBAnBI3B,MAAM,QAAQ,SAAUtB,UAClBA,EAAE2F,EAAI,QAEdrE,MAAM,OAAO,SAAUtB,UACfA,EAAE4F,EAAI,QAEdtE,MAAM,SAAS,SAAUtB,UACjByD,KAAKE,IAAI,EAAG3D,EAAE8G,GAAK,GAAK,QAEhCxF,MAAM,UAAU,SAAUtB,UAClByD,KAAKE,IAAI,EAAG3D,EAAEmG,GAAK,GAAK,WAUlC7E,MAAM,aAAetB,GAAMA,EAAEL,SAAWiE,EAAM5D,EAAE0H,MAAQ,MACxD3L,KAAMiE,GAAMA,EAAEL,SAAW,KAAOK,EAAE0H,MAGhCpG,MAAM,gBACO,uBACA,qBACA,oBACH,qBACE,2BACA,gBACH,kBACA,yBACG,SAyCnB1G,EAAS2P,YAAc,SAAUvO,EAAMkB,EAAS,QAgB1CsN,EAfAvL,EAAQjD,EAAKmB,MAAQnB,EAAKuB,QAAW3C,EAASqE,KAAKjD,EAAMkB,GAAUlB,EAEnEyF,EAAO,OACAvE,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,WACjB7E,EAAO8E,QAAU,CAAEkI,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,SACxDnN,EAAO0G,OAAS1D,EAAGgC,MAAM2B,oBACxB3G,EAAOuN,QAAUvK,EAAGuK,OAAO,eACzBvN,EAAOoD,UAAY,MAG7BwB,EAAQL,EAAKK,MAAQL,EAAKO,OAAOqI,KAAO5I,EAAKO,OAAOmI,MACpDpI,EAASN,EAAKM,OAASN,EAAKO,OAAOkI,IAAMzI,EAAKO,OAAOoI,OACrDxG,EAAQnC,EAAKmC,MACb6G,EAAShJ,EAAKgJ,OAGd9E,EAAIzF,EAAGgC,MAAMI,SAASO,OAAO,CAAC,EAAGf,IAAQS,MAAM,CAAC,EAAGT,IACnD8D,EAAI1F,EAAGgC,MAAMI,SAASO,OAAO,CAAC,EAAGd,IAASQ,MAAM,CAAC,EAAGR,IAEpDgI,EAAU7J,EAAGgE,OAAO6F,UACrBpK,UAAS,SAAUK,EAAGmH,UACdA,EAAQ,KAAOnH,EAAEL,YAEzByG,MAAK,SAAUC,EAAGC,UACVD,EAAE/H,MAAQgI,EAAEhI,SAEpBoM,MAAM3I,EAASD,EAAQ,IAAO,EAAI2B,KAAKqE,KAAK,KAC5C6C,OAAM,GAELlI,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,eAAe3D,OAAO,OAC5DkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QACpBT,MAAM,eAAgBG,EAAKO,OAAOqI,KAAO,MACzC/I,MAAM,gBAAiBG,EAAKO,OAAOmI,MAAQ,MAC3CxN,OAAO,KACPkE,KAAK,YAAa,aAAeY,EAAKO,OAAOqI,KAAO,IAAM5I,EAAKO,OAAOkI,IAAM,KAC5E5I,MAAM,kBAAmB,cAExBsJ,EAAcnI,EAAI9F,OAAO,KAC1BkE,KAAK,QAAS,eAEjB+J,EAAYjO,OAAO,QAChBkE,KAAK,KAAMY,EAAKO,OAAOkI,KACvBrJ,KAAK,QAASiB,GACdjB,KAAK,SAAUY,EAAKO,OAAOkI,KAC3BrJ,KAAK,OAAQ,WAEhB+J,EAAYjO,OAAO,QAChBkE,KAAK,IAAK,GACVA,KAAK,IAAK,EAAIY,EAAKO,OAAOkI,KAC1BrJ,KAAK,KAAM,SACXA,KAAK,SAAU,WACfA,KAAK,OAAQ,eAgBZqD,EAAUlE,IACPA,EAAEL,WAGPoK,EAAQlL,MAAM,CAAEc,SAAUK,EAAEL,WAC5BK,EAAEL,SAASkL,QAAS3B,IAClBA,EAAEvD,EAAI3F,EAAE2F,EAAIuD,EAAEvD,EAAI3F,EAAE8G,GACpBoC,EAAEtD,EAAI5F,EAAE4F,EAAIsD,EAAEtD,EAAI5F,EAAEmG,GACpB+C,EAAEpC,IAAM9G,EAAE8G,GACVoC,EAAE/C,IAAMnG,EAAEmG,GACV+C,EAAE7J,OAASW,EACXkE,EAAOgF,gBA4FFnN,EAAKA,GACZA,EAAK8E,KAAK,KAAK,SAAUb,UACd2F,EAAE3F,EAAE2F,GAAK,KAEjB9E,KAAK,KAAK,SAAUb,UACZ4F,EAAE5F,EAAE4F,GAAK,cAIbkF,EAAKA,GACZA,EAAKjK,KAAK,KAAK,SAAUb,UACd2F,EAAE3F,EAAE2F,MAEZ9E,KAAK,KAAK,SAAUb,UACZ4F,EAAE5F,EAAE4F,MAEZ/E,KAAK,SAAS,SAAUb,UAChB2F,EAAE3F,EAAE2F,EAAI3F,EAAE8G,IAAMnB,EAAE3F,EAAE2F,MAE5B9E,KAAK,UAAU,SAAUb,UACjB4F,EAAE5F,EAAE4F,EAAI5F,EAAEmG,IAAMP,EAAE5F,EAAE4F,MAE5B/E,KAAK,QAAQ,SAAUb,UACf4D,EAAM5D,EAAE0H,SAEnBoD,EAAKjK,KAAK,QACE,yBACM,cACL,KAjJG5B,CAAAA,IAChBA,EAAK0G,EAAI1G,EAAK2G,EAAI,EAClB3G,EAAK6H,GAAKhF,EACV7C,EAAKkH,GAAKpE,EACV9C,EAAKkI,MAAQ,GAyBf4D,CAAW9L,GACXiF,EAAOjF,YAGE+L,EAAQhL,GACf4K,EACGxM,MAAM4B,EAAEX,QACRoG,GAAG,QAAS0C,GACZvH,OAAO,QACP7E,cA+GI2L,EAAK1H,UACLA,EAAEX,OACLqI,EAAK1H,EAAEX,QAAU,MAAQW,EAAE0H,KAC3B1H,EAAE0H,KAlHEA,CAAK1H,QAETiL,EAAKxI,EAAIyI,OAAO,IAAK,gBACtB9M,MAAM4B,GACNa,KAAK,QAAS,SAEbsD,EAAI8G,EAAGjK,UAAU,KAClB1D,KAAK0C,EAAEL,UACPsB,QACAtE,OAAO,cAgCDwL,EAAWnI,MACdwK,IAAkBxK,EAAG,OACzBwK,GAAgB,MACZW,EAAKH,EAAQhL,GACfoL,EAAKH,EAAG9C,aAAaC,SAAS,KAC9BiD,EAAKF,EAAGhD,aAAaC,SAAS,KAGhCzC,EAAE9C,OAAO,CAAC7C,EAAE2F,EAAG3F,EAAE2F,EAAI3F,EAAE8G,KACvBlB,EAAE/C,OAAO,CAAC7C,EAAE4F,EAAG5F,EAAE4F,EAAI5F,EAAEmG,KAGvB1D,EAAInB,MAAM,kBAAmB,MAG7BmB,EAAIzB,UAAU,UAAUoF,MAAK,SAAUC,EAAGC,UACjCD,EAAEc,MAAQb,EAAEa,SAIrBgE,EAAGnK,UAAU,QAAQM,MAAM,eAAgB,GAG3C8J,EAAGpK,UAAU,QAAQiC,KAAKlH,GAAMuF,MAAM,eAAgB,GACtD+J,EAAGrK,UAAU,QAAQiC,KAAKlH,GAAMuF,MAAM,eAAgB,GACtD8J,EAAGpK,UAAU,QAAQiC,KAAK6H,GAC1BO,EAAGrK,UAAU,QAAQiC,KAAK6H,GAG1BM,EAAGE,SAASvC,KAAK,OAAO,WACtBtG,EAAInB,MAAM,kBAAmB,cAC7BkJ,GAAgB,YA7DpBrG,EAAE4C,QAAO,SAAU/G,UACRA,EAAEL,YAEV4L,QAAQ,YAAY,GACpB9F,GAAG,QAAS0C,GAEfhE,EAAEnD,UAAU,UACT1D,MAAK,SAAU0C,UACPA,EAAEL,UAAY,CAACK,MAEvBiB,QACAtE,OAAO,QACPkE,KAAK,QAAS,SACdoC,KAAK6H,GAER3G,EAAExH,OAAO,QACNkE,KAAK,QAAS,UACdoC,KAAK6H,GACLnO,OAAO,SACPZ,MAAK,SAAUiE,UACPyK,EAAOzK,EAAE1B,UAGpB6F,EAAExH,OAAO,QACNkE,KAAK,KAAM,SACX9E,MAAK,SAAUiE,UACPA,EAAE0H,QAEVzE,KAAKlH,GAqCDoI,EAnFT6G,CAAQ/L,IA0JVrE,EAAS4Q,SAAW,SAAUxP,EAAMkB,EAAS,QACvCC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpBiE,EAAO,SACEvE,EAAOuO,SAAWtO,EAAK,IAAM,cAC7BD,EAAOwO,SAAWvO,EAAK,IAAM,YAC/BD,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,WACjB7E,EAAOsG,QAAU,QAClBtG,EAAO0G,OAAS,mBACb1G,EAAOyO,UAAY,0BACnBzO,EAAOoD,UAAY,MAG7BkH,EAAatH,EAAG0L,IAAIC,kBACrB3J,MAAM,KACN4J,UAAU,CAACrK,EAAKK,MAAQ,EAAGL,EAAKM,OAAS,IACzCgK,UAAU,IACT7F,EAAOhG,EAAG0L,IAAI1F,OACfsB,WAAWA,GACVwE,EAAY9L,EAAG0L,IAAII,YACnBvJ,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,YAAY3D,OAAO,OACzDkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QAEvBU,EAAI9F,OAAO,QACRyB,MAAM4N,EAAUC,SAChBpL,KAAK,OAAQ,WACbA,KAAK,IAAKqF,GAEbzD,EAAI9F,OAAO,QACRyB,MAAM4N,GACNnL,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,QACrBA,KAAK,iBAAkB,MACvBA,KAAK,IAAKqF,GAEbhG,EAAGlE,KAAKyF,EAAKkK,UAAU,SAAUO,EAAOC,GACtC1J,EAAIyI,OAAO,OAAQ,cAChB9M,MAAMuN,UAAiBQ,EAAOA,EAAMC,QAAQC,OAC5CxL,KAAK,OAAQ,WACbA,KAAK,SAAU,WACfA,KAAK,IAAKqF,GAEbzD,EAAIyI,OAAO,OAAQ,cAChB9M,MAAMuN,OAAcQ,EAAOA,EAAMC,QAAQE,WAAW,SAAUjG,EAAGC,UACzDD,IAAMC,MAEdzF,KAAK,QAAS,YACdA,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,QACrBA,KAAK,IAAKqF,GAEbzD,EAAIzB,UAAU,QACX1D,KAAKA,GACL2D,QAAQtE,OAAO,SAAU,QACzBkE,KAAK,OAAQY,EAAKmC,OAClB/C,KAAK,IAAKY,EAAK+B,QACf3C,KAAK,SAAU,WACfA,KAAK,aAAa,SAAUb,SACpB,aAAewH,EAAW,CAC/BxH,EAAEyB,EAAKiK,SAASpN,MAChB0B,EAAEyB,EAAKgK,SAASnN,QACb,WAwCb1D,EAAS2R,SAAW,SAAUvQ,EAAMkB,EAAS,QACvCC,EAAOnB,EAAKmB,KAAKC,MAAQpB,EAAKmB,KAAKE,MAAQ,GAC3CC,EAAOtB,EAAKuB,QAAQC,SAEpBiE,EAAO,OACAvE,EAAOoG,OAASnG,EAAK,IAAM,cAC3BD,EAAOoB,OAASnB,EAAK,IAAM,cAC3BD,EAAO4E,OAAS,WACf5E,EAAO6E,QAAU,cACd7E,EAAOsP,WAAa,gBACpBtP,EAAOuP,WAAa,oBAClBvP,EAAOwP,aAAe,eACzBxP,EAAOyO,UAAY,yBACpBzO,EAAOyP,SAAW,gBAClBzP,EAAO0P,SAAW,wBACf1P,EAAO2P,YAAc,cACrB3P,EAAO4P,YAAc,UAC1B5P,EAAOgF,OAAS,aACbhF,EAAOoD,UAAY,MAG7BZ,EAAOQ,EACR6M,OACAC,IAAKhN,GAAMA,EAAEyB,EAAK6B,OAAOhF,OACzB2O,OAAQjN,GAAME,EAAGC,IAAIH,EAAIA,GAAM+C,SAAS/C,EAAEyB,EAAKnD,OAAOA,SACtDyB,IAAIzC,EAAM4C,EAAGH,KACZ+C,EAAS5C,EAAG4C,OAAQ5C,EAAGH,IAAIL,GAAMwN,UAErCpS,EAAM4E,OAEF+C,EAAM7H,EAASgG,OAAOa,EAAKnB,SAAU,YAAY3D,OAAO,OACzDkE,KAAK,QAASY,EAAKK,OACnBjB,KAAK,SAAUY,EAAKM,QAEvB7B,EAAGlE,KAAKyF,EAAKkK,UAAU,SAAUwB,OAO3BjL,EANA0J,EAAMD,SAAgBwB,EAAcA,EAAaf,QAAQ3K,EAAKkL,UAAUS,WACxE5F,EAAatH,EAAG0L,IAAIyB,WACrBC,OAAO,CAAC7L,EAAKqL,WAAYrL,EAAKoL,aAC9Bf,UAAU,CAACrK,EAAKK,MAAQ,EAAGL,EAAKM,OAAS,IACzCG,MAAMT,EAAKS,OACVgE,EAAOhG,EAAG0L,IAAI1F,OAAOsB,WAAWA,UAE5B/F,EAAKiL,iBACN,MACHxK,EAAQhC,EAAGgC,MAAMqL,oBAGjBrL,EAAQhC,EAAGgC,MAAMI,aAGjBsB,EAAQ1B,EAAMW,OAAOC,GAAQP,MAAM,CAACd,EAAKgL,UAAWhL,EAAK+K,YAE7D/J,EAAIzB,UAAU,QACX1D,KAAKsO,GACL3K,QACAtE,OAAO,QACPkE,KAAK,IAAKqF,GACVrF,KAAK,SAAU,SACfA,KAAK,eAAgB,IACrBS,MAAM,QAAQ,SAAUtB,EAAG9B,UAEnB0F,EAAMlE,EAAKM,EAAEwN,WAAW/L,EAAKmL,cAGxCnK,EAAIzB,UAAU,gBACX1D,KAAKsO,GACL3K,QACAtE,OAAO,QACPkE,KAAK,YAAa,OAClBA,KAAK,QAAS,eACdA,KAAK,aAAa,SAAUb,OACvByN,EAAMzN,EAAEwN,WAAWE,SACnBC,EAAM3N,EAAEwN,WAAWI,gBAChB,aAAepG,EAAW,CAACmG,EAAKF,IAAQ,OAEhD5M,KAAK,KAAM,UACX9E,KAAMiE,GAAMA,EAAEwN,WAAW/L,EAAKmL,cASrChS,EAASgG,OAAS,SAAUN,EAAUlE,UACvBkE,EAAWJ,EAAGU,OAAON,GAAUuN,KAAK,IAAM3N,EAAGU,OAAO,SACrDjE,OAAO,OAAOkE,KAAK,QAAS,YAAczE,IAIxDxB,EAASkT,OAAS,eACZC,EAAS7N,EAAGU,OAAO,WACnBoN,EAAO9N,EAAGU,OAAO,WACS,SAA1BoN,EAAK1M,MAAM,YACb0M,EAAK1M,MAAM,UAAW,UACtByM,EAAOlN,KAAK,QAAS,qBAErBmN,EAAK1M,MAAM,UAAW,QACtByM,EAAOlN,KAAK,QAAS,uBAKzBjG,EAASqT,YAAc,SAAUlM,GAC/B7B,EAAGU,OAAOsN,KAAKC,cAAc7M,MAAM,SAAUS,EAAS"}